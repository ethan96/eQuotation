'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18444
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18444.
'
Namespace MAMigrationWS
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="MAMigrationSoap", [Namespace]:="MyAdvantechGlobal")>  _
    Partial Public Class MAMigration
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private CATALOG_EditOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CBOM_EditOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SyncPartNoFromSAPOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SyncCompanyIdFromSAPOperationCompleted As System.Threading.SendOrPostCallback
        
        Private HelloKiityOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.EDOC.My.MySettings.Default.EDOC_MAMigrationWS_MAMigration
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event CATALOG_EditCompleted As CATALOG_EditCompletedEventHandler
        
        '''<remarks/>
        Public Event CBOM_EditCompleted As CBOM_EditCompletedEventHandler
        
        '''<remarks/>
        Public Event SyncPartNoFromSAPCompleted As SyncPartNoFromSAPCompletedEventHandler
        
        '''<remarks/>
        Public Event SyncCompanyIdFromSAPCompleted As SyncCompanyIdFromSAPCompletedEventHandler
        
        '''<remarks/>
        Public Event HelloKiityCompleted As HelloKiityCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("MyAdvantechGlobal/CATALOG_Edit", RequestNamespace:="MyAdvantechGlobal", ResponseNamespace:="MyAdvantechGlobal", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CATALOG_Edit(ByVal act As CBOMActions, ByVal CataID As String, ByVal CataName As String, ByVal GroupName As String, ByVal CataDesc As String, ByVal CreatedBy As String, ByVal ImgName As String) As Boolean
            Dim results() As Object = Me.Invoke("CATALOG_Edit", New Object() {act, CataID, CataName, GroupName, CataDesc, CreatedBy, ImgName})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CATALOG_EditAsync(ByVal act As CBOMActions, ByVal CataID As String, ByVal CataName As String, ByVal GroupName As String, ByVal CataDesc As String, ByVal CreatedBy As String, ByVal ImgName As String)
            Me.CATALOG_EditAsync(act, CataID, CataName, GroupName, CataDesc, CreatedBy, ImgName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CATALOG_EditAsync(ByVal act As CBOMActions, ByVal CataID As String, ByVal CataName As String, ByVal GroupName As String, ByVal CataDesc As String, ByVal CreatedBy As String, ByVal ImgName As String, ByVal userState As Object)
            If (Me.CATALOG_EditOperationCompleted Is Nothing) Then
                Me.CATALOG_EditOperationCompleted = AddressOf Me.OnCATALOG_EditOperationCompleted
            End If
            Me.InvokeAsync("CATALOG_Edit", New Object() {act, CataID, CataName, GroupName, CataDesc, CreatedBy, ImgName}, Me.CATALOG_EditOperationCompleted, userState)
        End Sub
        
        Private Sub OnCATALOG_EditOperationCompleted(ByVal arg As Object)
            If (Not (Me.CATALOG_EditCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CATALOG_EditCompleted(Me, New CATALOG_EditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("MyAdvantechGlobal/CBOM_Edit", RequestNamespace:="MyAdvantechGlobal", ResponseNamespace:="MyAdvantechGlobal", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CBOM_Edit(ByVal act As CBOMActions, ByVal CatId As String, ByVal CatType As String, ByVal ParentCatId As String, ByVal CatDesc As String, ByVal ExtDesc As String, ByVal UpdBy As String, ByVal SeqNo As Integer, ByVal ConfigRule As String, ByVal NotExpandCat As String, ByVal ShowHide As String) As Boolean
            Dim results() As Object = Me.Invoke("CBOM_Edit", New Object() {act, CatId, CatType, ParentCatId, CatDesc, ExtDesc, UpdBy, SeqNo, ConfigRule, NotExpandCat, ShowHide})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CBOM_EditAsync(ByVal act As CBOMActions, ByVal CatId As String, ByVal CatType As String, ByVal ParentCatId As String, ByVal CatDesc As String, ByVal ExtDesc As String, ByVal UpdBy As String, ByVal SeqNo As Integer, ByVal ConfigRule As String, ByVal NotExpandCat As String, ByVal ShowHide As String)
            Me.CBOM_EditAsync(act, CatId, CatType, ParentCatId, CatDesc, ExtDesc, UpdBy, SeqNo, ConfigRule, NotExpandCat, ShowHide, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CBOM_EditAsync(ByVal act As CBOMActions, ByVal CatId As String, ByVal CatType As String, ByVal ParentCatId As String, ByVal CatDesc As String, ByVal ExtDesc As String, ByVal UpdBy As String, ByVal SeqNo As Integer, ByVal ConfigRule As String, ByVal NotExpandCat As String, ByVal ShowHide As String, ByVal userState As Object)
            If (Me.CBOM_EditOperationCompleted Is Nothing) Then
                Me.CBOM_EditOperationCompleted = AddressOf Me.OnCBOM_EditOperationCompleted
            End If
            Me.InvokeAsync("CBOM_Edit", New Object() {act, CatId, CatType, ParentCatId, CatDesc, ExtDesc, UpdBy, SeqNo, ConfigRule, NotExpandCat, ShowHide}, Me.CBOM_EditOperationCompleted, userState)
        End Sub
        
        Private Sub OnCBOM_EditOperationCompleted(ByVal arg As Object)
            If (Not (Me.CBOM_EditCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CBOM_EditCompleted(Me, New CBOM_EditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("MyAdvantechGlobal/SyncPartNoFromSAP", RequestNamespace:="MyAdvantechGlobal", ResponseNamespace:="MyAdvantechGlobal", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SyncPartNoFromSAP(ByVal pn As String) As Boolean
            Dim results() As Object = Me.Invoke("SyncPartNoFromSAP", New Object() {pn})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SyncPartNoFromSAPAsync(ByVal pn As String)
            Me.SyncPartNoFromSAPAsync(pn, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SyncPartNoFromSAPAsync(ByVal pn As String, ByVal userState As Object)
            If (Me.SyncPartNoFromSAPOperationCompleted Is Nothing) Then
                Me.SyncPartNoFromSAPOperationCompleted = AddressOf Me.OnSyncPartNoFromSAPOperationCompleted
            End If
            Me.InvokeAsync("SyncPartNoFromSAP", New Object() {pn}, Me.SyncPartNoFromSAPOperationCompleted, userState)
        End Sub
        
        Private Sub OnSyncPartNoFromSAPOperationCompleted(ByVal arg As Object)
            If (Not (Me.SyncPartNoFromSAPCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SyncPartNoFromSAPCompleted(Me, New SyncPartNoFromSAPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("MyAdvantechGlobal/SyncCompanyIdFromSAP", RequestNamespace:="MyAdvantechGlobal", ResponseNamespace:="MyAdvantechGlobal", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SyncCompanyIdFromSAP(ByVal companyid As String) As Boolean
            Dim results() As Object = Me.Invoke("SyncCompanyIdFromSAP", New Object() {companyid})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SyncCompanyIdFromSAPAsync(ByVal companyid As String)
            Me.SyncCompanyIdFromSAPAsync(companyid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SyncCompanyIdFromSAPAsync(ByVal companyid As String, ByVal userState As Object)
            If (Me.SyncCompanyIdFromSAPOperationCompleted Is Nothing) Then
                Me.SyncCompanyIdFromSAPOperationCompleted = AddressOf Me.OnSyncCompanyIdFromSAPOperationCompleted
            End If
            Me.InvokeAsync("SyncCompanyIdFromSAP", New Object() {companyid}, Me.SyncCompanyIdFromSAPOperationCompleted, userState)
        End Sub
        
        Private Sub OnSyncCompanyIdFromSAPOperationCompleted(ByVal arg As Object)
            If (Not (Me.SyncCompanyIdFromSAPCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SyncCompanyIdFromSAPCompleted(Me, New SyncCompanyIdFromSAPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("MyAdvantechGlobal/HelloKiity", RequestNamespace:="MyAdvantechGlobal", ResponseNamespace:="MyAdvantechGlobal", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function HelloKiity() As String
            Dim results() As Object = Me.Invoke("HelloKiity", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub HelloKiityAsync()
            Me.HelloKiityAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub HelloKiityAsync(ByVal userState As Object)
            If (Me.HelloKiityOperationCompleted Is Nothing) Then
                Me.HelloKiityOperationCompleted = AddressOf Me.OnHelloKiityOperationCompleted
            End If
            Me.InvokeAsync("HelloKiity", New Object(-1) {}, Me.HelloKiityOperationCompleted, userState)
        End Sub
        
        Private Sub OnHelloKiityOperationCompleted(ByVal arg As Object)
            If (Not (Me.HelloKiityCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent HelloKiityCompleted(Me, New HelloKiityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="MyAdvantechGlobal")>  _
    Public Enum CBOMActions
        
        '''<remarks/>
        ADD
        
        '''<remarks/>
        UPDATE
        
        '''<remarks/>
        DELETE
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub CATALOG_EditCompletedEventHandler(ByVal sender As Object, ByVal e As CATALOG_EditCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CATALOG_EditCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub CBOM_EditCompletedEventHandler(ByVal sender As Object, ByVal e As CBOM_EditCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CBOM_EditCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub SyncPartNoFromSAPCompletedEventHandler(ByVal sender As Object, ByVal e As SyncPartNoFromSAPCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SyncPartNoFromSAPCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub SyncCompanyIdFromSAPCompletedEventHandler(ByVal sender As Object, ByVal e As SyncCompanyIdFromSAPCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SyncCompanyIdFromSAPCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub HelloKiityCompletedEventHandler(ByVal sender As Object, ByVal e As HelloKiityCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class HelloKiityCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
