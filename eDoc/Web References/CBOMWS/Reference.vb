'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace CBOMWS
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="MyCBOMDALSoap", [Namespace]:="MyAdvantech.SAP.DataAccessLayer")>  _
    Partial Public Class MyCBOMDAL
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private GetCBOMCatalogOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCBOMOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getCatalogListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getCatalogLocalNameOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getCBOMListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getBTOParentListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCBOM2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private GeteStoreCBOMOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCBOMV3OperationCompleted As System.Threading.SendOrPostCallback
        
        Private HelloKittyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.EDOC.My.MySettings.Default.EDOC_CBOMWS_MyCBOMDAL
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event GetCBOMCatalogCompleted As GetCBOMCatalogCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCBOMCompleted As GetCBOMCompletedEventHandler
        
        '''<remarks/>
        Public Event getCatalogListCompleted As getCatalogListCompletedEventHandler
        
        '''<remarks/>
        Public Event getCatalogLocalNameCompleted As getCatalogLocalNameCompletedEventHandler
        
        '''<remarks/>
        Public Event getCBOMListCompleted As getCBOMListCompletedEventHandler
        
        '''<remarks/>
        Public Event getBTOParentListCompleted As getBTOParentListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCBOM2Completed As GetCBOM2CompletedEventHandler
        
        '''<remarks/>
        Public Event GeteStoreCBOMCompleted As GeteStoreCBOMCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCBOMV3Completed As GetCBOMV3CompletedEventHandler
        
        '''<remarks/>
        Public Event HelloKittyCompleted As HelloKittyCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("MyAdvantech.SAP.DataAccessLayer/GetCBOMCatalog", RequestNamespace:="MyAdvantech.SAP.DataAccessLayer", ResponseNamespace:="MyAdvantech.SAP.DataAccessLayer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCBOMCatalog() As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetCBOMCatalog", New Object(-1) {})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCBOMCatalogAsync()
            Me.GetCBOMCatalogAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCBOMCatalogAsync(ByVal userState As Object)
            If (Me.GetCBOMCatalogOperationCompleted Is Nothing) Then
                Me.GetCBOMCatalogOperationCompleted = AddressOf Me.OnGetCBOMCatalogOperationCompleted
            End If
            Me.InvokeAsync("GetCBOMCatalog", New Object(-1) {}, Me.GetCBOMCatalogOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCBOMCatalogOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCBOMCatalogCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCBOMCatalogCompleted(Me, New GetCBOMCatalogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("MyAdvantech.SAP.DataAccessLayer/GetCBOM", RequestNamespace:="MyAdvantech.SAP.DataAccessLayer", ResponseNamespace:="MyAdvantech.SAP.DataAccessLayer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCBOM(ByVal ParentCategoryId As String, ByVal RBU As String, ByVal SAPOrg As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetCBOM", New Object() {ParentCategoryId, RBU, SAPOrg})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCBOMAsync(ByVal ParentCategoryId As String, ByVal RBU As String, ByVal SAPOrg As String)
            Me.GetCBOMAsync(ParentCategoryId, RBU, SAPOrg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCBOMAsync(ByVal ParentCategoryId As String, ByVal RBU As String, ByVal SAPOrg As String, ByVal userState As Object)
            If (Me.GetCBOMOperationCompleted Is Nothing) Then
                Me.GetCBOMOperationCompleted = AddressOf Me.OnGetCBOMOperationCompleted
            End If
            Me.InvokeAsync("GetCBOM", New Object() {ParentCategoryId, RBU, SAPOrg}, Me.GetCBOMOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCBOMOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCBOMCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCBOMCompleted(Me, New GetCBOMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("MyAdvantech.SAP.DataAccessLayer/getCatalogList", RequestNamespace:="MyAdvantech.SAP.DataAccessLayer", ResponseNamespace:="MyAdvantech.SAP.DataAccessLayer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getCatalogList(ByVal RBU As String, ByVal SAPOrg As String) As CBOMDS.CBOM_CATALOGDataTable
            Dim results() As Object = Me.Invoke("getCatalogList", New Object() {RBU, SAPOrg})
            Return CType(results(0),CBOMDS.CBOM_CATALOGDataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getCatalogListAsync(ByVal RBU As String, ByVal SAPOrg As String)
            Me.getCatalogListAsync(RBU, SAPOrg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getCatalogListAsync(ByVal RBU As String, ByVal SAPOrg As String, ByVal userState As Object)
            If (Me.getCatalogListOperationCompleted Is Nothing) Then
                Me.getCatalogListOperationCompleted = AddressOf Me.OngetCatalogListOperationCompleted
            End If
            Me.InvokeAsync("getCatalogList", New Object() {RBU, SAPOrg}, Me.getCatalogListOperationCompleted, userState)
        End Sub
        
        Private Sub OngetCatalogListOperationCompleted(ByVal arg As Object)
            If (Not (Me.getCatalogListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getCatalogListCompleted(Me, New getCatalogListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("MyAdvantech.SAP.DataAccessLayer/getCatalogLocalName", RequestNamespace:="MyAdvantech.SAP.DataAccessLayer", ResponseNamespace:="MyAdvantech.SAP.DataAccessLayer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getCatalogLocalName(ByVal Catalog_type As String, ByVal SAPOrg As String) As String
            Dim results() As Object = Me.Invoke("getCatalogLocalName", New Object() {Catalog_type, SAPOrg})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getCatalogLocalNameAsync(ByVal Catalog_type As String, ByVal SAPOrg As String)
            Me.getCatalogLocalNameAsync(Catalog_type, SAPOrg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getCatalogLocalNameAsync(ByVal Catalog_type As String, ByVal SAPOrg As String, ByVal userState As Object)
            If (Me.getCatalogLocalNameOperationCompleted Is Nothing) Then
                Me.getCatalogLocalNameOperationCompleted = AddressOf Me.OngetCatalogLocalNameOperationCompleted
            End If
            Me.InvokeAsync("getCatalogLocalName", New Object() {Catalog_type, SAPOrg}, Me.getCatalogLocalNameOperationCompleted, userState)
        End Sub
        
        Private Sub OngetCatalogLocalNameOperationCompleted(ByVal arg As Object)
            If (Not (Me.getCatalogLocalNameCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getCatalogLocalNameCompleted(Me, New getCatalogLocalNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("MyAdvantech.SAP.DataAccessLayer/getCBOMList", RequestNamespace:="MyAdvantech.SAP.DataAccessLayer", ResponseNamespace:="MyAdvantech.SAP.DataAccessLayer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getCBOMList(ByVal RBU As String, ByVal SAPOrg As String, ByVal Catalog As String, ByVal CompanyId As String) As CBOMDS.CBOM_CATALOGDataTable
            Dim results() As Object = Me.Invoke("getCBOMList", New Object() {RBU, SAPOrg, Catalog, CompanyId})
            Return CType(results(0),CBOMDS.CBOM_CATALOGDataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getCBOMListAsync(ByVal RBU As String, ByVal SAPOrg As String, ByVal Catalog As String, ByVal CompanyId As String)
            Me.getCBOMListAsync(RBU, SAPOrg, Catalog, CompanyId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getCBOMListAsync(ByVal RBU As String, ByVal SAPOrg As String, ByVal Catalog As String, ByVal CompanyId As String, ByVal userState As Object)
            If (Me.getCBOMListOperationCompleted Is Nothing) Then
                Me.getCBOMListOperationCompleted = AddressOf Me.OngetCBOMListOperationCompleted
            End If
            Me.InvokeAsync("getCBOMList", New Object() {RBU, SAPOrg, Catalog, CompanyId}, Me.getCBOMListOperationCompleted, userState)
        End Sub
        
        Private Sub OngetCBOMListOperationCompleted(ByVal arg As Object)
            If (Not (Me.getCBOMListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getCBOMListCompleted(Me, New getCBOMListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("MyAdvantech.SAP.DataAccessLayer/getBTOParentList", RequestNamespace:="MyAdvantech.SAP.DataAccessLayer", ResponseNamespace:="MyAdvantech.SAP.DataAccessLayer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getBTOParentList(ByVal RBU As String, ByVal SAPOrg As String, ByVal PN As String) As CBOMDS.CBOM_CATALOGDataTable
            Dim results() As Object = Me.Invoke("getBTOParentList", New Object() {RBU, SAPOrg, PN})
            Return CType(results(0),CBOMDS.CBOM_CATALOGDataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getBTOParentListAsync(ByVal RBU As String, ByVal SAPOrg As String, ByVal PN As String)
            Me.getBTOParentListAsync(RBU, SAPOrg, PN, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getBTOParentListAsync(ByVal RBU As String, ByVal SAPOrg As String, ByVal PN As String, ByVal userState As Object)
            If (Me.getBTOParentListOperationCompleted Is Nothing) Then
                Me.getBTOParentListOperationCompleted = AddressOf Me.OngetBTOParentListOperationCompleted
            End If
            Me.InvokeAsync("getBTOParentList", New Object() {RBU, SAPOrg, PN}, Me.getBTOParentListOperationCompleted, userState)
        End Sub
        
        Private Sub OngetBTOParentListOperationCompleted(ByVal arg As Object)
            If (Not (Me.getBTOParentListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getBTOParentListCompleted(Me, New getBTOParentListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("MyAdvantech.SAP.DataAccessLayer/GetCBOM2", RequestNamespace:="MyAdvantech.SAP.DataAccessLayer", ResponseNamespace:="MyAdvantech.SAP.DataAccessLayer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCBOM2(ByVal ParentCategoryId As String, ByVal RBU As String, ByVal SAPOrg As String, ByVal RootId As String) As CBOMDS.CBOM_CATALOG_CATEGORYDataTable
            Dim results() As Object = Me.Invoke("GetCBOM2", New Object() {ParentCategoryId, RBU, SAPOrg, RootId})
            Return CType(results(0),CBOMDS.CBOM_CATALOG_CATEGORYDataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCBOM2Async(ByVal ParentCategoryId As String, ByVal RBU As String, ByVal SAPOrg As String, ByVal RootId As String)
            Me.GetCBOM2Async(ParentCategoryId, RBU, SAPOrg, RootId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCBOM2Async(ByVal ParentCategoryId As String, ByVal RBU As String, ByVal SAPOrg As String, ByVal RootId As String, ByVal userState As Object)
            If (Me.GetCBOM2OperationCompleted Is Nothing) Then
                Me.GetCBOM2OperationCompleted = AddressOf Me.OnGetCBOM2OperationCompleted
            End If
            Me.InvokeAsync("GetCBOM2", New Object() {ParentCategoryId, RBU, SAPOrg, RootId}, Me.GetCBOM2OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCBOM2OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCBOM2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCBOM2Completed(Me, New GetCBOM2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("MyAdvantech.SAP.DataAccessLayer/GeteStoreCBOM", RequestNamespace:="MyAdvantech.SAP.DataAccessLayer", ResponseNamespace:="MyAdvantech.SAP.DataAccessLayer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GeteStoreCBOM(ByVal ParentCategoryId As String, ByVal RBU As String, ByVal SAPOrg As String) As CBOMDS.CBOM_CATALOG_CATEGORYDataTable
            Dim results() As Object = Me.Invoke("GeteStoreCBOM", New Object() {ParentCategoryId, RBU, SAPOrg})
            Return CType(results(0),CBOMDS.CBOM_CATALOG_CATEGORYDataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GeteStoreCBOMAsync(ByVal ParentCategoryId As String, ByVal RBU As String, ByVal SAPOrg As String)
            Me.GeteStoreCBOMAsync(ParentCategoryId, RBU, SAPOrg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GeteStoreCBOMAsync(ByVal ParentCategoryId As String, ByVal RBU As String, ByVal SAPOrg As String, ByVal userState As Object)
            If (Me.GeteStoreCBOMOperationCompleted Is Nothing) Then
                Me.GeteStoreCBOMOperationCompleted = AddressOf Me.OnGeteStoreCBOMOperationCompleted
            End If
            Me.InvokeAsync("GeteStoreCBOM", New Object() {ParentCategoryId, RBU, SAPOrg}, Me.GeteStoreCBOMOperationCompleted, userState)
        End Sub
        
        Private Sub OnGeteStoreCBOMOperationCompleted(ByVal arg As Object)
            If (Not (Me.GeteStoreCBOMCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GeteStoreCBOMCompleted(Me, New GeteStoreCBOMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("MyAdvantech.SAP.DataAccessLayer/GetCBOMV3", RequestNamespace:="MyAdvantech.SAP.DataAccessLayer", ResponseNamespace:="MyAdvantech.SAP.DataAccessLayer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCBOMV3(ByVal ParentCategoryId As String, ByVal RBU As String, ByVal SAPOrg As String) As CBOMDS.CBOM_CATALOG_CATEGORYDataTable
            Dim results() As Object = Me.Invoke("GetCBOMV3", New Object() {ParentCategoryId, RBU, SAPOrg})
            Return CType(results(0),CBOMDS.CBOM_CATALOG_CATEGORYDataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCBOMV3Async(ByVal ParentCategoryId As String, ByVal RBU As String, ByVal SAPOrg As String)
            Me.GetCBOMV3Async(ParentCategoryId, RBU, SAPOrg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCBOMV3Async(ByVal ParentCategoryId As String, ByVal RBU As String, ByVal SAPOrg As String, ByVal userState As Object)
            If (Me.GetCBOMV3OperationCompleted Is Nothing) Then
                Me.GetCBOMV3OperationCompleted = AddressOf Me.OnGetCBOMV3OperationCompleted
            End If
            Me.InvokeAsync("GetCBOMV3", New Object() {ParentCategoryId, RBU, SAPOrg}, Me.GetCBOMV3OperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCBOMV3OperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCBOMV3CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCBOMV3Completed(Me, New GetCBOMV3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("MyAdvantech.SAP.DataAccessLayer/HelloKitty", RequestNamespace:="MyAdvantech.SAP.DataAccessLayer", ResponseNamespace:="MyAdvantech.SAP.DataAccessLayer", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function HelloKitty() As String
            Dim results() As Object = Me.Invoke("HelloKitty", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub HelloKittyAsync()
            Me.HelloKittyAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub HelloKittyAsync(ByVal userState As Object)
            If (Me.HelloKittyOperationCompleted Is Nothing) Then
                Me.HelloKittyOperationCompleted = AddressOf Me.OnHelloKittyOperationCompleted
            End If
            Me.InvokeAsync("HelloKitty", New Object(-1) {}, Me.HelloKittyOperationCompleted, userState)
        End Sub
        
        Private Sub OnHelloKittyOperationCompleted(ByVal arg As Object)
            If (Not (Me.HelloKittyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent HelloKittyCompleted(Me, New HelloKittyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    'This type definition was generated by System.Data.Design.TypedDataSetSchemaImporterExtension schema importer extension.
    '''<summary>
    '''Represents a strongly typed in-memory cache of data.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
     Global.System.Xml.Serialization.XmlRootAttribute("CBOMDS"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
    Partial Public Class CBOMDS
        Inherits Global.System.Data.DataSet
        
        Private tableCBOM_CATALOG_CATEGORY As CBOM_CATALOG_CATEGORYDataTable
        
        Private tableCBOM_CATALOG As CBOM_CATALOGDataTable
        
        Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.BeginInit
            Me.InitClass
            Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
            AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context, false)
            If (Me.IsBinarySerialized(info, context) = true) Then
                Me.InitVars(false)
                Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
                AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
                AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
                Return
            End If
            Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
            If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
                Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
                ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
                If (Not (ds.Tables("CBOM_CATALOG_CATEGORY")) Is Nothing) Then
                    MyBase.Tables.Add(New CBOM_CATALOG_CATEGORYDataTable(ds.Tables("CBOM_CATALOG_CATEGORY")))
                End If
                If (Not (ds.Tables("CBOM_CATALOG")) Is Nothing) Then
                    MyBase.Tables.Add(New CBOM_CATALOGDataTable(ds.Tables("CBOM_CATALOG")))
                End If
                Me.DataSetName = ds.DataSetName
                Me.Prefix = ds.Prefix
                Me.Namespace = ds.Namespace
                Me.Locale = ds.Locale
                Me.CaseSensitive = ds.CaseSensitive
                Me.EnforceConstraints = ds.EnforceConstraints
                Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
                Me.InitVars
            Else
                Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            End If
            Me.GetSerializationData(info, context)
            Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property CBOM_CATALOG_CATEGORY() As CBOM_CATALOG_CATEGORYDataTable
            Get
                Return Me.tableCBOM_CATALOG_CATEGORY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property CBOM_CATALOG() As CBOM_CATALOGDataTable
            Get
                Return Me.tableCBOM_CATALOG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.BrowsableAttribute(true),  _
         Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
        Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
            Get
                Return Me._schemaSerializationMode
            End Get
            Set
                Me._schemaSerializationMode = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
        Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
            Get
                Return MyBase.Tables
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
        Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
            Get
                Return MyBase.Relations
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub InitializeDerivedDataSet()
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataSet
            Dim cln As CBOMDS = CType(MyBase.Clone,CBOMDS)
            cln.InitVars
            cln.SchemaSerializationMode = Me.SchemaSerializationMode
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function ShouldSerializeTables() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function ShouldSerializeRelations() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
            If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
                Me.Reset
                Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
                ds.ReadXml(reader)
                If (Not (ds.Tables("CBOM_CATALOG_CATEGORY")) Is Nothing) Then
                    MyBase.Tables.Add(New CBOM_CATALOG_CATEGORYDataTable(ds.Tables("CBOM_CATALOG_CATEGORY")))
                End If
                If (Not (ds.Tables("CBOM_CATALOG")) Is Nothing) Then
                    MyBase.Tables.Add(New CBOM_CATALOGDataTable(ds.Tables("CBOM_CATALOG")))
                End If
                Me.DataSetName = ds.DataSetName
                Me.Prefix = ds.Prefix
                Me.Namespace = ds.Namespace
                Me.Locale = ds.Locale
                Me.CaseSensitive = ds.CaseSensitive
                Me.EnforceConstraints = ds.EnforceConstraints
                Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
                Me.InitVars
            Else
                Me.ReadXml(reader)
                Me.InitVars
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
            Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
            stream.Position = 0
            Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Overloads Sub InitVars()
            Me.InitVars(true)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Overloads Sub InitVars(ByVal initTable As Boolean)
            Me.tableCBOM_CATALOG_CATEGORY = CType(MyBase.Tables("CBOM_CATALOG_CATEGORY"),CBOM_CATALOG_CATEGORYDataTable)
            If (initTable = true) Then
                If (Not (Me.tableCBOM_CATALOG_CATEGORY) Is Nothing) Then
                    Me.tableCBOM_CATALOG_CATEGORY.InitVars
                End If
            End If
            Me.tableCBOM_CATALOG = CType(MyBase.Tables("CBOM_CATALOG"),CBOM_CATALOGDataTable)
            If (initTable = true) Then
                If (Not (Me.tableCBOM_CATALOG) Is Nothing) Then
                    Me.tableCBOM_CATALOG.InitVars
                End If
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.DataSetName = "CBOMDS"
            Me.Prefix = ""
            Me.Namespace = "http://tempuri.org/CBOMDAL.xsd"
            Me.EnforceConstraints = true
            Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
            Me.tableCBOM_CATALOG_CATEGORY = New CBOM_CATALOG_CATEGORYDataTable()
            MyBase.Tables.Add(Me.tableCBOM_CATALOG_CATEGORY)
            Me.tableCBOM_CATALOG = New CBOM_CATALOGDataTable()
            MyBase.Tables.Add(Me.tableCBOM_CATALOG)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function ShouldSerializeCBOM_CATALOG_CATEGORY() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function ShouldSerializeCBOM_CATALOG() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
            If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
                Me.InitVars
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim ds As CBOMDS = New CBOMDS()
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any.Namespace = ds.Namespace
            sequence.Items.Add(any)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Delegate Sub CBOM_CATALOG_CATEGORYRowChangeEventHandler(ByVal sender As Object, ByVal e As CBOM_CATALOG_CATEGORYRowChangeEvent)
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Delegate Sub CBOM_CATALOGRowChangeEventHandler(ByVal sender As Object, ByVal e As CBOM_CATALOGRowChangeEvent)
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class CBOM_CATALOG_CATEGORYDataTable
            Inherits Global.System.Data.DataTable
            Implements Global.System.Collections.IEnumerable
            
            Private columnPARENT_CATEGORY_ID As Global.System.Data.DataColumn
            
            Private columnCATEGORY_ID As Global.System.Data.DataColumn
            
            Private columnCATEGORY_NAME As Global.System.Data.DataColumn
            
            Private columnCATEGORY_TYPE As Global.System.Data.DataColumn
            
            Private columnCATEGORY_DESC As Global.System.Data.DataColumn
            
            Private columnDISPLAY_NAME As Global.System.Data.DataColumn
            
            Private columnSEQ_NO As Global.System.Data.DataColumn
            
            Private columnDEFAULT_FLAG As Global.System.Data.DataColumn
            
            Private columnCONFIGURATION_RULE As Global.System.Data.DataColumn
            
            Private columnNOT_EXPAND_CATEGORY As Global.System.Data.DataColumn
            
            Private columnSHOW_HIDE As Global.System.Data.DataColumn
            
            Private columnEZ_FLAG As Global.System.Data.DataColumn
            
            Private columnSTATUS_OLD As Global.System.Data.DataColumn
            
            Private columnSHIP_WEIGHT As Global.System.Data.DataColumn
            
            Private columnNET_WEIGHT As Global.System.Data.DataColumn
            
            Private columnMATERIAL_GROUP As Global.System.Data.DataColumn
            
            Private columnRoHS As Global.System.Data.DataColumn
            
            Private columnclass As Global.System.Data.DataColumn
            
            Private columnUID As Global.System.Data.DataColumn
            
            Private columnORG As Global.System.Data.DataColumn
            
            Private columnSTATUS As Global.System.Data.DataColumn
            
            Private columnEXT_DESCRIPTION As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "CBOM_CATALOG_CATEGORY"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property PARENT_CATEGORY_IDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnPARENT_CATEGORY_ID
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property CATEGORY_IDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCATEGORY_ID
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property CATEGORY_NAMEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCATEGORY_NAME
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property CATEGORY_TYPEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCATEGORY_TYPE
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property CATEGORY_DESCColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCATEGORY_DESC
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property DISPLAY_NAMEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDISPLAY_NAME
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property SEQ_NOColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSEQ_NO
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property DEFAULT_FLAGColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDEFAULT_FLAG
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property CONFIGURATION_RULEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCONFIGURATION_RULE
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property NOT_EXPAND_CATEGORYColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnNOT_EXPAND_CATEGORY
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property SHOW_HIDEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSHOW_HIDE
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property EZ_FLAGColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnEZ_FLAG
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property STATUS_OLDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSTATUS_OLD
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property SHIP_WEIGHTColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSHIP_WEIGHT
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property NET_WEIGHTColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnNET_WEIGHT
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property MATERIAL_GROUPColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnMATERIAL_GROUP
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property RoHSColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnRoHS
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property classColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnclass
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property UIDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnUID
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property ORGColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnORG
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property STATUSColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSTATUS
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property EXT_DESCRIPTIONColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnEXT_DESCRIPTION
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As CBOM_CATALOG_CATEGORYRow
                Get
                    Return CType(Me.Rows(index),CBOM_CATALOG_CATEGORYRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Event CBOM_CATALOG_CATEGORYRowChanging As CBOM_CATALOG_CATEGORYRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Event CBOM_CATALOG_CATEGORYRowChanged As CBOM_CATALOG_CATEGORYRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Event CBOM_CATALOG_CATEGORYRowDeleting As CBOM_CATALOG_CATEGORYRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Event CBOM_CATALOG_CATEGORYRowDeleted As CBOM_CATALOG_CATEGORYRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Overloads Sub AddCBOM_CATALOG_CATEGORYRow(ByVal row As CBOM_CATALOG_CATEGORYRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Overloads Function AddCBOM_CATALOG_CATEGORYRow( _
                        ByVal PARENT_CATEGORY_ID As String,  _
                        ByVal CATEGORY_ID As String,  _
                        ByVal CATEGORY_NAME As String,  _
                        ByVal CATEGORY_TYPE As String,  _
                        ByVal CATEGORY_DESC As String,  _
                        ByVal DISPLAY_NAME As String,  _
                        ByVal SEQ_NO As Integer,  _
                        ByVal DEFAULT_FLAG As String,  _
                        ByVal CONFIGURATION_RULE As String,  _
                        ByVal NOT_EXPAND_CATEGORY As String,  _
                        ByVal SHOW_HIDE As Integer,  _
                        ByVal EZ_FLAG As String,  _
                        ByVal STATUS_OLD As String,  _
                        ByVal SHIP_WEIGHT As Integer,  _
                        ByVal NET_WEIGHT As Integer,  _
                        ByVal MATERIAL_GROUP As String,  _
                        ByVal RoHS As String,  _
                        ByVal _class As String,  _
                        ByVal UID As String,  _
                        ByVal ORG As String,  _
                        ByVal STATUS As String,  _
                        ByVal EXT_DESCRIPTION As String) As CBOM_CATALOG_CATEGORYRow
                Dim rowCBOM_CATALOG_CATEGORYRow As CBOM_CATALOG_CATEGORYRow = CType(Me.NewRow,CBOM_CATALOG_CATEGORYRow)
                Dim columnValuesArray() As Object = New Object() {PARENT_CATEGORY_ID, CATEGORY_ID, CATEGORY_NAME, CATEGORY_TYPE, CATEGORY_DESC, DISPLAY_NAME, SEQ_NO, DEFAULT_FLAG, CONFIGURATION_RULE, NOT_EXPAND_CATEGORY, SHOW_HIDE, EZ_FLAG, STATUS_OLD, SHIP_WEIGHT, NET_WEIGHT, MATERIAL_GROUP, RoHS, _class, UID, ORG, STATUS, EXT_DESCRIPTION}
                rowCBOM_CATALOG_CATEGORYRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowCBOM_CATALOG_CATEGORYRow)
                Return rowCBOM_CATALOG_CATEGORYRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
                Return Me.Rows.GetEnumerator
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As CBOM_CATALOG_CATEGORYDataTable = CType(MyBase.Clone,CBOM_CATALOG_CATEGORYDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New CBOM_CATALOG_CATEGORYDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnPARENT_CATEGORY_ID = MyBase.Columns("PARENT_CATEGORY_ID")
                Me.columnCATEGORY_ID = MyBase.Columns("CATEGORY_ID")
                Me.columnCATEGORY_NAME = MyBase.Columns("CATEGORY_NAME")
                Me.columnCATEGORY_TYPE = MyBase.Columns("CATEGORY_TYPE")
                Me.columnCATEGORY_DESC = MyBase.Columns("CATEGORY_DESC")
                Me.columnDISPLAY_NAME = MyBase.Columns("DISPLAY_NAME")
                Me.columnSEQ_NO = MyBase.Columns("SEQ_NO")
                Me.columnDEFAULT_FLAG = MyBase.Columns("DEFAULT_FLAG")
                Me.columnCONFIGURATION_RULE = MyBase.Columns("CONFIGURATION_RULE")
                Me.columnNOT_EXPAND_CATEGORY = MyBase.Columns("NOT_EXPAND_CATEGORY")
                Me.columnSHOW_HIDE = MyBase.Columns("SHOW_HIDE")
                Me.columnEZ_FLAG = MyBase.Columns("EZ_FLAG")
                Me.columnSTATUS_OLD = MyBase.Columns("STATUS_OLD")
                Me.columnSHIP_WEIGHT = MyBase.Columns("SHIP_WEIGHT")
                Me.columnNET_WEIGHT = MyBase.Columns("NET_WEIGHT")
                Me.columnMATERIAL_GROUP = MyBase.Columns("MATERIAL_GROUP")
                Me.columnRoHS = MyBase.Columns("RoHS")
                Me.columnclass = MyBase.Columns("class")
                Me.columnUID = MyBase.Columns("UID")
                Me.columnORG = MyBase.Columns("ORG")
                Me.columnSTATUS = MyBase.Columns("STATUS")
                Me.columnEXT_DESCRIPTION = MyBase.Columns("EXT_DESCRIPTION")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Sub InitClass()
                Me.columnPARENT_CATEGORY_ID = New Global.System.Data.DataColumn("PARENT_CATEGORY_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnPARENT_CATEGORY_ID)
                Me.columnCATEGORY_ID = New Global.System.Data.DataColumn("CATEGORY_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCATEGORY_ID)
                Me.columnCATEGORY_NAME = New Global.System.Data.DataColumn("CATEGORY_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCATEGORY_NAME)
                Me.columnCATEGORY_TYPE = New Global.System.Data.DataColumn("CATEGORY_TYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCATEGORY_TYPE)
                Me.columnCATEGORY_DESC = New Global.System.Data.DataColumn("CATEGORY_DESC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCATEGORY_DESC)
                Me.columnDISPLAY_NAME = New Global.System.Data.DataColumn("DISPLAY_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDISPLAY_NAME)
                Me.columnSEQ_NO = New Global.System.Data.DataColumn("SEQ_NO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSEQ_NO)
                Me.columnDEFAULT_FLAG = New Global.System.Data.DataColumn("DEFAULT_FLAG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDEFAULT_FLAG)
                Me.columnCONFIGURATION_RULE = New Global.System.Data.DataColumn("CONFIGURATION_RULE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCONFIGURATION_RULE)
                Me.columnNOT_EXPAND_CATEGORY = New Global.System.Data.DataColumn("NOT_EXPAND_CATEGORY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnNOT_EXPAND_CATEGORY)
                Me.columnSHOW_HIDE = New Global.System.Data.DataColumn("SHOW_HIDE", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSHOW_HIDE)
                Me.columnEZ_FLAG = New Global.System.Data.DataColumn("EZ_FLAG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnEZ_FLAG)
                Me.columnSTATUS_OLD = New Global.System.Data.DataColumn("STATUS_OLD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSTATUS_OLD)
                Me.columnSHIP_WEIGHT = New Global.System.Data.DataColumn("SHIP_WEIGHT", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSHIP_WEIGHT)
                Me.columnNET_WEIGHT = New Global.System.Data.DataColumn("NET_WEIGHT", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnNET_WEIGHT)
                Me.columnMATERIAL_GROUP = New Global.System.Data.DataColumn("MATERIAL_GROUP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnMATERIAL_GROUP)
                Me.columnRoHS = New Global.System.Data.DataColumn("RoHS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnRoHS)
                Me.columnclass = New Global.System.Data.DataColumn("class", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                Me.columnclass.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "classColumn")
                Me.columnclass.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnclass")
                Me.columnclass.ExtendedProperties.Add("Generator_UserColumnName", "class")
                MyBase.Columns.Add(Me.columnclass)
                Me.columnUID = New Global.System.Data.DataColumn("UID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnUID)
                Me.columnORG = New Global.System.Data.DataColumn("ORG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnORG)
                Me.columnSTATUS = New Global.System.Data.DataColumn("STATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSTATUS)
                Me.columnEXT_DESCRIPTION = New Global.System.Data.DataColumn("EXT_DESCRIPTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnEXT_DESCRIPTION)
                Me.columnPARENT_CATEGORY_ID.AllowDBNull = false
                Me.columnPARENT_CATEGORY_ID.MaxLength = 500
                Me.columnCATEGORY_ID.AllowDBNull = false
                Me.columnCATEGORY_ID.MaxLength = 800
                Me.columnCATEGORY_NAME.MaxLength = 800
                Me.columnCATEGORY_TYPE.MaxLength = 50
                Me.columnCATEGORY_DESC.MaxLength = 350
                Me.columnDISPLAY_NAME.ReadOnly = true
                Me.columnDISPLAY_NAME.MaxLength = 255
                Me.columnSEQ_NO.ReadOnly = true
                Me.columnDEFAULT_FLAG.ReadOnly = true
                Me.columnDEFAULT_FLAG.MaxLength = 1
                Me.columnCONFIGURATION_RULE.ReadOnly = true
                Me.columnCONFIGURATION_RULE.MaxLength = 200
                Me.columnNOT_EXPAND_CATEGORY.ReadOnly = true
                Me.columnNOT_EXPAND_CATEGORY.MaxLength = 800
                Me.columnSHOW_HIDE.ReadOnly = true
                Me.columnEZ_FLAG.ReadOnly = true
                Me.columnEZ_FLAG.MaxLength = 1
                Me.columnSTATUS_OLD.ReadOnly = true
                Me.columnSTATUS_OLD.MaxLength = 50
                Me.columnSHIP_WEIGHT.ReadOnly = true
                Me.columnNET_WEIGHT.ReadOnly = true
                Me.columnMATERIAL_GROUP.ReadOnly = true
                Me.columnMATERIAL_GROUP.MaxLength = 27
                Me.columnRoHS.ReadOnly = true
                Me.columnRoHS.MaxLength = 1
                Me.columnclass.ReadOnly = true
                Me.columnclass.MaxLength = 1
                Me.columnUID.MaxLength = 200
                Me.columnORG.MaxLength = 10
                Me.columnSTATUS.ReadOnly = true
                Me.columnSTATUS.MaxLength = 1
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function NewCBOM_CATALOG_CATEGORYRow() As CBOM_CATALOG_CATEGORYRow
                Return CType(Me.NewRow,CBOM_CATALOG_CATEGORYRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New CBOM_CATALOG_CATEGORYRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(CBOM_CATALOG_CATEGORYRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.CBOM_CATALOG_CATEGORYRowChangedEvent) Is Nothing) Then
                    RaiseEvent CBOM_CATALOG_CATEGORYRowChanged(Me, New CBOM_CATALOG_CATEGORYRowChangeEvent(CType(e.Row,CBOM_CATALOG_CATEGORYRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.CBOM_CATALOG_CATEGORYRowChangingEvent) Is Nothing) Then
                    RaiseEvent CBOM_CATALOG_CATEGORYRowChanging(Me, New CBOM_CATALOG_CATEGORYRowChangeEvent(CType(e.Row,CBOM_CATALOG_CATEGORYRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.CBOM_CATALOG_CATEGORYRowDeletedEvent) Is Nothing) Then
                    RaiseEvent CBOM_CATALOG_CATEGORYRowDeleted(Me, New CBOM_CATALOG_CATEGORYRowChangeEvent(CType(e.Row,CBOM_CATALOG_CATEGORYRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.CBOM_CATALOG_CATEGORYRowDeletingEvent) Is Nothing) Then
                    RaiseEvent CBOM_CATALOG_CATEGORYRowDeleting(Me, New CBOM_CATALOG_CATEGORYRowChangeEvent(CType(e.Row,CBOM_CATALOG_CATEGORYRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub RemoveCBOM_CATALOG_CATEGORYRow(ByVal row As CBOM_CATALOG_CATEGORYRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As CBOMDS = New CBOMDS()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "CBOM_CATALOG_CATEGORYDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class CBOM_CATALOGDataTable
            Inherits Global.System.Data.DataTable
            Implements Global.System.Collections.IEnumerable
            
            Private columnCATALOG_ID As Global.System.Data.DataColumn
            
            Private columnCATALOG_NAME As Global.System.Data.DataColumn
            
            Private columnCATALOG_TYPE As Global.System.Data.DataColumn
            
            Private columnCATALOG_ORG As Global.System.Data.DataColumn
            
            Private columnCATALOG_DESC As Global.System.Data.DataColumn
            
            Private columnIMAGE_ID As Global.System.Data.DataColumn
            
            Private columnUID As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "CBOM_CATALOG"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property CATALOG_IDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCATALOG_ID
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property CATALOG_NAMEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCATALOG_NAME
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property CATALOG_TYPEColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCATALOG_TYPE
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property CATALOG_ORGColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCATALOG_ORG
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property CATALOG_DESCColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCATALOG_DESC
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property IMAGE_IDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnIMAGE_ID
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property UIDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnUID
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As CBOM_CATALOGRow
                Get
                    Return CType(Me.Rows(index),CBOM_CATALOGRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Event CBOM_CATALOGRowChanging As CBOM_CATALOGRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Event CBOM_CATALOGRowChanged As CBOM_CATALOGRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Event CBOM_CATALOGRowDeleting As CBOM_CATALOGRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Event CBOM_CATALOGRowDeleted As CBOM_CATALOGRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Overloads Sub AddCBOM_CATALOGRow(ByVal row As CBOM_CATALOGRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Overloads Function AddCBOM_CATALOGRow(ByVal CATALOG_ID As String, ByVal CATALOG_NAME As String, ByVal CATALOG_TYPE As String, ByVal CATALOG_ORG As String, ByVal CATALOG_DESC As String, ByVal IMAGE_ID As String, ByVal UID As String) As CBOM_CATALOGRow
                Dim rowCBOM_CATALOGRow As CBOM_CATALOGRow = CType(Me.NewRow,CBOM_CATALOGRow)
                Dim columnValuesArray() As Object = New Object() {CATALOG_ID, CATALOG_NAME, CATALOG_TYPE, CATALOG_ORG, CATALOG_DESC, IMAGE_ID, UID}
                rowCBOM_CATALOGRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowCBOM_CATALOGRow)
                Return rowCBOM_CATALOGRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
                Return Me.Rows.GetEnumerator
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As CBOM_CATALOGDataTable = CType(MyBase.Clone,CBOM_CATALOGDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New CBOM_CATALOGDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnCATALOG_ID = MyBase.Columns("CATALOG_ID")
                Me.columnCATALOG_NAME = MyBase.Columns("CATALOG_NAME")
                Me.columnCATALOG_TYPE = MyBase.Columns("CATALOG_TYPE")
                Me.columnCATALOG_ORG = MyBase.Columns("CATALOG_ORG")
                Me.columnCATALOG_DESC = MyBase.Columns("CATALOG_DESC")
                Me.columnIMAGE_ID = MyBase.Columns("IMAGE_ID")
                Me.columnUID = MyBase.Columns("UID")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Sub InitClass()
                Me.columnCATALOG_ID = New Global.System.Data.DataColumn("CATALOG_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCATALOG_ID)
                Me.columnCATALOG_NAME = New Global.System.Data.DataColumn("CATALOG_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCATALOG_NAME)
                Me.columnCATALOG_TYPE = New Global.System.Data.DataColumn("CATALOG_TYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCATALOG_TYPE)
                Me.columnCATALOG_ORG = New Global.System.Data.DataColumn("CATALOG_ORG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCATALOG_ORG)
                Me.columnCATALOG_DESC = New Global.System.Data.DataColumn("CATALOG_DESC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCATALOG_DESC)
                Me.columnIMAGE_ID = New Global.System.Data.DataColumn("IMAGE_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnIMAGE_ID)
                Me.columnUID = New Global.System.Data.DataColumn("UID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnUID)
                Me.columnCATALOG_ID.DefaultValue = CType("",String)
                Me.columnCATALOG_NAME.DefaultValue = CType("",String)
                Me.columnCATALOG_TYPE.DefaultValue = CType("",String)
                Me.columnCATALOG_ORG.DefaultValue = CType("",String)
                Me.columnCATALOG_DESC.DefaultValue = CType("",String)
                Me.columnIMAGE_ID.DefaultValue = CType("",String)
                Me.columnUID.DefaultValue = CType("",String)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function NewCBOM_CATALOGRow() As CBOM_CATALOGRow
                Return CType(Me.NewRow,CBOM_CATALOGRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New CBOM_CATALOGRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(CBOM_CATALOGRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.CBOM_CATALOGRowChangedEvent) Is Nothing) Then
                    RaiseEvent CBOM_CATALOGRowChanged(Me, New CBOM_CATALOGRowChangeEvent(CType(e.Row,CBOM_CATALOGRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.CBOM_CATALOGRowChangingEvent) Is Nothing) Then
                    RaiseEvent CBOM_CATALOGRowChanging(Me, New CBOM_CATALOGRowChangeEvent(CType(e.Row,CBOM_CATALOGRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.CBOM_CATALOGRowDeletedEvent) Is Nothing) Then
                    RaiseEvent CBOM_CATALOGRowDeleted(Me, New CBOM_CATALOGRowChangeEvent(CType(e.Row,CBOM_CATALOGRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.CBOM_CATALOGRowDeletingEvent) Is Nothing) Then
                    RaiseEvent CBOM_CATALOGRowDeleting(Me, New CBOM_CATALOGRowChangeEvent(CType(e.Row,CBOM_CATALOGRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub RemoveCBOM_CATALOGRow(ByVal row As CBOM_CATALOGRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As CBOMDS = New CBOMDS()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "CBOM_CATALOGDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class CBOM_CATALOG_CATEGORYRow
            Inherits Global.System.Data.DataRow
            
            Private tableCBOM_CATALOG_CATEGORY As CBOM_CATALOG_CATEGORYDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableCBOM_CATALOG_CATEGORY = CType(Me.Table,CBOM_CATALOG_CATEGORYDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property PARENT_CATEGORY_ID() As String
                Get
                    Return CType(Me(Me.tableCBOM_CATALOG_CATEGORY.PARENT_CATEGORY_IDColumn),String)
                End Get
                Set
                    Me(Me.tableCBOM_CATALOG_CATEGORY.PARENT_CATEGORY_IDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property CATEGORY_ID() As String
                Get
                    Return CType(Me(Me.tableCBOM_CATALOG_CATEGORY.CATEGORY_IDColumn),String)
                End Get
                Set
                    Me(Me.tableCBOM_CATALOG_CATEGORY.CATEGORY_IDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property CATEGORY_NAME() As String
                Get
                    Try 
                        Return CType(Me(Me.tableCBOM_CATALOG_CATEGORY.CATEGORY_NAMEColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'CATEGORY_NAME' in table 'CBOM_CATALOG_CATEGORY' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableCBOM_CATALOG_CATEGORY.CATEGORY_NAMEColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property CATEGORY_TYPE() As String
                Get
                    Try 
                        Return CType(Me(Me.tableCBOM_CATALOG_CATEGORY.CATEGORY_TYPEColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'CATEGORY_TYPE' in table 'CBOM_CATALOG_CATEGORY' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableCBOM_CATALOG_CATEGORY.CATEGORY_TYPEColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property CATEGORY_DESC() As String
                Get
                    Try 
                        Return CType(Me(Me.tableCBOM_CATALOG_CATEGORY.CATEGORY_DESCColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'CATEGORY_DESC' in table 'CBOM_CATALOG_CATEGORY' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableCBOM_CATALOG_CATEGORY.CATEGORY_DESCColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property DISPLAY_NAME() As String
                Get
                    Try 
                        Return CType(Me(Me.tableCBOM_CATALOG_CATEGORY.DISPLAY_NAMEColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'DISPLAY_NAME' in table 'CBOM_CATALOG_CATEGORY' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableCBOM_CATALOG_CATEGORY.DISPLAY_NAMEColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property SEQ_NO() As Integer
                Get
                    Try 
                        Return CType(Me(Me.tableCBOM_CATALOG_CATEGORY.SEQ_NOColumn),Integer)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'SEQ_NO' in table 'CBOM_CATALOG_CATEGORY' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableCBOM_CATALOG_CATEGORY.SEQ_NOColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property DEFAULT_FLAG() As String
                Get
                    Try 
                        Return CType(Me(Me.tableCBOM_CATALOG_CATEGORY.DEFAULT_FLAGColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'DEFAULT_FLAG' in table 'CBOM_CATALOG_CATEGORY' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableCBOM_CATALOG_CATEGORY.DEFAULT_FLAGColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property CONFIGURATION_RULE() As String
                Get
                    Try 
                        Return CType(Me(Me.tableCBOM_CATALOG_CATEGORY.CONFIGURATION_RULEColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'CONFIGURATION_RULE' in table 'CBOM_CATALOG_CATEGORY' is DBN"& _ 
                                "ull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableCBOM_CATALOG_CATEGORY.CONFIGURATION_RULEColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property NOT_EXPAND_CATEGORY() As String
                Get
                    Try 
                        Return CType(Me(Me.tableCBOM_CATALOG_CATEGORY.NOT_EXPAND_CATEGORYColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'NOT_EXPAND_CATEGORY' in table 'CBOM_CATALOG_CATEGORY' is DB"& _ 
                                "Null.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableCBOM_CATALOG_CATEGORY.NOT_EXPAND_CATEGORYColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property SHOW_HIDE() As Integer
                Get
                    Try 
                        Return CType(Me(Me.tableCBOM_CATALOG_CATEGORY.SHOW_HIDEColumn),Integer)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'SHOW_HIDE' in table 'CBOM_CATALOG_CATEGORY' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableCBOM_CATALOG_CATEGORY.SHOW_HIDEColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property EZ_FLAG() As String
                Get
                    Try 
                        Return CType(Me(Me.tableCBOM_CATALOG_CATEGORY.EZ_FLAGColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'EZ_FLAG' in table 'CBOM_CATALOG_CATEGORY' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableCBOM_CATALOG_CATEGORY.EZ_FLAGColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property STATUS_OLD() As String
                Get
                    Try 
                        Return CType(Me(Me.tableCBOM_CATALOG_CATEGORY.STATUS_OLDColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'STATUS_OLD' in table 'CBOM_CATALOG_CATEGORY' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableCBOM_CATALOG_CATEGORY.STATUS_OLDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property SHIP_WEIGHT() As Integer
                Get
                    Try 
                        Return CType(Me(Me.tableCBOM_CATALOG_CATEGORY.SHIP_WEIGHTColumn),Integer)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'SHIP_WEIGHT' in table 'CBOM_CATALOG_CATEGORY' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableCBOM_CATALOG_CATEGORY.SHIP_WEIGHTColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property NET_WEIGHT() As Integer
                Get
                    Try 
                        Return CType(Me(Me.tableCBOM_CATALOG_CATEGORY.NET_WEIGHTColumn),Integer)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'NET_WEIGHT' in table 'CBOM_CATALOG_CATEGORY' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableCBOM_CATALOG_CATEGORY.NET_WEIGHTColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property MATERIAL_GROUP() As String
                Get
                    Try 
                        Return CType(Me(Me.tableCBOM_CATALOG_CATEGORY.MATERIAL_GROUPColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'MATERIAL_GROUP' in table 'CBOM_CATALOG_CATEGORY' is DBNull."& _ 
                                "", e)
                    End Try
                End Get
                Set
                    Me(Me.tableCBOM_CATALOG_CATEGORY.MATERIAL_GROUPColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property RoHS() As String
                Get
                    Try 
                        Return CType(Me(Me.tableCBOM_CATALOG_CATEGORY.RoHSColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'RoHS' in table 'CBOM_CATALOG_CATEGORY' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableCBOM_CATALOG_CATEGORY.RoHSColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property _class() As String
                Get
                    Try 
                        Return CType(Me(Me.tableCBOM_CATALOG_CATEGORY.classColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'class' in table 'CBOM_CATALOG_CATEGORY' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableCBOM_CATALOG_CATEGORY.classColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property UID() As String
                Get
                    Try 
                        Return CType(Me(Me.tableCBOM_CATALOG_CATEGORY.UIDColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'UID' in table 'CBOM_CATALOG_CATEGORY' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableCBOM_CATALOG_CATEGORY.UIDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property ORG() As String
                Get
                    Try 
                        Return CType(Me(Me.tableCBOM_CATALOG_CATEGORY.ORGColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'ORG' in table 'CBOM_CATALOG_CATEGORY' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableCBOM_CATALOG_CATEGORY.ORGColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property STATUS() As String
                Get
                    Try 
                        Return CType(Me(Me.tableCBOM_CATALOG_CATEGORY.STATUSColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'STATUS' in table 'CBOM_CATALOG_CATEGORY' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableCBOM_CATALOG_CATEGORY.STATUSColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property EXT_DESCRIPTION() As String
                Get
                    Try 
                        Return CType(Me(Me.tableCBOM_CATALOG_CATEGORY.EXT_DESCRIPTIONColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'EXT_DESCRIPTION' in table 'CBOM_CATALOG_CATEGORY' is DBNull"& _ 
                                ".", e)
                    End Try
                End Get
                Set
                    Me(Me.tableCBOM_CATALOG_CATEGORY.EXT_DESCRIPTIONColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsCATEGORY_NAMENull() As Boolean
                Return Me.IsNull(Me.tableCBOM_CATALOG_CATEGORY.CATEGORY_NAMEColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetCATEGORY_NAMENull()
                Me(Me.tableCBOM_CATALOG_CATEGORY.CATEGORY_NAMEColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsCATEGORY_TYPENull() As Boolean
                Return Me.IsNull(Me.tableCBOM_CATALOG_CATEGORY.CATEGORY_TYPEColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetCATEGORY_TYPENull()
                Me(Me.tableCBOM_CATALOG_CATEGORY.CATEGORY_TYPEColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsCATEGORY_DESCNull() As Boolean
                Return Me.IsNull(Me.tableCBOM_CATALOG_CATEGORY.CATEGORY_DESCColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetCATEGORY_DESCNull()
                Me(Me.tableCBOM_CATALOG_CATEGORY.CATEGORY_DESCColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsDISPLAY_NAMENull() As Boolean
                Return Me.IsNull(Me.tableCBOM_CATALOG_CATEGORY.DISPLAY_NAMEColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetDISPLAY_NAMENull()
                Me(Me.tableCBOM_CATALOG_CATEGORY.DISPLAY_NAMEColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsSEQ_NONull() As Boolean
                Return Me.IsNull(Me.tableCBOM_CATALOG_CATEGORY.SEQ_NOColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetSEQ_NONull()
                Me(Me.tableCBOM_CATALOG_CATEGORY.SEQ_NOColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsDEFAULT_FLAGNull() As Boolean
                Return Me.IsNull(Me.tableCBOM_CATALOG_CATEGORY.DEFAULT_FLAGColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetDEFAULT_FLAGNull()
                Me(Me.tableCBOM_CATALOG_CATEGORY.DEFAULT_FLAGColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsCONFIGURATION_RULENull() As Boolean
                Return Me.IsNull(Me.tableCBOM_CATALOG_CATEGORY.CONFIGURATION_RULEColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetCONFIGURATION_RULENull()
                Me(Me.tableCBOM_CATALOG_CATEGORY.CONFIGURATION_RULEColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsNOT_EXPAND_CATEGORYNull() As Boolean
                Return Me.IsNull(Me.tableCBOM_CATALOG_CATEGORY.NOT_EXPAND_CATEGORYColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetNOT_EXPAND_CATEGORYNull()
                Me(Me.tableCBOM_CATALOG_CATEGORY.NOT_EXPAND_CATEGORYColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsSHOW_HIDENull() As Boolean
                Return Me.IsNull(Me.tableCBOM_CATALOG_CATEGORY.SHOW_HIDEColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetSHOW_HIDENull()
                Me(Me.tableCBOM_CATALOG_CATEGORY.SHOW_HIDEColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsEZ_FLAGNull() As Boolean
                Return Me.IsNull(Me.tableCBOM_CATALOG_CATEGORY.EZ_FLAGColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetEZ_FLAGNull()
                Me(Me.tableCBOM_CATALOG_CATEGORY.EZ_FLAGColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsSTATUS_OLDNull() As Boolean
                Return Me.IsNull(Me.tableCBOM_CATALOG_CATEGORY.STATUS_OLDColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetSTATUS_OLDNull()
                Me(Me.tableCBOM_CATALOG_CATEGORY.STATUS_OLDColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsSHIP_WEIGHTNull() As Boolean
                Return Me.IsNull(Me.tableCBOM_CATALOG_CATEGORY.SHIP_WEIGHTColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetSHIP_WEIGHTNull()
                Me(Me.tableCBOM_CATALOG_CATEGORY.SHIP_WEIGHTColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsNET_WEIGHTNull() As Boolean
                Return Me.IsNull(Me.tableCBOM_CATALOG_CATEGORY.NET_WEIGHTColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetNET_WEIGHTNull()
                Me(Me.tableCBOM_CATALOG_CATEGORY.NET_WEIGHTColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsMATERIAL_GROUPNull() As Boolean
                Return Me.IsNull(Me.tableCBOM_CATALOG_CATEGORY.MATERIAL_GROUPColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetMATERIAL_GROUPNull()
                Me(Me.tableCBOM_CATALOG_CATEGORY.MATERIAL_GROUPColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsRoHSNull() As Boolean
                Return Me.IsNull(Me.tableCBOM_CATALOG_CATEGORY.RoHSColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetRoHSNull()
                Me(Me.tableCBOM_CATALOG_CATEGORY.RoHSColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function Is_classNull() As Boolean
                Return Me.IsNull(Me.tableCBOM_CATALOG_CATEGORY.classColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub Set_classNull()
                Me(Me.tableCBOM_CATALOG_CATEGORY.classColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsUIDNull() As Boolean
                Return Me.IsNull(Me.tableCBOM_CATALOG_CATEGORY.UIDColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetUIDNull()
                Me(Me.tableCBOM_CATALOG_CATEGORY.UIDColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsORGNull() As Boolean
                Return Me.IsNull(Me.tableCBOM_CATALOG_CATEGORY.ORGColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetORGNull()
                Me(Me.tableCBOM_CATALOG_CATEGORY.ORGColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsSTATUSNull() As Boolean
                Return Me.IsNull(Me.tableCBOM_CATALOG_CATEGORY.STATUSColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetSTATUSNull()
                Me(Me.tableCBOM_CATALOG_CATEGORY.STATUSColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsEXT_DESCRIPTIONNull() As Boolean
                Return Me.IsNull(Me.tableCBOM_CATALOG_CATEGORY.EXT_DESCRIPTIONColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetEXT_DESCRIPTIONNull()
                Me(Me.tableCBOM_CATALOG_CATEGORY.EXT_DESCRIPTIONColumn) = Global.System.Convert.DBNull
            End Sub
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class CBOM_CATALOGRow
            Inherits Global.System.Data.DataRow
            
            Private tableCBOM_CATALOG As CBOM_CATALOGDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableCBOM_CATALOG = CType(Me.Table,CBOM_CATALOGDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property CATALOG_ID() As String
                Get
                    Try 
                        Return CType(Me(Me.tableCBOM_CATALOG.CATALOG_IDColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'CATALOG_ID' in table 'CBOM_CATALOG' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableCBOM_CATALOG.CATALOG_IDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property CATALOG_NAME() As String
                Get
                    Try 
                        Return CType(Me(Me.tableCBOM_CATALOG.CATALOG_NAMEColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'CATALOG_NAME' in table 'CBOM_CATALOG' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableCBOM_CATALOG.CATALOG_NAMEColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property CATALOG_TYPE() As String
                Get
                    Try 
                        Return CType(Me(Me.tableCBOM_CATALOG.CATALOG_TYPEColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'CATALOG_TYPE' in table 'CBOM_CATALOG' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableCBOM_CATALOG.CATALOG_TYPEColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property CATALOG_ORG() As String
                Get
                    Try 
                        Return CType(Me(Me.tableCBOM_CATALOG.CATALOG_ORGColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'CATALOG_ORG' in table 'CBOM_CATALOG' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableCBOM_CATALOG.CATALOG_ORGColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property CATALOG_DESC() As String
                Get
                    Try 
                        Return CType(Me(Me.tableCBOM_CATALOG.CATALOG_DESCColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'CATALOG_DESC' in table 'CBOM_CATALOG' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableCBOM_CATALOG.CATALOG_DESCColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property IMAGE_ID() As String
                Get
                    Try 
                        Return CType(Me(Me.tableCBOM_CATALOG.IMAGE_IDColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'IMAGE_ID' in table 'CBOM_CATALOG' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableCBOM_CATALOG.IMAGE_IDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Property UID() As String
                Get
                    Try 
                        Return CType(Me(Me.tableCBOM_CATALOG.UIDColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'UID' in table 'CBOM_CATALOG' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableCBOM_CATALOG.UIDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsCATALOG_IDNull() As Boolean
                Return Me.IsNull(Me.tableCBOM_CATALOG.CATALOG_IDColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetCATALOG_IDNull()
                Me(Me.tableCBOM_CATALOG.CATALOG_IDColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsCATALOG_NAMENull() As Boolean
                Return Me.IsNull(Me.tableCBOM_CATALOG.CATALOG_NAMEColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetCATALOG_NAMENull()
                Me(Me.tableCBOM_CATALOG.CATALOG_NAMEColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsCATALOG_TYPENull() As Boolean
                Return Me.IsNull(Me.tableCBOM_CATALOG.CATALOG_TYPEColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetCATALOG_TYPENull()
                Me(Me.tableCBOM_CATALOG.CATALOG_TYPEColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsCATALOG_ORGNull() As Boolean
                Return Me.IsNull(Me.tableCBOM_CATALOG.CATALOG_ORGColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetCATALOG_ORGNull()
                Me(Me.tableCBOM_CATALOG.CATALOG_ORGColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsCATALOG_DESCNull() As Boolean
                Return Me.IsNull(Me.tableCBOM_CATALOG.CATALOG_DESCColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetCATALOG_DESCNull()
                Me(Me.tableCBOM_CATALOG.CATALOG_DESCColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsIMAGE_IDNull() As Boolean
                Return Me.IsNull(Me.tableCBOM_CATALOG.IMAGE_IDColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetIMAGE_IDNull()
                Me(Me.tableCBOM_CATALOG.IMAGE_IDColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function IsUIDNull() As Boolean
                Return Me.IsNull(Me.tableCBOM_CATALOG.UIDColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub SetUIDNull()
                Me(Me.tableCBOM_CATALOG.UIDColumn) = Global.System.Convert.DBNull
            End Sub
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Class CBOM_CATALOG_CATEGORYRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As CBOM_CATALOG_CATEGORYRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub New(ByVal row As CBOM_CATALOG_CATEGORYRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property Row() As CBOM_CATALOG_CATEGORYRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Class CBOM_CATALOGRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As CBOM_CATALOGRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Sub New(ByVal row As CBOM_CATALOGRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property Row() As CBOM_CATALOGRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")>  _
    Public Delegate Sub GetCBOMCatalogCompletedEventHandler(ByVal sender As Object, ByVal e As GetCBOMCatalogCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCBOMCatalogCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")>  _
    Public Delegate Sub GetCBOMCompletedEventHandler(ByVal sender As Object, ByVal e As GetCBOMCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCBOMCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")>  _
    Public Delegate Sub getCatalogListCompletedEventHandler(ByVal sender As Object, ByVal e As getCatalogListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getCatalogListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CBOMDS.CBOM_CATALOGDataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CBOMDS.CBOM_CATALOGDataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")>  _
    Public Delegate Sub getCatalogLocalNameCompletedEventHandler(ByVal sender As Object, ByVal e As getCatalogLocalNameCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getCatalogLocalNameCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")>  _
    Public Delegate Sub getCBOMListCompletedEventHandler(ByVal sender As Object, ByVal e As getCBOMListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getCBOMListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CBOMDS.CBOM_CATALOGDataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CBOMDS.CBOM_CATALOGDataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")>  _
    Public Delegate Sub getBTOParentListCompletedEventHandler(ByVal sender As Object, ByVal e As getBTOParentListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getBTOParentListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CBOMDS.CBOM_CATALOGDataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CBOMDS.CBOM_CATALOGDataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")>  _
    Public Delegate Sub GetCBOM2CompletedEventHandler(ByVal sender As Object, ByVal e As GetCBOM2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCBOM2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CBOMDS.CBOM_CATALOG_CATEGORYDataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CBOMDS.CBOM_CATALOG_CATEGORYDataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")>  _
    Public Delegate Sub GeteStoreCBOMCompletedEventHandler(ByVal sender As Object, ByVal e As GeteStoreCBOMCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GeteStoreCBOMCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CBOMDS.CBOM_CATALOG_CATEGORYDataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CBOMDS.CBOM_CATALOG_CATEGORYDataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")>  _
    Public Delegate Sub GetCBOMV3CompletedEventHandler(ByVal sender As Object, ByVal e As GetCBOMV3CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCBOMV3CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As CBOMDS.CBOM_CATALOG_CATEGORYDataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),CBOMDS.CBOM_CATALOG_CATEGORYDataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")>  _
    Public Delegate Sub HelloKittyCompletedEventHandler(ByVal sender As Object, ByVal e As HelloKittyCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class HelloKittyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
End Namespace
