'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18444
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("SiebelDS"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class SiebelDS
    Inherits Global.System.Data.DataSet
    
    Private tableSIEBEL_ACCOUNT As SIEBEL_ACCOUNTDataTable
    
    Private tableSIEBEL_CONTACT As SIEBEL_CONTACTDataTable
    
    Private tableSIEBEL_OPPORTUNITY As SIEBEL_OPPORTUNITYDataTable
    
    Private tableSiebelWSFailedLog As SiebelWSFailedLogDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("SIEBEL_ACCOUNT")) Is Nothing) Then
                MyBase.Tables.Add(New SIEBEL_ACCOUNTDataTable(ds.Tables("SIEBEL_ACCOUNT")))
            End If
            If (Not (ds.Tables("SIEBEL_CONTACT")) Is Nothing) Then
                MyBase.Tables.Add(New SIEBEL_CONTACTDataTable(ds.Tables("SIEBEL_CONTACT")))
            End If
            If (Not (ds.Tables("SIEBEL_OPPORTUNITY")) Is Nothing) Then
                MyBase.Tables.Add(New SIEBEL_OPPORTUNITYDataTable(ds.Tables("SIEBEL_OPPORTUNITY")))
            End If
            If (Not (ds.Tables("SiebelWSFailedLog")) Is Nothing) Then
                MyBase.Tables.Add(New SiebelWSFailedLogDataTable(ds.Tables("SiebelWSFailedLog")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SIEBEL_ACCOUNT() As SIEBEL_ACCOUNTDataTable
        Get
            Return Me.tableSIEBEL_ACCOUNT
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SIEBEL_CONTACT() As SIEBEL_CONTACTDataTable
        Get
            Return Me.tableSIEBEL_CONTACT
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SIEBEL_OPPORTUNITY() As SIEBEL_OPPORTUNITYDataTable
        Get
            Return Me.tableSIEBEL_OPPORTUNITY
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SiebelWSFailedLog() As SiebelWSFailedLogDataTable
        Get
            Return Me.tableSiebelWSFailedLog
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As SiebelDS = CType(MyBase.Clone,SiebelDS)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("SIEBEL_ACCOUNT")) Is Nothing) Then
                MyBase.Tables.Add(New SIEBEL_ACCOUNTDataTable(ds.Tables("SIEBEL_ACCOUNT")))
            End If
            If (Not (ds.Tables("SIEBEL_CONTACT")) Is Nothing) Then
                MyBase.Tables.Add(New SIEBEL_CONTACTDataTable(ds.Tables("SIEBEL_CONTACT")))
            End If
            If (Not (ds.Tables("SIEBEL_OPPORTUNITY")) Is Nothing) Then
                MyBase.Tables.Add(New SIEBEL_OPPORTUNITYDataTable(ds.Tables("SIEBEL_OPPORTUNITY")))
            End If
            If (Not (ds.Tables("SiebelWSFailedLog")) Is Nothing) Then
                MyBase.Tables.Add(New SiebelWSFailedLogDataTable(ds.Tables("SiebelWSFailedLog")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableSIEBEL_ACCOUNT = CType(MyBase.Tables("SIEBEL_ACCOUNT"),SIEBEL_ACCOUNTDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSIEBEL_ACCOUNT) Is Nothing) Then
                Me.tableSIEBEL_ACCOUNT.InitVars
            End If
        End If
        Me.tableSIEBEL_CONTACT = CType(MyBase.Tables("SIEBEL_CONTACT"),SIEBEL_CONTACTDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSIEBEL_CONTACT) Is Nothing) Then
                Me.tableSIEBEL_CONTACT.InitVars
            End If
        End If
        Me.tableSIEBEL_OPPORTUNITY = CType(MyBase.Tables("SIEBEL_OPPORTUNITY"),SIEBEL_OPPORTUNITYDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSIEBEL_OPPORTUNITY) Is Nothing) Then
                Me.tableSIEBEL_OPPORTUNITY.InitVars
            End If
        End If
        Me.tableSiebelWSFailedLog = CType(MyBase.Tables("SiebelWSFailedLog"),SiebelWSFailedLogDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSiebelWSFailedLog) Is Nothing) Then
                Me.tableSiebelWSFailedLog.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "SiebelDS"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/SiebelDS.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableSIEBEL_ACCOUNT = New SIEBEL_ACCOUNTDataTable()
        MyBase.Tables.Add(Me.tableSIEBEL_ACCOUNT)
        Me.tableSIEBEL_CONTACT = New SIEBEL_CONTACTDataTable()
        MyBase.Tables.Add(Me.tableSIEBEL_CONTACT)
        Me.tableSIEBEL_OPPORTUNITY = New SIEBEL_OPPORTUNITYDataTable()
        MyBase.Tables.Add(Me.tableSIEBEL_OPPORTUNITY)
        Me.tableSiebelWSFailedLog = New SiebelWSFailedLogDataTable()
        MyBase.Tables.Add(Me.tableSiebelWSFailedLog)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSIEBEL_ACCOUNT() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSIEBEL_CONTACT() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSIEBEL_OPPORTUNITY() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSiebelWSFailedLog() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As SiebelDS = New SiebelDS()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub SIEBEL_ACCOUNTRowChangeEventHandler(ByVal sender As Object, ByVal e As SIEBEL_ACCOUNTRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub SIEBEL_CONTACTRowChangeEventHandler(ByVal sender As Object, ByVal e As SIEBEL_CONTACTRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub SIEBEL_OPPORTUNITYRowChangeEventHandler(ByVal sender As Object, ByVal e As SIEBEL_OPPORTUNITYRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub SiebelWSFailedLogRowChangeEventHandler(ByVal sender As Object, ByVal e As SiebelWSFailedLogRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SIEBEL_ACCOUNTDataTable
        Inherits Global.System.Data.TypedTableBase(Of SIEBEL_ACCOUNTRow)
        
        Private columnROW_ID As Global.System.Data.DataColumn
        
        Private columnERP_ID As Global.System.Data.DataColumn
        
        Private columnACCOUNT_NAME As Global.System.Data.DataColumn
        
        Private columnACCOUNT_STATUS As Global.System.Data.DataColumn
        
        Private columnFAX_NUM As Global.System.Data.DataColumn
        
        Private columnPHONE_NUM As Global.System.Data.DataColumn
        
        Private columnOU_TYPE_CD As Global.System.Data.DataColumn
        
        Private columnURL As Global.System.Data.DataColumn
        
        Private columnBusinessGroup As Global.System.Data.DataColumn
        
        Private columnACCOUNT_TYPE As Global.System.Data.DataColumn
        
        Private columnRBU As Global.System.Data.DataColumn
        
        Private columnPRIMARY_SALES_EMAIL As Global.System.Data.DataColumn
        
        Private columnPARENT_ROW_ID As Global.System.Data.DataColumn
        
        Private columnMAJORACCOUNT_FLAG As Global.System.Data.DataColumn
        
        Private columnCOMPETITOR_FLAG As Global.System.Data.DataColumn
        
        Private columnPARTNER_FLAG As Global.System.Data.DataColumn
        
        Private columnCOUNTRY As Global.System.Data.DataColumn
        
        Private columnCITY As Global.System.Data.DataColumn
        
        Private columnADDRESS As Global.System.Data.DataColumn
        
        Private columnSTATE As Global.System.Data.DataColumn
        
        Private columnZIPCODE As Global.System.Data.DataColumn
        
        Private columnPROVINCE As Global.System.Data.DataColumn
        
        Private columnBAA As Global.System.Data.DataColumn
        
        Private columnCREATED As Global.System.Data.DataColumn
        
        Private columnLAST_UPDATED As Global.System.Data.DataColumn
        
        Private columnPriOwnerDivision As Global.System.Data.DataColumn
        
        Private columnPriOwnerRowId As Global.System.Data.DataColumn
        
        Private columnPriOwnerPosition As Global.System.Data.DataColumn
        
        Private columnLOCATION As Global.System.Data.DataColumn
        
        Private columnACCOUNT_TEAM As Global.System.Data.DataColumn
        
        Private columnADDRESS2 As Global.System.Data.DataColumn
        
        Private columnACCOUNT_CC_GRADE As Global.System.Data.DataColumn
        
        Private columnCURRENCY As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SIEBEL_ACCOUNT"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ROW_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnROW_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ERP_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnERP_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ACCOUNT_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACCOUNT_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ACCOUNT_STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACCOUNT_STATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FAX_NUMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFAX_NUM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PHONE_NUMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPHONE_NUM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OU_TYPE_CDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOU_TYPE_CD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property URLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnURL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BusinessGroupColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBusinessGroup
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ACCOUNT_TYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACCOUNT_TYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RBUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRBU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRIMARY_SALES_EMAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRIMARY_SALES_EMAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PARENT_ROW_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPARENT_ROW_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MAJORACCOUNT_FLAGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMAJORACCOUNT_FLAG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COMPETITOR_FLAGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMPETITOR_FLAG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PARTNER_FLAGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPARTNER_FLAG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COUNTRYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOUNTRY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CITYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCITY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ADDRESSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADDRESS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ZIPCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZIPCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PROVINCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROVINCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BAAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBAA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LAST_UPDATEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLAST_UPDATED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PriOwnerDivisionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPriOwnerDivision
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PriOwnerRowIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPriOwnerRowId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PriOwnerPositionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPriOwnerPosition
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LOCATIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOCATION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ACCOUNT_TEAMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACCOUNT_TEAM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ADDRESS2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnADDRESS2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ACCOUNT_CC_GRADEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACCOUNT_CC_GRADE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CURRENCYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCURRENCY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SIEBEL_ACCOUNTRow
            Get
                Return CType(Me.Rows(index),SIEBEL_ACCOUNTRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SIEBEL_ACCOUNTRowChanging As SIEBEL_ACCOUNTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SIEBEL_ACCOUNTRowChanged As SIEBEL_ACCOUNTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SIEBEL_ACCOUNTRowDeleting As SIEBEL_ACCOUNTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SIEBEL_ACCOUNTRowDeleted As SIEBEL_ACCOUNTRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSIEBEL_ACCOUNTRow(ByVal row As SIEBEL_ACCOUNTRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSIEBEL_ACCOUNTRow( _
                    ByVal ROW_ID As String,  _
                    ByVal ERP_ID As String,  _
                    ByVal ACCOUNT_NAME As String,  _
                    ByVal ACCOUNT_STATUS As String,  _
                    ByVal FAX_NUM As String,  _
                    ByVal PHONE_NUM As String,  _
                    ByVal OU_TYPE_CD As String,  _
                    ByVal URL As String,  _
                    ByVal BusinessGroup As String,  _
                    ByVal ACCOUNT_TYPE As String,  _
                    ByVal RBU As String,  _
                    ByVal PRIMARY_SALES_EMAIL As String,  _
                    ByVal PARENT_ROW_ID As String,  _
                    ByVal MAJORACCOUNT_FLAG As String,  _
                    ByVal COMPETITOR_FLAG As String,  _
                    ByVal PARTNER_FLAG As String,  _
                    ByVal COUNTRY As String,  _
                    ByVal CITY As String,  _
                    ByVal ADDRESS As String,  _
                    ByVal STATE As String,  _
                    ByVal ZIPCODE As String,  _
                    ByVal PROVINCE As String,  _
                    ByVal BAA As String,  _
                    ByVal CREATED As Date,  _
                    ByVal LAST_UPDATED As Date,  _
                    ByVal PriOwnerDivision As String,  _
                    ByVal PriOwnerRowId As String,  _
                    ByVal PriOwnerPosition As String,  _
                    ByVal LOCATION As String,  _
                    ByVal ACCOUNT_TEAM As String,  _
                    ByVal ADDRESS2 As String,  _
                    ByVal ACCOUNT_CC_GRADE As String,  _
                    ByVal CURRENCY As String) As SIEBEL_ACCOUNTRow
            Dim rowSIEBEL_ACCOUNTRow As SIEBEL_ACCOUNTRow = CType(Me.NewRow,SIEBEL_ACCOUNTRow)
            Dim columnValuesArray() As Object = New Object() {ROW_ID, ERP_ID, ACCOUNT_NAME, ACCOUNT_STATUS, FAX_NUM, PHONE_NUM, OU_TYPE_CD, URL, BusinessGroup, ACCOUNT_TYPE, RBU, PRIMARY_SALES_EMAIL, PARENT_ROW_ID, MAJORACCOUNT_FLAG, COMPETITOR_FLAG, PARTNER_FLAG, COUNTRY, CITY, ADDRESS, STATE, ZIPCODE, PROVINCE, BAA, CREATED, LAST_UPDATED, PriOwnerDivision, PriOwnerRowId, PriOwnerPosition, LOCATION, ACCOUNT_TEAM, ADDRESS2, ACCOUNT_CC_GRADE, CURRENCY}
            rowSIEBEL_ACCOUNTRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSIEBEL_ACCOUNTRow)
            Return rowSIEBEL_ACCOUNTRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByROW_ID(ByVal ROW_ID As String) As SIEBEL_ACCOUNTRow
            Return CType(Me.Rows.Find(New Object() {ROW_ID}),SIEBEL_ACCOUNTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SIEBEL_ACCOUNTDataTable = CType(MyBase.Clone,SIEBEL_ACCOUNTDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SIEBEL_ACCOUNTDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnROW_ID = MyBase.Columns("ROW_ID")
            Me.columnERP_ID = MyBase.Columns("ERP_ID")
            Me.columnACCOUNT_NAME = MyBase.Columns("ACCOUNT_NAME")
            Me.columnACCOUNT_STATUS = MyBase.Columns("ACCOUNT_STATUS")
            Me.columnFAX_NUM = MyBase.Columns("FAX_NUM")
            Me.columnPHONE_NUM = MyBase.Columns("PHONE_NUM")
            Me.columnOU_TYPE_CD = MyBase.Columns("OU_TYPE_CD")
            Me.columnURL = MyBase.Columns("URL")
            Me.columnBusinessGroup = MyBase.Columns("BusinessGroup")
            Me.columnACCOUNT_TYPE = MyBase.Columns("ACCOUNT_TYPE")
            Me.columnRBU = MyBase.Columns("RBU")
            Me.columnPRIMARY_SALES_EMAIL = MyBase.Columns("PRIMARY_SALES_EMAIL")
            Me.columnPARENT_ROW_ID = MyBase.Columns("PARENT_ROW_ID")
            Me.columnMAJORACCOUNT_FLAG = MyBase.Columns("MAJORACCOUNT_FLAG")
            Me.columnCOMPETITOR_FLAG = MyBase.Columns("COMPETITOR_FLAG")
            Me.columnPARTNER_FLAG = MyBase.Columns("PARTNER_FLAG")
            Me.columnCOUNTRY = MyBase.Columns("COUNTRY")
            Me.columnCITY = MyBase.Columns("CITY")
            Me.columnADDRESS = MyBase.Columns("ADDRESS")
            Me.columnSTATE = MyBase.Columns("STATE")
            Me.columnZIPCODE = MyBase.Columns("ZIPCODE")
            Me.columnPROVINCE = MyBase.Columns("PROVINCE")
            Me.columnBAA = MyBase.Columns("BAA")
            Me.columnCREATED = MyBase.Columns("CREATED")
            Me.columnLAST_UPDATED = MyBase.Columns("LAST_UPDATED")
            Me.columnPriOwnerDivision = MyBase.Columns("PriOwnerDivision")
            Me.columnPriOwnerRowId = MyBase.Columns("PriOwnerRowId")
            Me.columnPriOwnerPosition = MyBase.Columns("PriOwnerPosition")
            Me.columnLOCATION = MyBase.Columns("LOCATION")
            Me.columnACCOUNT_TEAM = MyBase.Columns("ACCOUNT_TEAM")
            Me.columnADDRESS2 = MyBase.Columns("ADDRESS2")
            Me.columnACCOUNT_CC_GRADE = MyBase.Columns("ACCOUNT_CC_GRADE")
            Me.columnCURRENCY = MyBase.Columns("CURRENCY")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnROW_ID = New Global.System.Data.DataColumn("ROW_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnROW_ID)
            Me.columnERP_ID = New Global.System.Data.DataColumn("ERP_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnERP_ID)
            Me.columnACCOUNT_NAME = New Global.System.Data.DataColumn("ACCOUNT_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACCOUNT_NAME)
            Me.columnACCOUNT_STATUS = New Global.System.Data.DataColumn("ACCOUNT_STATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACCOUNT_STATUS)
            Me.columnFAX_NUM = New Global.System.Data.DataColumn("FAX_NUM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFAX_NUM)
            Me.columnPHONE_NUM = New Global.System.Data.DataColumn("PHONE_NUM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPHONE_NUM)
            Me.columnOU_TYPE_CD = New Global.System.Data.DataColumn("OU_TYPE_CD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOU_TYPE_CD)
            Me.columnURL = New Global.System.Data.DataColumn("URL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnURL)
            Me.columnBusinessGroup = New Global.System.Data.DataColumn("BusinessGroup", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBusinessGroup)
            Me.columnACCOUNT_TYPE = New Global.System.Data.DataColumn("ACCOUNT_TYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACCOUNT_TYPE)
            Me.columnRBU = New Global.System.Data.DataColumn("RBU", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRBU)
            Me.columnPRIMARY_SALES_EMAIL = New Global.System.Data.DataColumn("PRIMARY_SALES_EMAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRIMARY_SALES_EMAIL)
            Me.columnPARENT_ROW_ID = New Global.System.Data.DataColumn("PARENT_ROW_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPARENT_ROW_ID)
            Me.columnMAJORACCOUNT_FLAG = New Global.System.Data.DataColumn("MAJORACCOUNT_FLAG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMAJORACCOUNT_FLAG)
            Me.columnCOMPETITOR_FLAG = New Global.System.Data.DataColumn("COMPETITOR_FLAG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMPETITOR_FLAG)
            Me.columnPARTNER_FLAG = New Global.System.Data.DataColumn("PARTNER_FLAG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPARTNER_FLAG)
            Me.columnCOUNTRY = New Global.System.Data.DataColumn("COUNTRY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOUNTRY)
            Me.columnCITY = New Global.System.Data.DataColumn("CITY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCITY)
            Me.columnADDRESS = New Global.System.Data.DataColumn("ADDRESS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADDRESS)
            Me.columnSTATE = New Global.System.Data.DataColumn("STATE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTATE)
            Me.columnZIPCODE = New Global.System.Data.DataColumn("ZIPCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZIPCODE)
            Me.columnPROVINCE = New Global.System.Data.DataColumn("PROVINCE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROVINCE)
            Me.columnBAA = New Global.System.Data.DataColumn("BAA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBAA)
            Me.columnCREATED = New Global.System.Data.DataColumn("CREATED", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATED)
            Me.columnLAST_UPDATED = New Global.System.Data.DataColumn("LAST_UPDATED", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLAST_UPDATED)
            Me.columnPriOwnerDivision = New Global.System.Data.DataColumn("PriOwnerDivision", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPriOwnerDivision)
            Me.columnPriOwnerRowId = New Global.System.Data.DataColumn("PriOwnerRowId", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPriOwnerRowId)
            Me.columnPriOwnerPosition = New Global.System.Data.DataColumn("PriOwnerPosition", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPriOwnerPosition)
            Me.columnLOCATION = New Global.System.Data.DataColumn("LOCATION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOCATION)
            Me.columnACCOUNT_TEAM = New Global.System.Data.DataColumn("ACCOUNT_TEAM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACCOUNT_TEAM)
            Me.columnADDRESS2 = New Global.System.Data.DataColumn("ADDRESS2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADDRESS2)
            Me.columnACCOUNT_CC_GRADE = New Global.System.Data.DataColumn("ACCOUNT_CC_GRADE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACCOUNT_CC_GRADE)
            Me.columnCURRENCY = New Global.System.Data.DataColumn("CURRENCY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCURRENCY)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnROW_ID}, true))
            Me.columnROW_ID.AllowDBNull = false
            Me.columnROW_ID.Unique = true
            Me.columnROW_ID.MaxLength = 15
            Me.columnERP_ID.ReadOnly = true
            Me.columnERP_ID.MaxLength = 30
            Me.columnACCOUNT_NAME.AllowDBNull = false
            Me.columnACCOUNT_NAME.MaxLength = 100
            Me.columnACCOUNT_STATUS.MaxLength = 30
            Me.columnFAX_NUM.ReadOnly = true
            Me.columnFAX_NUM.MaxLength = 40
            Me.columnPHONE_NUM.ReadOnly = true
            Me.columnPHONE_NUM.MaxLength = 40
            Me.columnOU_TYPE_CD.ReadOnly = true
            Me.columnOU_TYPE_CD.MaxLength = 30
            Me.columnURL.ReadOnly = true
            Me.columnURL.MaxLength = 100
            Me.columnBusinessGroup.ReadOnly = true
            Me.columnBusinessGroup.MaxLength = 50
            Me.columnACCOUNT_TYPE.ReadOnly = true
            Me.columnACCOUNT_TYPE.MaxLength = 30
            Me.columnRBU.ReadOnly = true
            Me.columnRBU.MaxLength = 150
            Me.columnPRIMARY_SALES_EMAIL.ReadOnly = true
            Me.columnPRIMARY_SALES_EMAIL.MaxLength = 100
            Me.columnPARENT_ROW_ID.MaxLength = 15
            Me.columnMAJORACCOUNT_FLAG.ReadOnly = true
            Me.columnMAJORACCOUNT_FLAG.MaxLength = 1
            Me.columnCOMPETITOR_FLAG.ReadOnly = true
            Me.columnCOMPETITOR_FLAG.MaxLength = 1
            Me.columnPARTNER_FLAG.ReadOnly = true
            Me.columnPARTNER_FLAG.MaxLength = 1
            Me.columnCOUNTRY.ReadOnly = true
            Me.columnCOUNTRY.MaxLength = 30
            Me.columnCITY.ReadOnly = true
            Me.columnCITY.MaxLength = 50
            Me.columnADDRESS.ReadOnly = true
            Me.columnADDRESS.MaxLength = 200
            Me.columnSTATE.ReadOnly = true
            Me.columnSTATE.MaxLength = 10
            Me.columnZIPCODE.ReadOnly = true
            Me.columnZIPCODE.MaxLength = 30
            Me.columnPROVINCE.ReadOnly = true
            Me.columnPROVINCE.MaxLength = 50
            Me.columnBAA.ReadOnly = true
            Me.columnBAA.MaxLength = 50
            Me.columnPriOwnerDivision.ReadOnly = true
            Me.columnPriOwnerDivision.MaxLength = 150
            Me.columnPriOwnerRowId.MaxLength = 15
            Me.columnPriOwnerPosition.ReadOnly = true
            Me.columnPriOwnerPosition.MaxLength = 50
            Me.columnLOCATION.ReadOnly = true
            Me.columnLOCATION.MaxLength = 10
            Me.columnACCOUNT_TEAM.ReadOnly = true
            Me.columnACCOUNT_TEAM.MaxLength = 10
            Me.columnADDRESS2.ReadOnly = true
            Me.columnADDRESS2.MaxLength = 100
            Me.columnACCOUNT_CC_GRADE.ReadOnly = true
            Me.columnACCOUNT_CC_GRADE.MaxLength = 50
            Me.columnCURRENCY.ReadOnly = true
            Me.columnCURRENCY.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSIEBEL_ACCOUNTRow() As SIEBEL_ACCOUNTRow
            Return CType(Me.NewRow,SIEBEL_ACCOUNTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SIEBEL_ACCOUNTRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SIEBEL_ACCOUNTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SIEBEL_ACCOUNTRowChangedEvent) Is Nothing) Then
                RaiseEvent SIEBEL_ACCOUNTRowChanged(Me, New SIEBEL_ACCOUNTRowChangeEvent(CType(e.Row,SIEBEL_ACCOUNTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SIEBEL_ACCOUNTRowChangingEvent) Is Nothing) Then
                RaiseEvent SIEBEL_ACCOUNTRowChanging(Me, New SIEBEL_ACCOUNTRowChangeEvent(CType(e.Row,SIEBEL_ACCOUNTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SIEBEL_ACCOUNTRowDeletedEvent) Is Nothing) Then
                RaiseEvent SIEBEL_ACCOUNTRowDeleted(Me, New SIEBEL_ACCOUNTRowChangeEvent(CType(e.Row,SIEBEL_ACCOUNTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SIEBEL_ACCOUNTRowDeletingEvent) Is Nothing) Then
                RaiseEvent SIEBEL_ACCOUNTRowDeleting(Me, New SIEBEL_ACCOUNTRowChangeEvent(CType(e.Row,SIEBEL_ACCOUNTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSIEBEL_ACCOUNTRow(ByVal row As SIEBEL_ACCOUNTRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As SiebelDS = New SiebelDS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SIEBEL_ACCOUNTDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SIEBEL_CONTACTDataTable
        Inherits Global.System.Data.TypedTableBase(Of SIEBEL_CONTACTRow)
        
        Private columnROW_ID As Global.System.Data.DataColumn
        
        Private columnFirstName As Global.System.Data.DataColumn
        
        Private columnMiddleName As Global.System.Data.DataColumn
        
        Private columnLastName As Global.System.Data.DataColumn
        
        Private columnWorkPhone As Global.System.Data.DataColumn
        
        Private columnCellPhone As Global.System.Data.DataColumn
        
        Private columnFaxNumber As Global.System.Data.DataColumn
        
        Private columnJOB_FUNCTION As Global.System.Data.DataColumn
        
        Private columnPAR_ROW_ID As Global.System.Data.DataColumn
        
        Private columnERPID As Global.System.Data.DataColumn
        
        Private columnPriOrgId As Global.System.Data.DataColumn
        
        Private columnOrgID As Global.System.Data.DataColumn
        
        Private columnOwnerId As Global.System.Data.DataColumn
        
        Private columnCanSeeOrder As Global.System.Data.DataColumn
        
        Private columnPassword As Global.System.Data.DataColumn
        
        Private columnSales_Rep As Global.System.Data.DataColumn
        
        Private columnNeverEmail As Global.System.Data.DataColumn
        
        Private columnNeverCall As Global.System.Data.DataColumn
        
        Private columnNeverFax As Global.System.Data.DataColumn
        
        Private columnNeverMail As Global.System.Data.DataColumn
        
        Private columnJOB_TITLE As Global.System.Data.DataColumn
        
        Private columnEMAIL_ADDRESS As Global.System.Data.DataColumn
        
        Private columnACCOUNT_ROW_ID As Global.System.Data.DataColumn
        
        Private columnACCOUNT As Global.System.Data.DataColumn
        
        Private columnACCOUNT_TYPE As Global.System.Data.DataColumn
        
        Private columnACCOUNT_STATUS As Global.System.Data.DataColumn
        
        Private columnCOUNTRY As Global.System.Data.DataColumn
        
        Private columnSalutation As Global.System.Data.DataColumn
        
        Private columnEMPLOYEE_FLAG As Global.System.Data.DataColumn
        
        Private columnACTIVE_FLG As Global.System.Data.DataColumn
        
        Private columnUser_Type As Global.System.Data.DataColumn
        
        Private columnReg_Source As Global.System.Data.DataColumn
        
        Private columnCREATED As Global.System.Data.DataColumn
        
        Private columnLAST_UPDATED As Global.System.Data.DataColumn
        
        Private columnPRIMARY_FLAG As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SIEBEL_CONTACT"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ROW_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnROW_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FirstNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFirstName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MiddleNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMiddleName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LastNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLastName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WorkPhoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWorkPhone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CellPhoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCellPhone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FaxNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFaxNumber
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JOB_FUNCTIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJOB_FUNCTION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PAR_ROW_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAR_ROW_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ERPIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnERPID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PriOrgIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPriOrgId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OrgIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOrgID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OwnerIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOwnerId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CanSeeOrderColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCanSeeOrder
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PasswordColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPassword
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Sales_RepColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSales_Rep
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NeverEmailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNeverEmail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NeverCallColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNeverCall
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NeverFaxColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNeverFax
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NeverMailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNeverMail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JOB_TITLEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJOB_TITLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EMAIL_ADDRESSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMAIL_ADDRESS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ACCOUNT_ROW_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACCOUNT_ROW_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ACCOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACCOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ACCOUNT_TYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACCOUNT_TYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ACCOUNT_STATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACCOUNT_STATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COUNTRYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOUNTRY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SalutationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSalutation
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EMPLOYEE_FLAGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMPLOYEE_FLAG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ACTIVE_FLGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACTIVE_FLG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property User_TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUser_Type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Reg_SourceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReg_Source
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LAST_UPDATEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLAST_UPDATED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRIMARY_FLAGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRIMARY_FLAG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SIEBEL_CONTACTRow
            Get
                Return CType(Me.Rows(index),SIEBEL_CONTACTRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SIEBEL_CONTACTRowChanging As SIEBEL_CONTACTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SIEBEL_CONTACTRowChanged As SIEBEL_CONTACTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SIEBEL_CONTACTRowDeleting As SIEBEL_CONTACTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SIEBEL_CONTACTRowDeleted As SIEBEL_CONTACTRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSIEBEL_CONTACTRow(ByVal row As SIEBEL_CONTACTRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSIEBEL_CONTACTRow( _
                    ByVal ROW_ID As String,  _
                    ByVal FirstName As String,  _
                    ByVal MiddleName As String,  _
                    ByVal LastName As String,  _
                    ByVal WorkPhone As String,  _
                    ByVal CellPhone As String,  _
                    ByVal FaxNumber As String,  _
                    ByVal JOB_FUNCTION As String,  _
                    ByVal PAR_ROW_ID As String,  _
                    ByVal ERPID As String,  _
                    ByVal PriOrgId As String,  _
                    ByVal OrgID As String,  _
                    ByVal OwnerId As String,  _
                    ByVal CanSeeOrder As String,  _
                    ByVal Password As String,  _
                    ByVal Sales_Rep As String,  _
                    ByVal NeverEmail As String,  _
                    ByVal NeverCall As String,  _
                    ByVal NeverFax As String,  _
                    ByVal NeverMail As String,  _
                    ByVal JOB_TITLE As String,  _
                    ByVal EMAIL_ADDRESS As String,  _
                    ByVal ACCOUNT_ROW_ID As String,  _
                    ByVal ACCOUNT As String,  _
                    ByVal ACCOUNT_TYPE As String,  _
                    ByVal ACCOUNT_STATUS As String,  _
                    ByVal COUNTRY As String,  _
                    ByVal Salutation As String,  _
                    ByVal EMPLOYEE_FLAG As String,  _
                    ByVal ACTIVE_FLG As String,  _
                    ByVal User_Type As String,  _
                    ByVal Reg_Source As String,  _
                    ByVal CREATED As Date,  _
                    ByVal LAST_UPDATED As Date,  _
                    ByVal PRIMARY_FLAG As String) As SIEBEL_CONTACTRow
            Dim rowSIEBEL_CONTACTRow As SIEBEL_CONTACTRow = CType(Me.NewRow,SIEBEL_CONTACTRow)
            Dim columnValuesArray() As Object = New Object() {ROW_ID, FirstName, MiddleName, LastName, WorkPhone, CellPhone, FaxNumber, JOB_FUNCTION, PAR_ROW_ID, ERPID, PriOrgId, OrgID, OwnerId, CanSeeOrder, Password, Sales_Rep, NeverEmail, NeverCall, NeverFax, NeverMail, JOB_TITLE, EMAIL_ADDRESS, ACCOUNT_ROW_ID, ACCOUNT, ACCOUNT_TYPE, ACCOUNT_STATUS, COUNTRY, Salutation, EMPLOYEE_FLAG, ACTIVE_FLG, User_Type, Reg_Source, CREATED, LAST_UPDATED, PRIMARY_FLAG}
            rowSIEBEL_CONTACTRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSIEBEL_CONTACTRow)
            Return rowSIEBEL_CONTACTRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SIEBEL_CONTACTDataTable = CType(MyBase.Clone,SIEBEL_CONTACTDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SIEBEL_CONTACTDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnROW_ID = MyBase.Columns("ROW_ID")
            Me.columnFirstName = MyBase.Columns("FirstName")
            Me.columnMiddleName = MyBase.Columns("MiddleName")
            Me.columnLastName = MyBase.Columns("LastName")
            Me.columnWorkPhone = MyBase.Columns("WorkPhone")
            Me.columnCellPhone = MyBase.Columns("CellPhone")
            Me.columnFaxNumber = MyBase.Columns("FaxNumber")
            Me.columnJOB_FUNCTION = MyBase.Columns("JOB_FUNCTION")
            Me.columnPAR_ROW_ID = MyBase.Columns("PAR_ROW_ID")
            Me.columnERPID = MyBase.Columns("ERPID")
            Me.columnPriOrgId = MyBase.Columns("PriOrgId")
            Me.columnOrgID = MyBase.Columns("OrgID")
            Me.columnOwnerId = MyBase.Columns("OwnerId")
            Me.columnCanSeeOrder = MyBase.Columns("CanSeeOrder")
            Me.columnPassword = MyBase.Columns("Password")
            Me.columnSales_Rep = MyBase.Columns("Sales_Rep")
            Me.columnNeverEmail = MyBase.Columns("NeverEmail")
            Me.columnNeverCall = MyBase.Columns("NeverCall")
            Me.columnNeverFax = MyBase.Columns("NeverFax")
            Me.columnNeverMail = MyBase.Columns("NeverMail")
            Me.columnJOB_TITLE = MyBase.Columns("JOB_TITLE")
            Me.columnEMAIL_ADDRESS = MyBase.Columns("EMAIL_ADDRESS")
            Me.columnACCOUNT_ROW_ID = MyBase.Columns("ACCOUNT_ROW_ID")
            Me.columnACCOUNT = MyBase.Columns("ACCOUNT")
            Me.columnACCOUNT_TYPE = MyBase.Columns("ACCOUNT_TYPE")
            Me.columnACCOUNT_STATUS = MyBase.Columns("ACCOUNT_STATUS")
            Me.columnCOUNTRY = MyBase.Columns("COUNTRY")
            Me.columnSalutation = MyBase.Columns("Salutation")
            Me.columnEMPLOYEE_FLAG = MyBase.Columns("EMPLOYEE_FLAG")
            Me.columnACTIVE_FLG = MyBase.Columns("ACTIVE_FLG")
            Me.columnUser_Type = MyBase.Columns("User_Type")
            Me.columnReg_Source = MyBase.Columns("Reg_Source")
            Me.columnCREATED = MyBase.Columns("CREATED")
            Me.columnLAST_UPDATED = MyBase.Columns("LAST_UPDATED")
            Me.columnPRIMARY_FLAG = MyBase.Columns("PRIMARY_FLAG")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnROW_ID = New Global.System.Data.DataColumn("ROW_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnROW_ID)
            Me.columnFirstName = New Global.System.Data.DataColumn("FirstName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFirstName)
            Me.columnMiddleName = New Global.System.Data.DataColumn("MiddleName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMiddleName)
            Me.columnLastName = New Global.System.Data.DataColumn("LastName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLastName)
            Me.columnWorkPhone = New Global.System.Data.DataColumn("WorkPhone", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWorkPhone)
            Me.columnCellPhone = New Global.System.Data.DataColumn("CellPhone", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCellPhone)
            Me.columnFaxNumber = New Global.System.Data.DataColumn("FaxNumber", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFaxNumber)
            Me.columnJOB_FUNCTION = New Global.System.Data.DataColumn("JOB_FUNCTION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJOB_FUNCTION)
            Me.columnPAR_ROW_ID = New Global.System.Data.DataColumn("PAR_ROW_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAR_ROW_ID)
            Me.columnERPID = New Global.System.Data.DataColumn("ERPID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnERPID)
            Me.columnPriOrgId = New Global.System.Data.DataColumn("PriOrgId", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPriOrgId)
            Me.columnOrgID = New Global.System.Data.DataColumn("OrgID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOrgID)
            Me.columnOwnerId = New Global.System.Data.DataColumn("OwnerId", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOwnerId)
            Me.columnCanSeeOrder = New Global.System.Data.DataColumn("CanSeeOrder", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCanSeeOrder)
            Me.columnPassword = New Global.System.Data.DataColumn("Password", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPassword)
            Me.columnSales_Rep = New Global.System.Data.DataColumn("Sales_Rep", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSales_Rep)
            Me.columnNeverEmail = New Global.System.Data.DataColumn("NeverEmail", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNeverEmail)
            Me.columnNeverCall = New Global.System.Data.DataColumn("NeverCall", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNeverCall)
            Me.columnNeverFax = New Global.System.Data.DataColumn("NeverFax", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNeverFax)
            Me.columnNeverMail = New Global.System.Data.DataColumn("NeverMail", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNeverMail)
            Me.columnJOB_TITLE = New Global.System.Data.DataColumn("JOB_TITLE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJOB_TITLE)
            Me.columnEMAIL_ADDRESS = New Global.System.Data.DataColumn("EMAIL_ADDRESS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMAIL_ADDRESS)
            Me.columnACCOUNT_ROW_ID = New Global.System.Data.DataColumn("ACCOUNT_ROW_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACCOUNT_ROW_ID)
            Me.columnACCOUNT = New Global.System.Data.DataColumn("ACCOUNT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACCOUNT)
            Me.columnACCOUNT_TYPE = New Global.System.Data.DataColumn("ACCOUNT_TYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACCOUNT_TYPE)
            Me.columnACCOUNT_STATUS = New Global.System.Data.DataColumn("ACCOUNT_STATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACCOUNT_STATUS)
            Me.columnCOUNTRY = New Global.System.Data.DataColumn("COUNTRY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOUNTRY)
            Me.columnSalutation = New Global.System.Data.DataColumn("Salutation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSalutation)
            Me.columnEMPLOYEE_FLAG = New Global.System.Data.DataColumn("EMPLOYEE_FLAG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMPLOYEE_FLAG)
            Me.columnACTIVE_FLG = New Global.System.Data.DataColumn("ACTIVE_FLG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACTIVE_FLG)
            Me.columnUser_Type = New Global.System.Data.DataColumn("User_Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUser_Type)
            Me.columnReg_Source = New Global.System.Data.DataColumn("Reg_Source", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReg_Source)
            Me.columnCREATED = New Global.System.Data.DataColumn("CREATED", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATED)
            Me.columnLAST_UPDATED = New Global.System.Data.DataColumn("LAST_UPDATED", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLAST_UPDATED)
            Me.columnPRIMARY_FLAG = New Global.System.Data.DataColumn("PRIMARY_FLAG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRIMARY_FLAG)
            Me.columnROW_ID.AllowDBNull = false
            Me.columnROW_ID.MaxLength = 15
            Me.columnFirstName.ReadOnly = true
            Me.columnFirstName.MaxLength = 50
            Me.columnMiddleName.ReadOnly = true
            Me.columnMiddleName.MaxLength = 50
            Me.columnLastName.ReadOnly = true
            Me.columnLastName.MaxLength = 50
            Me.columnWorkPhone.ReadOnly = true
            Me.columnWorkPhone.MaxLength = 40
            Me.columnCellPhone.ReadOnly = true
            Me.columnCellPhone.MaxLength = 40
            Me.columnFaxNumber.ReadOnly = true
            Me.columnFaxNumber.MaxLength = 40
            Me.columnJOB_FUNCTION.ReadOnly = true
            Me.columnJOB_FUNCTION.MaxLength = 50
            Me.columnPAR_ROW_ID.ReadOnly = true
            Me.columnPAR_ROW_ID.MaxLength = 15
            Me.columnERPID.ReadOnly = true
            Me.columnERPID.MaxLength = 30
            Me.columnPriOrgId.ReadOnly = true
            Me.columnPriOrgId.MaxLength = 15
            Me.columnOrgID.ReadOnly = true
            Me.columnOrgID.MaxLength = 150
            Me.columnOwnerId.ReadOnly = true
            Me.columnOwnerId.MaxLength = 15
            Me.columnCanSeeOrder.ReadOnly = true
            Me.columnCanSeeOrder.MaxLength = 1
            Me.columnPassword.ReadOnly = true
            Me.columnPassword.MaxLength = 30
            Me.columnSales_Rep.ReadOnly = true
            Me.columnSales_Rep.MaxLength = 1
            Me.columnNeverEmail.ReadOnly = true
            Me.columnNeverEmail.MaxLength = 1
            Me.columnNeverCall.ReadOnly = true
            Me.columnNeverCall.MaxLength = 1
            Me.columnNeverFax.ReadOnly = true
            Me.columnNeverFax.MaxLength = 1
            Me.columnNeverMail.ReadOnly = true
            Me.columnNeverMail.MaxLength = 1
            Me.columnJOB_TITLE.ReadOnly = true
            Me.columnJOB_TITLE.MaxLength = 75
            Me.columnEMAIL_ADDRESS.ReadOnly = true
            Me.columnEMAIL_ADDRESS.MaxLength = 100
            Me.columnACCOUNT_ROW_ID.MaxLength = 15
            Me.columnACCOUNT.ReadOnly = true
            Me.columnACCOUNT.MaxLength = 100
            Me.columnACCOUNT_TYPE.ReadOnly = true
            Me.columnACCOUNT_TYPE.MaxLength = 30
            Me.columnACCOUNT_STATUS.ReadOnly = true
            Me.columnACCOUNT_STATUS.MaxLength = 30
            Me.columnCOUNTRY.ReadOnly = true
            Me.columnCOUNTRY.MaxLength = 30
            Me.columnSalutation.ReadOnly = true
            Me.columnSalutation.MaxLength = 15
            Me.columnEMPLOYEE_FLAG.AllowDBNull = false
            Me.columnEMPLOYEE_FLAG.MaxLength = 1
            Me.columnACTIVE_FLG.ReadOnly = true
            Me.columnACTIVE_FLG.MaxLength = 1
            Me.columnUser_Type.ReadOnly = true
            Me.columnUser_Type.MaxLength = 30
            Me.columnReg_Source.ReadOnly = true
            Me.columnReg_Source.MaxLength = 30
            Me.columnCREATED.AllowDBNull = false
            Me.columnLAST_UPDATED.AllowDBNull = false
            Me.columnPRIMARY_FLAG.MaxLength = 1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSIEBEL_CONTACTRow() As SIEBEL_CONTACTRow
            Return CType(Me.NewRow,SIEBEL_CONTACTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SIEBEL_CONTACTRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SIEBEL_CONTACTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SIEBEL_CONTACTRowChangedEvent) Is Nothing) Then
                RaiseEvent SIEBEL_CONTACTRowChanged(Me, New SIEBEL_CONTACTRowChangeEvent(CType(e.Row,SIEBEL_CONTACTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SIEBEL_CONTACTRowChangingEvent) Is Nothing) Then
                RaiseEvent SIEBEL_CONTACTRowChanging(Me, New SIEBEL_CONTACTRowChangeEvent(CType(e.Row,SIEBEL_CONTACTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SIEBEL_CONTACTRowDeletedEvent) Is Nothing) Then
                RaiseEvent SIEBEL_CONTACTRowDeleted(Me, New SIEBEL_CONTACTRowChangeEvent(CType(e.Row,SIEBEL_CONTACTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SIEBEL_CONTACTRowDeletingEvent) Is Nothing) Then
                RaiseEvent SIEBEL_CONTACTRowDeleting(Me, New SIEBEL_CONTACTRowChangeEvent(CType(e.Row,SIEBEL_CONTACTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSIEBEL_CONTACTRow(ByVal row As SIEBEL_CONTACTRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As SiebelDS = New SiebelDS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SIEBEL_CONTACTDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SIEBEL_OPPORTUNITYDataTable
        Inherits Global.System.Data.TypedTableBase(Of SIEBEL_OPPORTUNITYRow)
        
        Private columnROW_ID As Global.System.Data.DataColumn
        
        Private columnACCOUNT_ROW_ID As Global.System.Data.DataColumn
        
        Private columnNAME As Global.System.Data.DataColumn
        
        Private columnCREATED As Global.System.Data.DataColumn
        
        Private columnACCOUNT_NAME As Global.System.Data.DataColumn
        
        Private columnChannelPartner As Global.System.Data.DataColumn
        
        Private columnCURCY_CD As Global.System.Data.DataColumn
        
        Private columnSUM_REVN_AMT As Global.System.Data.DataColumn
        
        Private columnACCOUNT_ROW_ID1 As Global.System.Data.DataColumn
        
        Private columnSUM_WIN_PROB As Global.System.Data.DataColumn
        
        Private columnSTAGE_NAME As Global.System.Data.DataColumn
        
        Private columnSTATUS_CD As Global.System.Data.DataColumn
        
        Private columnSALES_METHOD_NAME As Global.System.Data.DataColumn
        
        Private columnChannel As Global.System.Data.DataColumn
        
        Private columnSUM_EFFECTIVE_DT As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SIEBEL_OPPORTUNITY"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ROW_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnROW_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ACCOUNT_ROW_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACCOUNT_ROW_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CREATEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ACCOUNT_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACCOUNT_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ChannelPartnerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnChannelPartner
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CURCY_CDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCURCY_CD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUM_REVN_AMTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUM_REVN_AMT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ACCOUNT_ROW_ID1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnACCOUNT_ROW_ID1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUM_WIN_PROBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUM_WIN_PROB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STAGE_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTAGE_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STATUS_CDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTATUS_CD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SALES_METHOD_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALES_METHOD_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ChannelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnChannel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUM_EFFECTIVE_DTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUM_EFFECTIVE_DT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SIEBEL_OPPORTUNITYRow
            Get
                Return CType(Me.Rows(index),SIEBEL_OPPORTUNITYRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SIEBEL_OPPORTUNITYRowChanging As SIEBEL_OPPORTUNITYRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SIEBEL_OPPORTUNITYRowChanged As SIEBEL_OPPORTUNITYRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SIEBEL_OPPORTUNITYRowDeleting As SIEBEL_OPPORTUNITYRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SIEBEL_OPPORTUNITYRowDeleted As SIEBEL_OPPORTUNITYRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSIEBEL_OPPORTUNITYRow(ByVal row As SIEBEL_OPPORTUNITYRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSIEBEL_OPPORTUNITYRow(ByVal ROW_ID As String, ByVal ACCOUNT_ROW_ID As String, ByVal NAME As String, ByVal CREATED As Date, ByVal ACCOUNT_NAME As String, ByVal ChannelPartner As String, ByVal CURCY_CD As String, ByVal SUM_REVN_AMT As Decimal, ByVal ACCOUNT_ROW_ID1 As String, ByVal SUM_WIN_PROB As Decimal, ByVal STAGE_NAME As String, ByVal STATUS_CD As String, ByVal SALES_METHOD_NAME As String, ByVal Channel As String, ByVal SUM_EFFECTIVE_DT As Date) As SIEBEL_OPPORTUNITYRow
            Dim rowSIEBEL_OPPORTUNITYRow As SIEBEL_OPPORTUNITYRow = CType(Me.NewRow,SIEBEL_OPPORTUNITYRow)
            Dim columnValuesArray() As Object = New Object() {ROW_ID, ACCOUNT_ROW_ID, NAME, CREATED, ACCOUNT_NAME, ChannelPartner, CURCY_CD, SUM_REVN_AMT, ACCOUNT_ROW_ID1, SUM_WIN_PROB, STAGE_NAME, STATUS_CD, SALES_METHOD_NAME, Channel, SUM_EFFECTIVE_DT}
            rowSIEBEL_OPPORTUNITYRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSIEBEL_OPPORTUNITYRow)
            Return rowSIEBEL_OPPORTUNITYRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByROW_ID(ByVal ROW_ID As String) As SIEBEL_OPPORTUNITYRow
            Return CType(Me.Rows.Find(New Object() {ROW_ID}),SIEBEL_OPPORTUNITYRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SIEBEL_OPPORTUNITYDataTable = CType(MyBase.Clone,SIEBEL_OPPORTUNITYDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SIEBEL_OPPORTUNITYDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnROW_ID = MyBase.Columns("ROW_ID")
            Me.columnACCOUNT_ROW_ID = MyBase.Columns("ACCOUNT_ROW_ID")
            Me.columnNAME = MyBase.Columns("NAME")
            Me.columnCREATED = MyBase.Columns("CREATED")
            Me.columnACCOUNT_NAME = MyBase.Columns("ACCOUNT_NAME")
            Me.columnChannelPartner = MyBase.Columns("ChannelPartner")
            Me.columnCURCY_CD = MyBase.Columns("CURCY_CD")
            Me.columnSUM_REVN_AMT = MyBase.Columns("SUM_REVN_AMT")
            Me.columnACCOUNT_ROW_ID1 = MyBase.Columns("ACCOUNT_ROW_ID1")
            Me.columnSUM_WIN_PROB = MyBase.Columns("SUM_WIN_PROB")
            Me.columnSTAGE_NAME = MyBase.Columns("STAGE_NAME")
            Me.columnSTATUS_CD = MyBase.Columns("STATUS_CD")
            Me.columnSALES_METHOD_NAME = MyBase.Columns("SALES_METHOD_NAME")
            Me.columnChannel = MyBase.Columns("Channel")
            Me.columnSUM_EFFECTIVE_DT = MyBase.Columns("SUM_EFFECTIVE_DT")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnROW_ID = New Global.System.Data.DataColumn("ROW_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnROW_ID)
            Me.columnACCOUNT_ROW_ID = New Global.System.Data.DataColumn("ACCOUNT_ROW_ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACCOUNT_ROW_ID)
            Me.columnNAME = New Global.System.Data.DataColumn("NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNAME)
            Me.columnCREATED = New Global.System.Data.DataColumn("CREATED", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATED)
            Me.columnACCOUNT_NAME = New Global.System.Data.DataColumn("ACCOUNT_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACCOUNT_NAME)
            Me.columnChannelPartner = New Global.System.Data.DataColumn("ChannelPartner", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChannelPartner)
            Me.columnCURCY_CD = New Global.System.Data.DataColumn("CURCY_CD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCURCY_CD)
            Me.columnSUM_REVN_AMT = New Global.System.Data.DataColumn("SUM_REVN_AMT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUM_REVN_AMT)
            Me.columnACCOUNT_ROW_ID1 = New Global.System.Data.DataColumn("ACCOUNT_ROW_ID1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACCOUNT_ROW_ID1)
            Me.columnSUM_WIN_PROB = New Global.System.Data.DataColumn("SUM_WIN_PROB", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUM_WIN_PROB)
            Me.columnSTAGE_NAME = New Global.System.Data.DataColumn("STAGE_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTAGE_NAME)
            Me.columnSTATUS_CD = New Global.System.Data.DataColumn("STATUS_CD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTATUS_CD)
            Me.columnSALES_METHOD_NAME = New Global.System.Data.DataColumn("SALES_METHOD_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALES_METHOD_NAME)
            Me.columnChannel = New Global.System.Data.DataColumn("Channel", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChannel)
            Me.columnSUM_EFFECTIVE_DT = New Global.System.Data.DataColumn("SUM_EFFECTIVE_DT", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUM_EFFECTIVE_DT)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnROW_ID}, true))
            Me.columnROW_ID.AllowDBNull = false
            Me.columnROW_ID.Unique = true
            Me.columnROW_ID.MaxLength = 15
            Me.columnACCOUNT_ROW_ID.MaxLength = 15
            Me.columnNAME.AllowDBNull = false
            Me.columnNAME.MaxLength = 100
            Me.columnCREATED.AllowDBNull = false
            Me.columnACCOUNT_NAME.AllowDBNull = false
            Me.columnACCOUNT_NAME.MaxLength = 100
            Me.columnChannelPartner.ReadOnly = true
            Me.columnChannelPartner.MaxLength = 100
            Me.columnCURCY_CD.MaxLength = 20
            Me.columnACCOUNT_ROW_ID1.MaxLength = 15
            Me.columnSTAGE_NAME.ReadOnly = true
            Me.columnSTAGE_NAME.MaxLength = 100
            Me.columnSTATUS_CD.MaxLength = 30
            Me.columnSALES_METHOD_NAME.ReadOnly = true
            Me.columnSALES_METHOD_NAME.MaxLength = 30
            Me.columnChannel.ReadOnly = true
            Me.columnChannel.MaxLength = 30
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSIEBEL_OPPORTUNITYRow() As SIEBEL_OPPORTUNITYRow
            Return CType(Me.NewRow,SIEBEL_OPPORTUNITYRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SIEBEL_OPPORTUNITYRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SIEBEL_OPPORTUNITYRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SIEBEL_OPPORTUNITYRowChangedEvent) Is Nothing) Then
                RaiseEvent SIEBEL_OPPORTUNITYRowChanged(Me, New SIEBEL_OPPORTUNITYRowChangeEvent(CType(e.Row,SIEBEL_OPPORTUNITYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SIEBEL_OPPORTUNITYRowChangingEvent) Is Nothing) Then
                RaiseEvent SIEBEL_OPPORTUNITYRowChanging(Me, New SIEBEL_OPPORTUNITYRowChangeEvent(CType(e.Row,SIEBEL_OPPORTUNITYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SIEBEL_OPPORTUNITYRowDeletedEvent) Is Nothing) Then
                RaiseEvent SIEBEL_OPPORTUNITYRowDeleted(Me, New SIEBEL_OPPORTUNITYRowChangeEvent(CType(e.Row,SIEBEL_OPPORTUNITYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SIEBEL_OPPORTUNITYRowDeletingEvent) Is Nothing) Then
                RaiseEvent SIEBEL_OPPORTUNITYRowDeleting(Me, New SIEBEL_OPPORTUNITYRowChangeEvent(CType(e.Row,SIEBEL_OPPORTUNITYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSIEBEL_OPPORTUNITYRow(ByVal row As SIEBEL_OPPORTUNITYRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As SiebelDS = New SiebelDS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SIEBEL_OPPORTUNITYDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SiebelWSFailedLogDataTable
        Inherits Global.System.Data.TypedTableBase(Of SiebelWSFailedLogRow)
        
        Private columnquoteId As Global.System.Data.DataColumn
        
        Private columnFunctionName As Global.System.Data.DataColumn
        
        Private columnParameters As Global.System.Data.DataColumn
        
        Private columnEmailAddress As Global.System.Data.DataColumn
        
        Private columnErrorMessage As Global.System.Data.DataColumn
        
        Private columnInsertTime As Global.System.Data.DataColumn
        
        Private columnLastRecallTime As Global.System.Data.DataColumn
        
        Private columnIsRecall As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SiebelWSFailedLog"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property quoteIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnquoteId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FunctionNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFunctionName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ParametersColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnParameters
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EmailAddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmailAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ErrorMessageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnErrorMessage
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property InsertTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInsertTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LastRecallTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLastRecallTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IsRecallColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsRecall
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SiebelWSFailedLogRow
            Get
                Return CType(Me.Rows(index),SiebelWSFailedLogRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SiebelWSFailedLogRowChanging As SiebelWSFailedLogRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SiebelWSFailedLogRowChanged As SiebelWSFailedLogRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SiebelWSFailedLogRowDeleting As SiebelWSFailedLogRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SiebelWSFailedLogRowDeleted As SiebelWSFailedLogRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSiebelWSFailedLogRow(ByVal row As SiebelWSFailedLogRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSiebelWSFailedLogRow(ByVal quoteId As String, ByVal FunctionName As String, ByVal Parameters As String, ByVal EmailAddress As String, ByVal ErrorMessage As String, ByVal InsertTime As Date, ByVal LastRecallTime As Date, ByVal IsRecall As Boolean) As SiebelWSFailedLogRow
            Dim rowSiebelWSFailedLogRow As SiebelWSFailedLogRow = CType(Me.NewRow,SiebelWSFailedLogRow)
            Dim columnValuesArray() As Object = New Object() {quoteId, FunctionName, Parameters, EmailAddress, ErrorMessage, InsertTime, LastRecallTime, IsRecall}
            rowSiebelWSFailedLogRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSiebelWSFailedLogRow)
            Return rowSiebelWSFailedLogRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SiebelWSFailedLogDataTable = CType(MyBase.Clone,SiebelWSFailedLogDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SiebelWSFailedLogDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnquoteId = MyBase.Columns("quoteId")
            Me.columnFunctionName = MyBase.Columns("FunctionName")
            Me.columnParameters = MyBase.Columns("Parameters")
            Me.columnEmailAddress = MyBase.Columns("EmailAddress")
            Me.columnErrorMessage = MyBase.Columns("ErrorMessage")
            Me.columnInsertTime = MyBase.Columns("InsertTime")
            Me.columnLastRecallTime = MyBase.Columns("LastRecallTime")
            Me.columnIsRecall = MyBase.Columns("IsRecall")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnquoteId = New Global.System.Data.DataColumn("quoteId", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnquoteId)
            Me.columnFunctionName = New Global.System.Data.DataColumn("FunctionName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFunctionName)
            Me.columnParameters = New Global.System.Data.DataColumn("Parameters", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnParameters)
            Me.columnEmailAddress = New Global.System.Data.DataColumn("EmailAddress", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmailAddress)
            Me.columnErrorMessage = New Global.System.Data.DataColumn("ErrorMessage", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnErrorMessage)
            Me.columnInsertTime = New Global.System.Data.DataColumn("InsertTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInsertTime)
            Me.columnLastRecallTime = New Global.System.Data.DataColumn("LastRecallTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLastRecallTime)
            Me.columnIsRecall = New Global.System.Data.DataColumn("IsRecall", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsRecall)
            Me.columnquoteId.AllowDBNull = false
            Me.columnquoteId.MaxLength = 30
            Me.columnFunctionName.MaxLength = 100
            Me.columnParameters.MaxLength = 200
            Me.columnEmailAddress.MaxLength = 100
            Me.columnErrorMessage.MaxLength = 2147483647
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSiebelWSFailedLogRow() As SiebelWSFailedLogRow
            Return CType(Me.NewRow,SiebelWSFailedLogRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SiebelWSFailedLogRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SiebelWSFailedLogRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SiebelWSFailedLogRowChangedEvent) Is Nothing) Then
                RaiseEvent SiebelWSFailedLogRowChanged(Me, New SiebelWSFailedLogRowChangeEvent(CType(e.Row,SiebelWSFailedLogRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SiebelWSFailedLogRowChangingEvent) Is Nothing) Then
                RaiseEvent SiebelWSFailedLogRowChanging(Me, New SiebelWSFailedLogRowChangeEvent(CType(e.Row,SiebelWSFailedLogRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SiebelWSFailedLogRowDeletedEvent) Is Nothing) Then
                RaiseEvent SiebelWSFailedLogRowDeleted(Me, New SiebelWSFailedLogRowChangeEvent(CType(e.Row,SiebelWSFailedLogRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SiebelWSFailedLogRowDeletingEvent) Is Nothing) Then
                RaiseEvent SiebelWSFailedLogRowDeleting(Me, New SiebelWSFailedLogRowChangeEvent(CType(e.Row,SiebelWSFailedLogRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSiebelWSFailedLogRow(ByVal row As SiebelWSFailedLogRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As SiebelDS = New SiebelDS()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SiebelWSFailedLogDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SIEBEL_ACCOUNTRow
        Inherits Global.System.Data.DataRow
        
        Private tableSIEBEL_ACCOUNT As SIEBEL_ACCOUNTDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSIEBEL_ACCOUNT = CType(Me.Table,SIEBEL_ACCOUNTDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ROW_ID() As String
            Get
                Return CType(Me(Me.tableSIEBEL_ACCOUNT.ROW_IDColumn),String)
            End Get
            Set
                Me(Me.tableSIEBEL_ACCOUNT.ROW_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ERP_ID() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_ACCOUNT.ERP_IDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ERP_ID' in table 'SIEBEL_ACCOUNT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_ACCOUNT.ERP_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ACCOUNT_NAME() As String
            Get
                Return CType(Me(Me.tableSIEBEL_ACCOUNT.ACCOUNT_NAMEColumn),String)
            End Get
            Set
                Me(Me.tableSIEBEL_ACCOUNT.ACCOUNT_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ACCOUNT_STATUS() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_ACCOUNT.ACCOUNT_STATUSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACCOUNT_STATUS' in table 'SIEBEL_ACCOUNT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_ACCOUNT.ACCOUNT_STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FAX_NUM() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_ACCOUNT.FAX_NUMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FAX_NUM' in table 'SIEBEL_ACCOUNT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_ACCOUNT.FAX_NUMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PHONE_NUM() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_ACCOUNT.PHONE_NUMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PHONE_NUM' in table 'SIEBEL_ACCOUNT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_ACCOUNT.PHONE_NUMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OU_TYPE_CD() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_ACCOUNT.OU_TYPE_CDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OU_TYPE_CD' in table 'SIEBEL_ACCOUNT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_ACCOUNT.OU_TYPE_CDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property URL() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_ACCOUNT.URLColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'URL' in table 'SIEBEL_ACCOUNT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_ACCOUNT.URLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BusinessGroup() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_ACCOUNT.BusinessGroupColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BusinessGroup' in table 'SIEBEL_ACCOUNT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_ACCOUNT.BusinessGroupColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ACCOUNT_TYPE() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_ACCOUNT.ACCOUNT_TYPEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACCOUNT_TYPE' in table 'SIEBEL_ACCOUNT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_ACCOUNT.ACCOUNT_TYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RBU() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_ACCOUNT.RBUColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RBU' in table 'SIEBEL_ACCOUNT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_ACCOUNT.RBUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRIMARY_SALES_EMAIL() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_ACCOUNT.PRIMARY_SALES_EMAILColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRIMARY_SALES_EMAIL' in table 'SIEBEL_ACCOUNT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_ACCOUNT.PRIMARY_SALES_EMAILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PARENT_ROW_ID() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_ACCOUNT.PARENT_ROW_IDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PARENT_ROW_ID' in table 'SIEBEL_ACCOUNT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_ACCOUNT.PARENT_ROW_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MAJORACCOUNT_FLAG() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_ACCOUNT.MAJORACCOUNT_FLAGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MAJORACCOUNT_FLAG' in table 'SIEBEL_ACCOUNT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_ACCOUNT.MAJORACCOUNT_FLAGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COMPETITOR_FLAG() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_ACCOUNT.COMPETITOR_FLAGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COMPETITOR_FLAG' in table 'SIEBEL_ACCOUNT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_ACCOUNT.COMPETITOR_FLAGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PARTNER_FLAG() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_ACCOUNT.PARTNER_FLAGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PARTNER_FLAG' in table 'SIEBEL_ACCOUNT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_ACCOUNT.PARTNER_FLAGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COUNTRY() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_ACCOUNT.COUNTRYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COUNTRY' in table 'SIEBEL_ACCOUNT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_ACCOUNT.COUNTRYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CITY() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_ACCOUNT.CITYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CITY' in table 'SIEBEL_ACCOUNT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_ACCOUNT.CITYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ADDRESS() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_ACCOUNT.ADDRESSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADDRESS' in table 'SIEBEL_ACCOUNT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_ACCOUNT.ADDRESSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STATE() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_ACCOUNT.STATEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STATE' in table 'SIEBEL_ACCOUNT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_ACCOUNT.STATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ZIPCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_ACCOUNT.ZIPCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ZIPCODE' in table 'SIEBEL_ACCOUNT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_ACCOUNT.ZIPCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PROVINCE() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_ACCOUNT.PROVINCEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROVINCE' in table 'SIEBEL_ACCOUNT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_ACCOUNT.PROVINCEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BAA() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_ACCOUNT.BAAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BAA' in table 'SIEBEL_ACCOUNT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_ACCOUNT.BAAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATED() As Date
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_ACCOUNT.CREATEDColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CREATED' in table 'SIEBEL_ACCOUNT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_ACCOUNT.CREATEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LAST_UPDATED() As Date
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_ACCOUNT.LAST_UPDATEDColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LAST_UPDATED' in table 'SIEBEL_ACCOUNT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_ACCOUNT.LAST_UPDATEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PriOwnerDivision() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_ACCOUNT.PriOwnerDivisionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PriOwnerDivision' in table 'SIEBEL_ACCOUNT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_ACCOUNT.PriOwnerDivisionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PriOwnerRowId() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_ACCOUNT.PriOwnerRowIdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PriOwnerRowId' in table 'SIEBEL_ACCOUNT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_ACCOUNT.PriOwnerRowIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PriOwnerPosition() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_ACCOUNT.PriOwnerPositionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PriOwnerPosition' in table 'SIEBEL_ACCOUNT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_ACCOUNT.PriOwnerPositionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LOCATION() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_ACCOUNT.LOCATIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LOCATION' in table 'SIEBEL_ACCOUNT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_ACCOUNT.LOCATIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ACCOUNT_TEAM() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_ACCOUNT.ACCOUNT_TEAMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACCOUNT_TEAM' in table 'SIEBEL_ACCOUNT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_ACCOUNT.ACCOUNT_TEAMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ADDRESS2() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_ACCOUNT.ADDRESS2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADDRESS2' in table 'SIEBEL_ACCOUNT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_ACCOUNT.ADDRESS2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ACCOUNT_CC_GRADE() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_ACCOUNT.ACCOUNT_CC_GRADEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACCOUNT_CC_GRADE' in table 'SIEBEL_ACCOUNT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_ACCOUNT.ACCOUNT_CC_GRADEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CURRENCY() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_ACCOUNT.CURRENCYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CURRENCY' in table 'SIEBEL_ACCOUNT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_ACCOUNT.CURRENCYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsERP_IDNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_ACCOUNT.ERP_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetERP_IDNull()
            Me(Me.tableSIEBEL_ACCOUNT.ERP_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsACCOUNT_STATUSNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_ACCOUNT.ACCOUNT_STATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetACCOUNT_STATUSNull()
            Me(Me.tableSIEBEL_ACCOUNT.ACCOUNT_STATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFAX_NUMNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_ACCOUNT.FAX_NUMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFAX_NUMNull()
            Me(Me.tableSIEBEL_ACCOUNT.FAX_NUMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPHONE_NUMNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_ACCOUNT.PHONE_NUMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPHONE_NUMNull()
            Me(Me.tableSIEBEL_ACCOUNT.PHONE_NUMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOU_TYPE_CDNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_ACCOUNT.OU_TYPE_CDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOU_TYPE_CDNull()
            Me(Me.tableSIEBEL_ACCOUNT.OU_TYPE_CDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsURLNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_ACCOUNT.URLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetURLNull()
            Me(Me.tableSIEBEL_ACCOUNT.URLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBusinessGroupNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_ACCOUNT.BusinessGroupColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBusinessGroupNull()
            Me(Me.tableSIEBEL_ACCOUNT.BusinessGroupColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsACCOUNT_TYPENull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_ACCOUNT.ACCOUNT_TYPEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetACCOUNT_TYPENull()
            Me(Me.tableSIEBEL_ACCOUNT.ACCOUNT_TYPEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRBUNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_ACCOUNT.RBUColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRBUNull()
            Me(Me.tableSIEBEL_ACCOUNT.RBUColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRIMARY_SALES_EMAILNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_ACCOUNT.PRIMARY_SALES_EMAILColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRIMARY_SALES_EMAILNull()
            Me(Me.tableSIEBEL_ACCOUNT.PRIMARY_SALES_EMAILColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPARENT_ROW_IDNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_ACCOUNT.PARENT_ROW_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPARENT_ROW_IDNull()
            Me(Me.tableSIEBEL_ACCOUNT.PARENT_ROW_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMAJORACCOUNT_FLAGNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_ACCOUNT.MAJORACCOUNT_FLAGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMAJORACCOUNT_FLAGNull()
            Me(Me.tableSIEBEL_ACCOUNT.MAJORACCOUNT_FLAGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOMPETITOR_FLAGNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_ACCOUNT.COMPETITOR_FLAGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOMPETITOR_FLAGNull()
            Me(Me.tableSIEBEL_ACCOUNT.COMPETITOR_FLAGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPARTNER_FLAGNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_ACCOUNT.PARTNER_FLAGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPARTNER_FLAGNull()
            Me(Me.tableSIEBEL_ACCOUNT.PARTNER_FLAGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOUNTRYNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_ACCOUNT.COUNTRYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOUNTRYNull()
            Me(Me.tableSIEBEL_ACCOUNT.COUNTRYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCITYNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_ACCOUNT.CITYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCITYNull()
            Me(Me.tableSIEBEL_ACCOUNT.CITYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsADDRESSNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_ACCOUNT.ADDRESSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetADDRESSNull()
            Me(Me.tableSIEBEL_ACCOUNT.ADDRESSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTATENull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_ACCOUNT.STATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTATENull()
            Me(Me.tableSIEBEL_ACCOUNT.STATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsZIPCODENull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_ACCOUNT.ZIPCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetZIPCODENull()
            Me(Me.tableSIEBEL_ACCOUNT.ZIPCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPROVINCENull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_ACCOUNT.PROVINCEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPROVINCENull()
            Me(Me.tableSIEBEL_ACCOUNT.PROVINCEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBAANull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_ACCOUNT.BAAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBAANull()
            Me(Me.tableSIEBEL_ACCOUNT.BAAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCREATEDNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_ACCOUNT.CREATEDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCREATEDNull()
            Me(Me.tableSIEBEL_ACCOUNT.CREATEDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLAST_UPDATEDNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_ACCOUNT.LAST_UPDATEDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLAST_UPDATEDNull()
            Me(Me.tableSIEBEL_ACCOUNT.LAST_UPDATEDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPriOwnerDivisionNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_ACCOUNT.PriOwnerDivisionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPriOwnerDivisionNull()
            Me(Me.tableSIEBEL_ACCOUNT.PriOwnerDivisionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPriOwnerRowIdNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_ACCOUNT.PriOwnerRowIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPriOwnerRowIdNull()
            Me(Me.tableSIEBEL_ACCOUNT.PriOwnerRowIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPriOwnerPositionNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_ACCOUNT.PriOwnerPositionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPriOwnerPositionNull()
            Me(Me.tableSIEBEL_ACCOUNT.PriOwnerPositionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLOCATIONNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_ACCOUNT.LOCATIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLOCATIONNull()
            Me(Me.tableSIEBEL_ACCOUNT.LOCATIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsACCOUNT_TEAMNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_ACCOUNT.ACCOUNT_TEAMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetACCOUNT_TEAMNull()
            Me(Me.tableSIEBEL_ACCOUNT.ACCOUNT_TEAMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsADDRESS2Null() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_ACCOUNT.ADDRESS2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetADDRESS2Null()
            Me(Me.tableSIEBEL_ACCOUNT.ADDRESS2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsACCOUNT_CC_GRADENull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_ACCOUNT.ACCOUNT_CC_GRADEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetACCOUNT_CC_GRADENull()
            Me(Me.tableSIEBEL_ACCOUNT.ACCOUNT_CC_GRADEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCURRENCYNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_ACCOUNT.CURRENCYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCURRENCYNull()
            Me(Me.tableSIEBEL_ACCOUNT.CURRENCYColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SIEBEL_CONTACTRow
        Inherits Global.System.Data.DataRow
        
        Private tableSIEBEL_CONTACT As SIEBEL_CONTACTDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSIEBEL_CONTACT = CType(Me.Table,SIEBEL_CONTACTDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ROW_ID() As String
            Get
                Return CType(Me(Me.tableSIEBEL_CONTACT.ROW_IDColumn),String)
            End Get
            Set
                Me(Me.tableSIEBEL_CONTACT.ROW_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FirstName() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_CONTACT.FirstNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FirstName' in table 'SIEBEL_CONTACT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_CONTACT.FirstNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MiddleName() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_CONTACT.MiddleNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MiddleName' in table 'SIEBEL_CONTACT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_CONTACT.MiddleNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LastName() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_CONTACT.LastNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LastName' in table 'SIEBEL_CONTACT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_CONTACT.LastNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WorkPhone() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_CONTACT.WorkPhoneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WorkPhone' in table 'SIEBEL_CONTACT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_CONTACT.WorkPhoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CellPhone() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_CONTACT.CellPhoneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CellPhone' in table 'SIEBEL_CONTACT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_CONTACT.CellPhoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FaxNumber() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_CONTACT.FaxNumberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FaxNumber' in table 'SIEBEL_CONTACT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_CONTACT.FaxNumberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JOB_FUNCTION() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_CONTACT.JOB_FUNCTIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JOB_FUNCTION' in table 'SIEBEL_CONTACT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_CONTACT.JOB_FUNCTIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PAR_ROW_ID() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_CONTACT.PAR_ROW_IDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PAR_ROW_ID' in table 'SIEBEL_CONTACT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_CONTACT.PAR_ROW_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ERPID() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_CONTACT.ERPIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ERPID' in table 'SIEBEL_CONTACT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_CONTACT.ERPIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PriOrgId() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_CONTACT.PriOrgIdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PriOrgId' in table 'SIEBEL_CONTACT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_CONTACT.PriOrgIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OrgID() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_CONTACT.OrgIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OrgID' in table 'SIEBEL_CONTACT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_CONTACT.OrgIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OwnerId() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_CONTACT.OwnerIdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OwnerId' in table 'SIEBEL_CONTACT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_CONTACT.OwnerIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CanSeeOrder() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_CONTACT.CanSeeOrderColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CanSeeOrder' in table 'SIEBEL_CONTACT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_CONTACT.CanSeeOrderColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Password() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_CONTACT.PasswordColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Password' in table 'SIEBEL_CONTACT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_CONTACT.PasswordColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Sales_Rep() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_CONTACT.Sales_RepColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sales_Rep' in table 'SIEBEL_CONTACT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_CONTACT.Sales_RepColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NeverEmail() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_CONTACT.NeverEmailColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NeverEmail' in table 'SIEBEL_CONTACT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_CONTACT.NeverEmailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NeverCall() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_CONTACT.NeverCallColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NeverCall' in table 'SIEBEL_CONTACT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_CONTACT.NeverCallColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NeverFax() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_CONTACT.NeverFaxColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NeverFax' in table 'SIEBEL_CONTACT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_CONTACT.NeverFaxColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NeverMail() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_CONTACT.NeverMailColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NeverMail' in table 'SIEBEL_CONTACT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_CONTACT.NeverMailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JOB_TITLE() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_CONTACT.JOB_TITLEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JOB_TITLE' in table 'SIEBEL_CONTACT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_CONTACT.JOB_TITLEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EMAIL_ADDRESS() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_CONTACT.EMAIL_ADDRESSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMAIL_ADDRESS' in table 'SIEBEL_CONTACT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_CONTACT.EMAIL_ADDRESSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ACCOUNT_ROW_ID() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_CONTACT.ACCOUNT_ROW_IDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACCOUNT_ROW_ID' in table 'SIEBEL_CONTACT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_CONTACT.ACCOUNT_ROW_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ACCOUNT() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_CONTACT.ACCOUNTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACCOUNT' in table 'SIEBEL_CONTACT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_CONTACT.ACCOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ACCOUNT_TYPE() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_CONTACT.ACCOUNT_TYPEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACCOUNT_TYPE' in table 'SIEBEL_CONTACT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_CONTACT.ACCOUNT_TYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ACCOUNT_STATUS() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_CONTACT.ACCOUNT_STATUSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACCOUNT_STATUS' in table 'SIEBEL_CONTACT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_CONTACT.ACCOUNT_STATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COUNTRY() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_CONTACT.COUNTRYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COUNTRY' in table 'SIEBEL_CONTACT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_CONTACT.COUNTRYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Salutation() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_CONTACT.SalutationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Salutation' in table 'SIEBEL_CONTACT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_CONTACT.SalutationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EMPLOYEE_FLAG() As String
            Get
                Return CType(Me(Me.tableSIEBEL_CONTACT.EMPLOYEE_FLAGColumn),String)
            End Get
            Set
                Me(Me.tableSIEBEL_CONTACT.EMPLOYEE_FLAGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ACTIVE_FLG() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_CONTACT.ACTIVE_FLGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACTIVE_FLG' in table 'SIEBEL_CONTACT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_CONTACT.ACTIVE_FLGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property User_Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_CONTACT.User_TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'User_Type' in table 'SIEBEL_CONTACT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_CONTACT.User_TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Reg_Source() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_CONTACT.Reg_SourceColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Reg_Source' in table 'SIEBEL_CONTACT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_CONTACT.Reg_SourceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATED() As Date
            Get
                Return CType(Me(Me.tableSIEBEL_CONTACT.CREATEDColumn),Date)
            End Get
            Set
                Me(Me.tableSIEBEL_CONTACT.CREATEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LAST_UPDATED() As Date
            Get
                Return CType(Me(Me.tableSIEBEL_CONTACT.LAST_UPDATEDColumn),Date)
            End Get
            Set
                Me(Me.tableSIEBEL_CONTACT.LAST_UPDATEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRIMARY_FLAG() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_CONTACT.PRIMARY_FLAGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRIMARY_FLAG' in table 'SIEBEL_CONTACT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_CONTACT.PRIMARY_FLAGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFirstNameNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_CONTACT.FirstNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFirstNameNull()
            Me(Me.tableSIEBEL_CONTACT.FirstNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMiddleNameNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_CONTACT.MiddleNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMiddleNameNull()
            Me(Me.tableSIEBEL_CONTACT.MiddleNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLastNameNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_CONTACT.LastNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLastNameNull()
            Me(Me.tableSIEBEL_CONTACT.LastNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWorkPhoneNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_CONTACT.WorkPhoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWorkPhoneNull()
            Me(Me.tableSIEBEL_CONTACT.WorkPhoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCellPhoneNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_CONTACT.CellPhoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCellPhoneNull()
            Me(Me.tableSIEBEL_CONTACT.CellPhoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFaxNumberNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_CONTACT.FaxNumberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFaxNumberNull()
            Me(Me.tableSIEBEL_CONTACT.FaxNumberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJOB_FUNCTIONNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_CONTACT.JOB_FUNCTIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJOB_FUNCTIONNull()
            Me(Me.tableSIEBEL_CONTACT.JOB_FUNCTIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPAR_ROW_IDNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_CONTACT.PAR_ROW_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPAR_ROW_IDNull()
            Me(Me.tableSIEBEL_CONTACT.PAR_ROW_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsERPIDNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_CONTACT.ERPIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetERPIDNull()
            Me(Me.tableSIEBEL_CONTACT.ERPIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPriOrgIdNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_CONTACT.PriOrgIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPriOrgIdNull()
            Me(Me.tableSIEBEL_CONTACT.PriOrgIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOrgIDNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_CONTACT.OrgIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOrgIDNull()
            Me(Me.tableSIEBEL_CONTACT.OrgIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOwnerIdNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_CONTACT.OwnerIdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOwnerIdNull()
            Me(Me.tableSIEBEL_CONTACT.OwnerIdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCanSeeOrderNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_CONTACT.CanSeeOrderColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCanSeeOrderNull()
            Me(Me.tableSIEBEL_CONTACT.CanSeeOrderColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPasswordNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_CONTACT.PasswordColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPasswordNull()
            Me(Me.tableSIEBEL_CONTACT.PasswordColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSales_RepNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_CONTACT.Sales_RepColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSales_RepNull()
            Me(Me.tableSIEBEL_CONTACT.Sales_RepColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNeverEmailNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_CONTACT.NeverEmailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNeverEmailNull()
            Me(Me.tableSIEBEL_CONTACT.NeverEmailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNeverCallNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_CONTACT.NeverCallColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNeverCallNull()
            Me(Me.tableSIEBEL_CONTACT.NeverCallColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNeverFaxNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_CONTACT.NeverFaxColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNeverFaxNull()
            Me(Me.tableSIEBEL_CONTACT.NeverFaxColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNeverMailNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_CONTACT.NeverMailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNeverMailNull()
            Me(Me.tableSIEBEL_CONTACT.NeverMailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJOB_TITLENull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_CONTACT.JOB_TITLEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJOB_TITLENull()
            Me(Me.tableSIEBEL_CONTACT.JOB_TITLEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEMAIL_ADDRESSNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_CONTACT.EMAIL_ADDRESSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEMAIL_ADDRESSNull()
            Me(Me.tableSIEBEL_CONTACT.EMAIL_ADDRESSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsACCOUNT_ROW_IDNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_CONTACT.ACCOUNT_ROW_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetACCOUNT_ROW_IDNull()
            Me(Me.tableSIEBEL_CONTACT.ACCOUNT_ROW_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsACCOUNTNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_CONTACT.ACCOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetACCOUNTNull()
            Me(Me.tableSIEBEL_CONTACT.ACCOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsACCOUNT_TYPENull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_CONTACT.ACCOUNT_TYPEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetACCOUNT_TYPENull()
            Me(Me.tableSIEBEL_CONTACT.ACCOUNT_TYPEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsACCOUNT_STATUSNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_CONTACT.ACCOUNT_STATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetACCOUNT_STATUSNull()
            Me(Me.tableSIEBEL_CONTACT.ACCOUNT_STATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOUNTRYNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_CONTACT.COUNTRYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOUNTRYNull()
            Me(Me.tableSIEBEL_CONTACT.COUNTRYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSalutationNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_CONTACT.SalutationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSalutationNull()
            Me(Me.tableSIEBEL_CONTACT.SalutationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsACTIVE_FLGNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_CONTACT.ACTIVE_FLGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetACTIVE_FLGNull()
            Me(Me.tableSIEBEL_CONTACT.ACTIVE_FLGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUser_TypeNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_CONTACT.User_TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUser_TypeNull()
            Me(Me.tableSIEBEL_CONTACT.User_TypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsReg_SourceNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_CONTACT.Reg_SourceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetReg_SourceNull()
            Me(Me.tableSIEBEL_CONTACT.Reg_SourceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRIMARY_FLAGNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_CONTACT.PRIMARY_FLAGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRIMARY_FLAGNull()
            Me(Me.tableSIEBEL_CONTACT.PRIMARY_FLAGColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SIEBEL_OPPORTUNITYRow
        Inherits Global.System.Data.DataRow
        
        Private tableSIEBEL_OPPORTUNITY As SIEBEL_OPPORTUNITYDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSIEBEL_OPPORTUNITY = CType(Me.Table,SIEBEL_OPPORTUNITYDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ROW_ID() As String
            Get
                Return CType(Me(Me.tableSIEBEL_OPPORTUNITY.ROW_IDColumn),String)
            End Get
            Set
                Me(Me.tableSIEBEL_OPPORTUNITY.ROW_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ACCOUNT_ROW_ID() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_OPPORTUNITY.ACCOUNT_ROW_IDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACCOUNT_ROW_ID' in table 'SIEBEL_OPPORTUNITY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_OPPORTUNITY.ACCOUNT_ROW_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NAME() As String
            Get
                Return CType(Me(Me.tableSIEBEL_OPPORTUNITY.NAMEColumn),String)
            End Get
            Set
                Me(Me.tableSIEBEL_OPPORTUNITY.NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CREATED() As Date
            Get
                Return CType(Me(Me.tableSIEBEL_OPPORTUNITY.CREATEDColumn),Date)
            End Get
            Set
                Me(Me.tableSIEBEL_OPPORTUNITY.CREATEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ACCOUNT_NAME() As String
            Get
                Return CType(Me(Me.tableSIEBEL_OPPORTUNITY.ACCOUNT_NAMEColumn),String)
            End Get
            Set
                Me(Me.tableSIEBEL_OPPORTUNITY.ACCOUNT_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ChannelPartner() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_OPPORTUNITY.ChannelPartnerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ChannelPartner' in table 'SIEBEL_OPPORTUNITY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_OPPORTUNITY.ChannelPartnerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CURCY_CD() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_OPPORTUNITY.CURCY_CDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CURCY_CD' in table 'SIEBEL_OPPORTUNITY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_OPPORTUNITY.CURCY_CDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SUM_REVN_AMT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_OPPORTUNITY.SUM_REVN_AMTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUM_REVN_AMT' in table 'SIEBEL_OPPORTUNITY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_OPPORTUNITY.SUM_REVN_AMTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ACCOUNT_ROW_ID1() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_OPPORTUNITY.ACCOUNT_ROW_ID1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACCOUNT_ROW_ID1' in table 'SIEBEL_OPPORTUNITY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_OPPORTUNITY.ACCOUNT_ROW_ID1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SUM_WIN_PROB() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_OPPORTUNITY.SUM_WIN_PROBColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUM_WIN_PROB' in table 'SIEBEL_OPPORTUNITY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_OPPORTUNITY.SUM_WIN_PROBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STAGE_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_OPPORTUNITY.STAGE_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STAGE_NAME' in table 'SIEBEL_OPPORTUNITY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_OPPORTUNITY.STAGE_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STATUS_CD() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_OPPORTUNITY.STATUS_CDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STATUS_CD' in table 'SIEBEL_OPPORTUNITY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_OPPORTUNITY.STATUS_CDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SALES_METHOD_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_OPPORTUNITY.SALES_METHOD_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SALES_METHOD_NAME' in table 'SIEBEL_OPPORTUNITY' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_OPPORTUNITY.SALES_METHOD_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Channel() As String
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_OPPORTUNITY.ChannelColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Channel' in table 'SIEBEL_OPPORTUNITY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_OPPORTUNITY.ChannelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SUM_EFFECTIVE_DT() As Date
            Get
                Try 
                    Return CType(Me(Me.tableSIEBEL_OPPORTUNITY.SUM_EFFECTIVE_DTColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUM_EFFECTIVE_DT' in table 'SIEBEL_OPPORTUNITY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSIEBEL_OPPORTUNITY.SUM_EFFECTIVE_DTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsACCOUNT_ROW_IDNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_OPPORTUNITY.ACCOUNT_ROW_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetACCOUNT_ROW_IDNull()
            Me(Me.tableSIEBEL_OPPORTUNITY.ACCOUNT_ROW_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsChannelPartnerNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_OPPORTUNITY.ChannelPartnerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetChannelPartnerNull()
            Me(Me.tableSIEBEL_OPPORTUNITY.ChannelPartnerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCURCY_CDNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_OPPORTUNITY.CURCY_CDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCURCY_CDNull()
            Me(Me.tableSIEBEL_OPPORTUNITY.CURCY_CDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSUM_REVN_AMTNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_OPPORTUNITY.SUM_REVN_AMTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSUM_REVN_AMTNull()
            Me(Me.tableSIEBEL_OPPORTUNITY.SUM_REVN_AMTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsACCOUNT_ROW_ID1Null() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_OPPORTUNITY.ACCOUNT_ROW_ID1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetACCOUNT_ROW_ID1Null()
            Me(Me.tableSIEBEL_OPPORTUNITY.ACCOUNT_ROW_ID1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSUM_WIN_PROBNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_OPPORTUNITY.SUM_WIN_PROBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSUM_WIN_PROBNull()
            Me(Me.tableSIEBEL_OPPORTUNITY.SUM_WIN_PROBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTAGE_NAMENull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_OPPORTUNITY.STAGE_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTAGE_NAMENull()
            Me(Me.tableSIEBEL_OPPORTUNITY.STAGE_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTATUS_CDNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_OPPORTUNITY.STATUS_CDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTATUS_CDNull()
            Me(Me.tableSIEBEL_OPPORTUNITY.STATUS_CDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSALES_METHOD_NAMENull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_OPPORTUNITY.SALES_METHOD_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSALES_METHOD_NAMENull()
            Me(Me.tableSIEBEL_OPPORTUNITY.SALES_METHOD_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsChannelNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_OPPORTUNITY.ChannelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetChannelNull()
            Me(Me.tableSIEBEL_OPPORTUNITY.ChannelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSUM_EFFECTIVE_DTNull() As Boolean
            Return Me.IsNull(Me.tableSIEBEL_OPPORTUNITY.SUM_EFFECTIVE_DTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSUM_EFFECTIVE_DTNull()
            Me(Me.tableSIEBEL_OPPORTUNITY.SUM_EFFECTIVE_DTColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SiebelWSFailedLogRow
        Inherits Global.System.Data.DataRow
        
        Private tableSiebelWSFailedLog As SiebelWSFailedLogDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSiebelWSFailedLog = CType(Me.Table,SiebelWSFailedLogDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property quoteId() As String
            Get
                Return CType(Me(Me.tableSiebelWSFailedLog.quoteIdColumn),String)
            End Get
            Set
                Me(Me.tableSiebelWSFailedLog.quoteIdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FunctionName() As String
            Get
                Try 
                    Return CType(Me(Me.tableSiebelWSFailedLog.FunctionNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FunctionName' in table 'SiebelWSFailedLog' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSiebelWSFailedLog.FunctionNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Parameters() As String
            Get
                Try 
                    Return CType(Me(Me.tableSiebelWSFailedLog.ParametersColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Parameters' in table 'SiebelWSFailedLog' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSiebelWSFailedLog.ParametersColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EmailAddress() As String
            Get
                Try 
                    Return CType(Me(Me.tableSiebelWSFailedLog.EmailAddressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EmailAddress' in table 'SiebelWSFailedLog' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSiebelWSFailedLog.EmailAddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ErrorMessage() As String
            Get
                Try 
                    Return CType(Me(Me.tableSiebelWSFailedLog.ErrorMessageColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ErrorMessage' in table 'SiebelWSFailedLog' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSiebelWSFailedLog.ErrorMessageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property InsertTime() As Date
            Get
                Try 
                    Return CType(Me(Me.tableSiebelWSFailedLog.InsertTimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InsertTime' in table 'SiebelWSFailedLog' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSiebelWSFailedLog.InsertTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LastRecallTime() As Date
            Get
                Try 
                    Return CType(Me(Me.tableSiebelWSFailedLog.LastRecallTimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LastRecallTime' in table 'SiebelWSFailedLog' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSiebelWSFailedLog.LastRecallTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IsRecall() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableSiebelWSFailedLog.IsRecallColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IsRecall' in table 'SiebelWSFailedLog' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSiebelWSFailedLog.IsRecallColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFunctionNameNull() As Boolean
            Return Me.IsNull(Me.tableSiebelWSFailedLog.FunctionNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFunctionNameNull()
            Me(Me.tableSiebelWSFailedLog.FunctionNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsParametersNull() As Boolean
            Return Me.IsNull(Me.tableSiebelWSFailedLog.ParametersColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetParametersNull()
            Me(Me.tableSiebelWSFailedLog.ParametersColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEmailAddressNull() As Boolean
            Return Me.IsNull(Me.tableSiebelWSFailedLog.EmailAddressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEmailAddressNull()
            Me(Me.tableSiebelWSFailedLog.EmailAddressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsErrorMessageNull() As Boolean
            Return Me.IsNull(Me.tableSiebelWSFailedLog.ErrorMessageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetErrorMessageNull()
            Me(Me.tableSiebelWSFailedLog.ErrorMessageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsInsertTimeNull() As Boolean
            Return Me.IsNull(Me.tableSiebelWSFailedLog.InsertTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetInsertTimeNull()
            Me(Me.tableSiebelWSFailedLog.InsertTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLastRecallTimeNull() As Boolean
            Return Me.IsNull(Me.tableSiebelWSFailedLog.LastRecallTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLastRecallTimeNull()
            Me(Me.tableSiebelWSFailedLog.LastRecallTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIsRecallNull() As Boolean
            Return Me.IsNull(Me.tableSiebelWSFailedLog.IsRecallColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIsRecallNull()
            Me(Me.tableSiebelWSFailedLog.IsRecallColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class SIEBEL_ACCOUNTRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SIEBEL_ACCOUNTRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As SIEBEL_ACCOUNTRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As SIEBEL_ACCOUNTRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class SIEBEL_CONTACTRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SIEBEL_CONTACTRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As SIEBEL_CONTACTRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As SIEBEL_CONTACTRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class SIEBEL_OPPORTUNITYRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SIEBEL_OPPORTUNITYRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As SIEBEL_OPPORTUNITYRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As SIEBEL_OPPORTUNITYRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class SiebelWSFailedLogRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SiebelWSFailedLogRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As SiebelWSFailedLogRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As SiebelWSFailedLogRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace SiebelDSTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class SIEBEL_ACCOUNTTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "SIEBEL_ACCOUNT"
            tableMapping.ColumnMappings.Add("ROW_ID", "ROW_ID")
            tableMapping.ColumnMappings.Add("ERP_ID", "ERP_ID")
            tableMapping.ColumnMappings.Add("ACCOUNT_NAME", "ACCOUNT_NAME")
            tableMapping.ColumnMappings.Add("ACCOUNT_STATUS", "ACCOUNT_STATUS")
            tableMapping.ColumnMappings.Add("FAX_NUM", "FAX_NUM")
            tableMapping.ColumnMappings.Add("PHONE_NUM", "PHONE_NUM")
            tableMapping.ColumnMappings.Add("OU_TYPE_CD", "OU_TYPE_CD")
            tableMapping.ColumnMappings.Add("URL", "URL")
            tableMapping.ColumnMappings.Add("BusinessGroup", "BusinessGroup")
            tableMapping.ColumnMappings.Add("ACCOUNT_TYPE", "ACCOUNT_TYPE")
            tableMapping.ColumnMappings.Add("RBU", "RBU")
            tableMapping.ColumnMappings.Add("PRIMARY_SALES_EMAIL", "PRIMARY_SALES_EMAIL")
            tableMapping.ColumnMappings.Add("PARENT_ROW_ID", "PARENT_ROW_ID")
            tableMapping.ColumnMappings.Add("MAJORACCOUNT_FLAG", "MAJORACCOUNT_FLAG")
            tableMapping.ColumnMappings.Add("COMPETITOR_FLAG", "COMPETITOR_FLAG")
            tableMapping.ColumnMappings.Add("PARTNER_FLAG", "PARTNER_FLAG")
            tableMapping.ColumnMappings.Add("COUNTRY", "COUNTRY")
            tableMapping.ColumnMappings.Add("CITY", "CITY")
            tableMapping.ColumnMappings.Add("ADDRESS", "ADDRESS")
            tableMapping.ColumnMappings.Add("STATE", "STATE")
            tableMapping.ColumnMappings.Add("ZIPCODE", "ZIPCODE")
            tableMapping.ColumnMappings.Add("PROVINCE", "PROVINCE")
            tableMapping.ColumnMappings.Add("BAA", "BAA")
            tableMapping.ColumnMappings.Add("CREATED", "CREATED")
            tableMapping.ColumnMappings.Add("LAST_UPDATED", "LAST_UPDATED")
            tableMapping.ColumnMappings.Add("PriOwnerDivision", "PriOwnerDivision")
            tableMapping.ColumnMappings.Add("PriOwnerRowId", "PriOwnerRowId")
            tableMapping.ColumnMappings.Add("PriOwnerPosition", "PriOwnerPosition")
            tableMapping.ColumnMappings.Add("LOCATION", "LOCATION")
            tableMapping.ColumnMappings.Add("ACCOUNT_TEAM", "ACCOUNT_TEAM")
            tableMapping.ColumnMappings.Add("ADDRESS2", "ADDRESS2")
            tableMapping.ColumnMappings.Add("ACCOUNT_CC_GRADE", "ACCOUNT_CC_GRADE")
            tableMapping.ColumnMappings.Add("CURRENCY", "CURRENCY")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("CRM").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "select top 1 a.ROW_ID, IsNull(b.ATTRIB_05,'') as ERP_ID, a.NAME as ACCOUNT_NAME, "& _ 
                "a.CUST_STAT_CD as ACCOUNT_STATUS,IsNull(a.MAIN_FAX_PH_NUM, '') as FAX_NUM, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"IsN"& _ 
                "ull(a.MAIN_PH_NUM, '') as PHONE_NUM,IsNull(a.OU_TYPE_CD, '') as OU_TYPE_CD,IsNul"& _ 
                "l(a.URL, '') as URL,IsNull(b.ATTRIB_34, '') as BusinessGroup, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"IsNull(a.OU_TYPE"& _ 
                "_CD, '') as ACCOUNT_TYPE, IsNull(c.NAME, '') as RBU, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"IsNull((select EMAIL_ADDR"& _ 
                " from S_CONTACT where ROW_ID in (select PR_EMP_ID from S_POSTN where ROW_ID in ("& _ 
                "select PR_POSTN_ID from S_ORG_EXT where ROW_ID=a.ROW_ID))),'') as PRIMARY_SALES_"& _ 
                "EMAIL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"a.PAR_OU_ID as PARENT_ROW_ID,IsNull(b.ATTRIB_09,'N') as MAJORACCOUNT_FL"& _ 
                "AG,IsNull(a.CMPT_FLG,'N') as COMPETITOR_FLAG,IsNull(a.PRTNR_FLG,'N') as PARTNER_"& _ 
                "FLAG,IsNull(d.COUNTRY,'') as COUNTRY,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"IsNull(d.CITY,'') as CITY,IsNull(d.ADDR,'"& _ 
                "') as ADDRESS,IsNull(d.STATE,'') as STATE, IsNull(d.ZIPCODE,'') as ZIPCODE, IsNu"& _ 
                "ll(d.PROVINCE,'') as PROVINCE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"IsNull((select top 1 NAME from S_INDUST where R"& _ 
                "OW_ID=a.X_ANNIE_PR_INDUST_ID),'N/A') as BAA,b.CREATED, b.LAST_UPD as LAST_UPDATE"& _ 
                "D, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"IsNull((select top 1 e.NAME from S_PARTY e inner join S_POSTN f on e.ROW_ID"& _ 
                "=f.OU_ID where f.ROW_ID in (select PR_POSTN_ID from S_ORG_EXT where ROW_ID=a.ROW"& _ 
                "_ID)),'') as PriOwnerDivision,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" PR_POSTN_ID as PriOwnerRowId,IsNull((select top"& _ 
                " 1 f.NAME from S_POSTN f where f.ROW_ID in (select PR_POSTN_ID from S_ORG_EXT wh"& _ 
                "ere ROW_ID=a.ROW_ID)),'') as PriOwnerPosition, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" cast('' as nvarchar(10)) as LO"& _ 
                "CATION, cast('' as nvarchar(10)) as ACCOUNT_TEAM, IsNull(d.ADDR_LINE_2,'') as AD"& _ 
                "DRESS2, IsNull(b.ATTRIB_36,'') as ACCOUNT_CC_GRADE,  IsNull(a.BASE_CURCY_CD,'') "& _ 
                "as CURRENCY "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" from S_ORG_EXT a left join S_ORG_EXT_X b on a.ROW_ID=b.ROW_ID lef"& _ 
                "t join S_PARTY c on a.BU_ID=c.ROW_ID left join S_ADDR_ORG d on a.PR_ADDR_ID=d.RO"& _ 
                "W_ID "
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT          TOP (1) a.ROW_ID, ISNULL(b.ATTRIB_05, N'') AS ERP_ID, a.NAME AS A"& _ 
                "CCOUNT_NAME, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            a.CUST_STAT_CD AS ACCOUNT_STATUS, ISN"& _ 
                "ULL(a.MAIN_FAX_PH_NUM, N'') AS FAX_NUM, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            ISNULL(a.M"& _ 
                "AIN_PH_NUM, N'') AS PHONE_NUM, ISNULL(a.OU_TYPE_CD, N'') AS OU_TYPE_CD, ISNULL(a"& _ 
                ".URL, N'') "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            AS URL, ISNULL(b.ATTRIB_34, N'') AS Bus"& _ 
                "inessGroup, ISNULL(a.OU_TYPE_CD, N'') AS ACCOUNT_TYPE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                       "& _ 
                "     ISNULL(c.NAME, N'') AS RBU, ISNULL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                ((SELEC"& _ 
                "T          EMAIL_ADDR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                    FROM              S_C"& _ 
                "ONTACT"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                    WHERE          (ROW_ID IN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                                                           (SELECT          PR_E"& _ 
                "MP_ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                      FRO"& _ 
                "M               S_POSTN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                       "& _ 
                "               WHERE           (ROW_ID IN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                     "& _ 
                "                                                                 (SELECT        "& _ 
                "  PR_POSTN_ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                 "& _ 
                "                                       FROM               S_ORG_EXT"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "                                                                                "& _ 
                "             WHERE           (ROW_ID = a.ROW_ID)))))), N'') AS PRIMARY_SALES_EMA"& _ 
                "IL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            a.PAR_OU_ID AS PARENT_ROW_ID, ISNULL(b.ATTRIB_"& _ 
                "09, N'N') AS MAJORACCOUNT_FLAG, ISNULL(a.CMPT_FLG, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                           "& _ 
                " N'N') AS COMPETITOR_FLAG, ISNULL(a.PRTNR_FLG, N'N') AS PARTNER_FLAG, ISNULL(d.C"& _ 
                "OUNTRY, N'') "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            AS COUNTRY, ISNULL(d.CITY, N'') AS CI"& _ 
                "TY, ISNULL(d.ADDR, N'') AS ADDRESS, ISNULL(d.STATE, N'') AS STATE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "                 ISNULL(d.ZIPCODE, N'') AS ZIPCODE, ISNULL(d.PROVINCE, N'') AS P"& _ 
                "ROVINCE, ISNULL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                ((SELECT          TOP (1) NAME"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                    FROM              S_INDUST"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"               "& _ 
                "                     WHERE          (ROW_ID = a.X_ANNIE_PR_INDUST_ID)), N'N/A') "& _ 
                "AS BAA, b.CREATED, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            b.LAST_UPD AS LAST_UPDATED, ISN"& _ 
                "ULL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                ((SELECT          TOP (1) e.NAME"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                           FROM              S_PARTY AS e INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"          "& _ 
                "                                                      S_POSTN AS f ON e.ROW_ID ="& _ 
                " f.OU_ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                    WHERE          (f.ROW_ID IN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                                                               (SELECT          "& _ 
                "PR_POSTN_ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                   "& _ 
                "   FROM               S_ORG_EXT AS S_ORG_EXT_2"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                "& _ 
                "                                      WHERE           (ROW_ID = a.ROW_ID)))), N'"& _ 
                "') AS PriOwnerDivision, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            a.PR_POSTN_ID AS PriOwnerR"& _ 
                "owId, ISNULL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                ((SELECT          TOP (1) NAME"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  "& _ 
                "                                  FROM              S_POSTN AS f"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "                      WHERE          (ROW_ID IN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                               "& _ 
                "                                     (SELECT          PR_POSTN_ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             "& _ 
                "                                                         FROM               S_OR"& _ 
                "G_EXT AS S_ORG_EXT_1"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                          "& _ 
                "            WHERE           (ROW_ID = a.ROW_ID)))), N'') AS PriOwnerPosition, CA"& _ 
                "ST('' AS nvarchar(10)) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            AS LOCATION, CAST('' AS nva"& _ 
                "rchar(10)) AS ACCOUNT_TEAM, ISNULL(d.ADDR_LINE_2, N'') AS ADDRESS2, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"          "& _ 
                "                  ISNULL(b.ATTRIB_36, N'') AS ACCOUNT_CC_GRADE, ISNULL(a.BASE_CU"& _ 
                "RCY_CD, N'') AS CURRENCY"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM              S_ORG_EXT AS a LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    "& _ 
                "                        S_ORG_EXT_X AS b ON a.ROW_ID = b.ROW_ID LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            S_PARTY AS c ON a.BU_ID = c.ROW_ID LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            S_ADDR_PER AS d ON a.PR_ADDR_ID = d.ROW_ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE  "& _ 
                "        (a.ROW_ID = @RID)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RID", Global.System.Data.SqlDbType.[Variant], 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "ROW_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As SiebelDS.SIEBEL_ACCOUNTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As SiebelDS.SIEBEL_ACCOUNTDataTable = New SiebelDS.SIEBEL_ACCOUNTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetAccountByRowId(ByVal RID As Object) As SiebelDS.SIEBEL_ACCOUNTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (RID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("RID")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(RID,Object)
            End If
            Dim dataTable As SiebelDS.SIEBEL_ACCOUNTDataTable = New SiebelDS.SIEBEL_ACCOUNTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class SIEBEL_CONTACTTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "SIEBEL_CONTACT"
            tableMapping.ColumnMappings.Add("ROW_ID", "ROW_ID")
            tableMapping.ColumnMappings.Add("FirstName", "FirstName")
            tableMapping.ColumnMappings.Add("MiddleName", "MiddleName")
            tableMapping.ColumnMappings.Add("LastName", "LastName")
            tableMapping.ColumnMappings.Add("WorkPhone", "WorkPhone")
            tableMapping.ColumnMappings.Add("CellPhone", "CellPhone")
            tableMapping.ColumnMappings.Add("FaxNumber", "FaxNumber")
            tableMapping.ColumnMappings.Add("JOB_FUNCTION", "JOB_FUNCTION")
            tableMapping.ColumnMappings.Add("PAR_ROW_ID", "PAR_ROW_ID")
            tableMapping.ColumnMappings.Add("ERPID", "ERPID")
            tableMapping.ColumnMappings.Add("PriOrgId", "PriOrgId")
            tableMapping.ColumnMappings.Add("OrgID", "OrgID")
            tableMapping.ColumnMappings.Add("OwnerId", "OwnerId")
            tableMapping.ColumnMappings.Add("CanSeeOrder", "CanSeeOrder")
            tableMapping.ColumnMappings.Add("Password", "Password")
            tableMapping.ColumnMappings.Add("Sales_Rep", "Sales_Rep")
            tableMapping.ColumnMappings.Add("NeverEmail", "NeverEmail")
            tableMapping.ColumnMappings.Add("NeverCall", "NeverCall")
            tableMapping.ColumnMappings.Add("NeverFax", "NeverFax")
            tableMapping.ColumnMappings.Add("NeverMail", "NeverMail")
            tableMapping.ColumnMappings.Add("JOB_TITLE", "JOB_TITLE")
            tableMapping.ColumnMappings.Add("EMAIL_ADDRESS", "EMAIL_ADDRESS")
            tableMapping.ColumnMappings.Add("ACCOUNT_ROW_ID", "ACCOUNT_ROW_ID")
            tableMapping.ColumnMappings.Add("ACCOUNT", "ACCOUNT")
            tableMapping.ColumnMappings.Add("ACCOUNT_TYPE", "ACCOUNT_TYPE")
            tableMapping.ColumnMappings.Add("ACCOUNT_STATUS", "ACCOUNT_STATUS")
            tableMapping.ColumnMappings.Add("COUNTRY", "COUNTRY")
            tableMapping.ColumnMappings.Add("Salutation", "Salutation")
            tableMapping.ColumnMappings.Add("EMPLOYEE_FLAG", "EMPLOYEE_FLAG")
            tableMapping.ColumnMappings.Add("ACTIVE_FLG", "ACTIVE_FLG")
            tableMapping.ColumnMappings.Add("User_Type", "User_Type")
            tableMapping.ColumnMappings.Add("Reg_Source", "Reg_Source")
            tableMapping.ColumnMappings.Add("CREATED", "CREATED")
            tableMapping.ColumnMappings.Add("LAST_UPDATED", "LAST_UPDATED")
            tableMapping.ColumnMappings.Add("PRIMARY_FLAG", "PRIMARY_FLAG")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("CRM").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(2) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT top 1 A.ROW_ID, IsNull(A.FST_NAME, '') AS 'FirstName',IsNull(A.MID_NAME, '"& _ 
                "') as 'MiddleName', IsNull(A.LAST_NAME, '') AS 'LastName', IsNull(A.WORK_PH_NUM,"& _ 
                " '') as 'WorkPhone',IsNull(A.CELL_PH_NUM, '') as 'CellPhone',IsNull(A.FAX_PH_NUM"& _ 
                ", '') as 'FaxNumber', IsNull(E.ATTRIB_37, '') as 'JOB_FUNCTION', IsNull(A.PAR_RO"& _ 
                "W_ID, '') as PAR_ROW_ID,IsNull(D.ATTRIB_05, '') AS 'ERPID', IsNull(A.BU_ID, '') "& _ 
                "as 'PriOrgId',(select top 1 z.NAME from S_PARTY z where z.ROW_ID=A.BU_ID) as 'Or"& _ 
                "gID', IsNull(A.PR_POSTN_ID, '') as 'OwnerId',IsNull(E.ATTRIB_09, 'N') AS 'CanSee"& _ 
                "Order',IsNull(A.X_CONTACT_LOGIN_PASSWORD, '') AS Password,'' as 'Sales_Rep',IsNu"& _ 
                "ll(A.SUPPRESS_EMAIL_FLG, '') as NeverEmail,IsNull(A.SUPPRESS_CALL_FLG,'') as Nev"& _ 
                "erCall,IsNull(A.SUPPRESS_FAX_FLG, '') as NeverFax,IsNull(A.SUPPRESS_MAIL_FLG, ''"& _ 
                ") as NeverMail,IsNull(A.JOB_TITLE, '') as JOB_TITLE,IsNull(A.EMAIL_ADDR, '') AS "& _ 
                "'EMAIL_ADDRESS',B.ROW_ID as ACCOUNT_ROW_ID,IsNull(B.NAME, '') AS ACCOUNT,IsNull("& _ 
                "B.OU_TYPE_CD, '') AS 'ACCOUNT_TYPE', IsNull(B.CUST_STAT_CD, '') AS 'ACCOUNT_STAT"& _ 
                "US',IsNull(C.COUNTRY, '') AS COUNTRY,IsNull(A.PER_TITLE, '') as Salutation,A.EMP"& _ 
                "_FLG as EMPLOYEE_FLAG,IsNull(A.ACTIVE_FLG,'N') as ACTIVE_FLG,IsNull(A.DFLT_ORDER"& _ 
                "_PROC_CD,'') as User_Type, IsNull(F.APPL_SRC_CD,'') as Reg_Source,A.CREATED, A.L"& _ 
                "AST_UPD as LAST_UPDATED, A.PR_REP_SYS_FLG as PRIMARY_FLAG FROM S_CONTACT A LEFT "& _ 
                "JOIN S_CONTACT_X E ON A.ROW_ID = E.ROW_ID LEFT JOIN S_ORG_EXT B ON A.PR_DEPT_OU_"& _ 
                "ID = B.PAR_ROW_ID LEFT JOIN S_ORG_EXT_X D ON B.ROW_ID = D.ROW_ID LEFT JOIN S_ADD"& _ 
                "R_ORG C ON A.PR_OU_ADDR_ID = C.ROW_ID LEFT JOIN S_PER_PRTNRAPPL F ON A.ROW_ID=F."& _ 
                "ROW_ID "
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT          TOP (100) A.ROW_ID, ISNULL(A.FST_NAME, N'') AS 'FirstName', ISNUL"& _ 
                "L(A.MID_NAME, N'') AS 'MiddleName', "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            ISNULL(A.LAST_"& _ 
                "NAME, N'') AS 'LastName', ISNULL(A.WORK_PH_NUM, N'') AS 'WorkPhone', "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                   ISNULL(A.CELL_PH_NUM, N'') AS 'CellPhone', ISNULL(A.FAX_PH_NU"& _ 
                "M, N'') AS 'FaxNumber', ISNULL(E.ATTRIB_37, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            N'') A"& _ 
                "S 'JOB_FUNCTION', ISNULL(A.PAR_ROW_ID, N'') AS PAR_ROW_ID, ISNULL(D.ATTRIB_05, N"& _ 
                "'') AS 'ERPID', "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            ISNULL(A.BU_ID, N'') AS 'PriOrgId'"& _ 
                ","&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                (SELECT          TOP (1) NAME"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "                    FROM               S_PARTY AS z"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                           "& _ 
                "       WHERE           (ROW_ID = A.BU_ID)) AS 'OrgID', ISNULL(A.PR_POSTN_ID, N''"& _ 
                ") AS 'OwnerId', ISNULL(E.ATTRIB_09, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            N'N') AS 'CanS"& _ 
                "eeOrder', ISNULL(A.X_CONTACT_LOGIN_PASSWORD, N'') AS Password, '' AS 'Sales_Rep'"& _ 
                ", "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            ISNULL(A.SUPPRESS_EMAIL_FLG, N'') AS NeverEmail,"& _ 
                " ISNULL(A.SUPPRESS_CALL_FLG, N'') AS NeverCall, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            IS"& _ 
                "NULL(A.SUPPRESS_FAX_FLG, N'') AS NeverFax, ISNULL(A.SUPPRESS_MAIL_FLG, N'') AS N"& _ 
                "everMail, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            ISNULL(A.JOB_TITLE, N'') AS JOB_TITLE, I"& _ 
                "SNULL(A.EMAIL_ADDR, N'') AS 'EMAIL_ADDRESS', "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            B.ROW"& _ 
                "_ID AS ACCOUNT_ROW_ID, ISNULL(B.NAME, N'') AS ACCOUNT, ISNULL(B.OU_TYPE_CD, N'')"& _ 
                " "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            AS 'ACCOUNT_TYPE', ISNULL(B.CUST_STAT_CD, N'') AS"& _ 
                " 'ACCOUNT_STATUS', ISNULL(C.COUNTRY, N'') "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            AS COUNT"& _ 
                "RY, ISNULL(A.PER_TITLE, N'') AS Salutation, A.EMP_FLG AS EMPLOYEE_FLAG, ISNULL(A"& _ 
                ".ACTIVE_FLG, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            N'N') AS ACTIVE_FLG, ISNULL(A.DFLT_OR"& _ 
                "DER_PROC_CD, N'') AS User_Type, ISNULL(F.APPL_SRC_CD, N'') "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                   "& _ 
                "         AS Reg_Source, A.CREATED, A.LAST_UPD AS LAST_UPDATED, A.PR_REP_SYS_FLG "& _ 
                "AS PRIMARY_FLAG"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM              S_CONTACT AS A LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             "& _ 
                "               S_CONTACT_X AS E ON A.ROW_ID = E.ROW_ID LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        "& _ 
                "                    S_ORG_EXT AS B ON A.PR_DEPT_OU_ID = B.PAR_ROW_ID LEFT OUTER "& _ 
                "JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            S_ORG_EXT_X AS D ON B.ROW_ID = D.ROW_ID LEFT O"& _ 
                "UTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            S_ADDR_ORG AS C ON A.PR_OU_ADDR_ID = C.RO"& _ 
                "W_ID LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            S_PER_PRTNRAPPL AS F ON A.ROW_"& _ 
                "ID = F.ROW_ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE          (UPPER(A.EMAIL_ADDR) = UPPER(@EM))"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EM", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT          TOP (1) A.ROW_ID, ISNULL(A.FST_NAME, N'') AS 'FirstName', ISNULL("& _ 
                "A.MID_NAME, N'') AS 'MiddleName', "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            ISNULL(A.LAST_NA"& _ 
                "ME, N'') AS 'LastName', ISNULL(A.WORK_PH_NUM, N'') AS 'WorkPhone', "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "                 ISNULL(A.CELL_PH_NUM, N'') AS 'CellPhone', ISNULL(A.FAX_PH_NUM,"& _ 
                " N'') AS 'FaxNumber', ISNULL(E.ATTRIB_37, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            N'') AS "& _ 
                "'JOB_FUNCTION', ISNULL(A.PAR_ROW_ID, N'') AS PAR_ROW_ID, ISNULL(D.ATTRIB_05, N''"& _ 
                ") AS 'ERPID', "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            ISNULL(A.BU_ID, N'') AS 'PriOrgId',"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                (SELECT          TOP (1) NAME"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                "& _ 
                "                  FROM               S_PARTY AS z"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             "& _ 
                "     WHERE           (ROW_ID = A.BU_ID)) AS 'OrgID', ISNULL(A.PR_POSTN_ID, N'') "& _ 
                "AS 'OwnerId', ISNULL(E.ATTRIB_09, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            N'N') AS 'CanSee"& _ 
                "Order', ISNULL(A.X_CONTACT_LOGIN_PASSWORD, N'') AS Password, '' AS 'Sales_Rep', "& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            ISNULL(A.SUPPRESS_EMAIL_FLG, N'') AS NeverEmail, I"& _ 
                "SNULL(A.SUPPRESS_CALL_FLG, N'') AS NeverCall, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            ISNU"& _ 
                "LL(A.SUPPRESS_FAX_FLG, N'') AS NeverFax, ISNULL(A.SUPPRESS_MAIL_FLG, N'') AS Nev"& _ 
                "erMail, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            ISNULL(A.JOB_TITLE, N'') AS JOB_TITLE, ISN"& _ 
                "ULL(A.EMAIL_ADDR, N'') AS 'EMAIL_ADDRESS', "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            B.ROW_I"& _ 
                "D AS ACCOUNT_ROW_ID, ISNULL(B.NAME, N'') AS ACCOUNT, ISNULL(B.OU_TYPE_CD, N'') "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            AS 'ACCOUNT_TYPE', ISNULL(B.CUST_STAT_CD, N'') AS '"& _ 
                "ACCOUNT_STATUS', ISNULL(C.COUNTRY, N'') "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            AS COUNTRY"& _ 
                ", ISNULL(A.PER_TITLE, N'') AS Salutation, A.EMP_FLG AS EMPLOYEE_FLAG, ISNULL(A.A"& _ 
                "CTIVE_FLG, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            N'N') AS ACTIVE_FLG, ISNULL(A.DFLT_ORDE"& _ 
                "R_PROC_CD, N'') AS User_Type, ISNULL(F.APPL_SRC_CD, N'') "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                "       AS Reg_Source, A.CREATED, A.LAST_UPD AS LAST_UPDATED, A.PR_REP_SYS_FLG AS"& _ 
                " PRIMARY_FLAG"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM              S_CONTACT AS A LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"               "& _ 
                "             S_CONTACT_X AS E ON A.ROW_ID = E.ROW_ID LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"          "& _ 
                "                  S_ORG_EXT AS B ON A.PR_DEPT_OU_ID = B.PAR_ROW_ID LEFT OUTER JO"& _ 
                "IN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            S_ORG_EXT_X AS D ON B.ROW_ID = D.ROW_ID LEFT OUT"& _ 
                "ER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            S_ADDR_ORG AS C ON A.PR_OU_ADDR_ID = C.ROW_"& _ 
                "ID LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            S_PER_PRTNRAPPL AS F ON A.ROW_ID"& _ 
                " = F.ROW_ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE          (UPPER(A.EMAIL_ADDR) = UPPER(@EM)) AND (B.CUST_STAT_"& _ 
                "CD <> '')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY   B.CUST_STAT_CD"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EM", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As SiebelDS.SIEBEL_CONTACTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As SiebelDS.SIEBEL_CONTACTDataTable = New SiebelDS.SIEBEL_CONTACTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetContactByEmail(ByVal EM As String) As SiebelDS.SIEBEL_CONTACTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (EM Is Nothing) Then
                Throw New Global.System.ArgumentNullException("EM")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(EM,String)
            End If
            Dim dataTable As SiebelDS.SIEBEL_CONTACTDataTable = New SiebelDS.SIEBEL_CONTACTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetTopOneContactByEmail(ByVal EM As String) As SiebelDS.SIEBEL_CONTACTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (EM Is Nothing) Then
                Throw New Global.System.ArgumentNullException("EM")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(EM,String)
            End If
            Dim dataTable As SiebelDS.SIEBEL_CONTACTDataTable = New SiebelDS.SIEBEL_CONTACTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class SIEBEL_OPPORTUNITYTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "SIEBEL_OPPORTUNITY"
            tableMapping.ColumnMappings.Add("ROW_ID", "ROW_ID")
            tableMapping.ColumnMappings.Add("ACCOUNT_ROW_ID", "ACCOUNT_ROW_ID")
            tableMapping.ColumnMappings.Add("NAME", "NAME")
            tableMapping.ColumnMappings.Add("CREATED", "CREATED")
            tableMapping.ColumnMappings.Add("ACCOUNT_NAME", "ACCOUNT_NAME")
            tableMapping.ColumnMappings.Add("ChannelPartner", "ChannelPartner")
            tableMapping.ColumnMappings.Add("CURCY_CD", "CURCY_CD")
            tableMapping.ColumnMappings.Add("SUM_REVN_AMT", "SUM_REVN_AMT")
            tableMapping.ColumnMappings.Add("ACCOUNT_ROW_ID1", "ACCOUNT_ROW_ID1")
            tableMapping.ColumnMappings.Add("SUM_WIN_PROB", "SUM_WIN_PROB")
            tableMapping.ColumnMappings.Add("STAGE_NAME", "STAGE_NAME")
            tableMapping.ColumnMappings.Add("STATUS_CD", "STATUS_CD")
            tableMapping.ColumnMappings.Add("SALES_METHOD_NAME", "SALES_METHOD_NAME")
            tableMapping.ColumnMappings.Add("Channel", "Channel")
            tableMapping.ColumnMappings.Add("SUM_EFFECTIVE_DT", "SUM_EFFECTIVE_DT")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("CRM").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(5) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT          TOP (1) A.ROW_ID, A.PR_DEPT_OU_ID AS ACCOUNT_ROW_ID, A.NAME, A.CR"& _ 
                "EATED, B.NAME AS ACCOUNT_NAME, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            ISNULL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "                     ((SELECT          TOP (1) NAME"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                           "& _ 
                "         FROM              S_ORG_EXT AS z"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                    W"& _ 
                "HERE          (ROW_ID = A.PR_PRTNR_ID)), N'') AS ChannelPartner, A.CURCY_CD, A.S"& _ 
                "UM_REVN_AMT, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            A.PR_DEPT_OU_ID AS ACCOUNT_ROW_ID, A."& _ 
                "SUM_WIN_PROB, ISNULL(B.NAME, N'') AS STAGE_NAME, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            A"& _ 
                ".STATUS_CD, ISNULL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                ((SELECT          NAME"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    "& _ 
                "                                FROM              S_SALES_METHOD AS SM"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        "& _ 
                "                            WHERE          (ROW_ID = A.SALES_METHOD_ID)), N'') A"& _ 
                "S SALES_METHOD_NAME, ISNULL(A.CHANNEL_TYPE_CD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            N''"& _ 
                ") AS Channel, A.SUM_EFFECTIVE_DT"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM              S_OPTY AS A INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    "& _ 
                "                        S_ORG_EXT AS B ON A.PR_DEPT_OU_ID = B.ROW_ID OR A.PR_PRT"& _ 
                "NR_ID = B.ROW_ID LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            S_OPTY_X AS X ON A"& _ 
                ".ROW_ID = X.ROW_ID"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "select count(ROW_ID) as c from S_OPTY where PR_DEPT_OU_ID=@ACCOUNTID and NAME=@OP"& _ 
                "TYNAME"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ACCOUNTID", Global.System.Data.SqlDbType.NVarChar, 15, Global.System.Data.ParameterDirection.Input, 0, 0, "PR_DEPT_OU_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OPTYNAME", Global.System.Data.SqlDbType.NVarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT          A.ROW_ID, A.PR_DEPT_OU_ID AS ACCOUNT_ROW_ID, A.NAME, A.CREATED, B"& _ 
                ".NAME AS ACCOUNT_NAME, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            ISNULL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                   "& _ 
                "             ((SELECT          TOP (1) NAME"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                   "& _ 
                " FROM              S_ORG_EXT AS z"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                    WHERE    "& _ 
                "      (ROW_ID = A.PR_PRTNR_ID)), N'') AS ChannelPartner, A.CURCY_CD, A.SUM_REVN_"& _ 
                "AMT, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            A.PR_DEPT_OU_ID AS ACCOUNT_ROW_ID, A.SUM_WIN_"& _ 
                "PROB, ISNULL(B.NAME, N'') AS STAGE_NAME, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            A.STATUS_"& _ 
                "CD, ISNULL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                ((SELECT          NAME"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            "& _ 
                "                        FROM              S_SALES_METHOD AS SM"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                "& _ 
                "                    WHERE          (ROW_ID = A.SALES_METHOD_ID)), N'') AS SALES_"& _ 
                "METHOD_NAME, ISNULL(A.CHANNEL_TYPE_CD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            N'') AS Cha"& _ 
                "nnel, A.SUM_EFFECTIVE_DT"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM              S_OPTY AS A INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            "& _ 
                "                S_ORG_EXT AS B ON A.PR_DEPT_OU_ID = B.ROW_ID OR A.PR_PRTNR_ID = "& _ 
                "B.ROW_ID LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            S_OPTY_X AS X ON A.ROW_ID "& _ 
                "= X.ROW_ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE          (A.PR_DEPT_OU_ID IS NOT NULL) AND (UPPER(A.NAME) LIKE"& _ 
                " N'%' + REPLACE(UPPER(@OPTYNAME), '*', '%') + '%') "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                           "& _ 
                " AND (B.ROW_ID = @ACCOUNTID)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY   A.NAME, A.CREATED DESC"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OPTYNAME", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ACCOUNTID", Global.System.Data.SqlDbType.NVarChar, 15, Global.System.Data.ParameterDirection.Input, 0, 0, "ROW_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT       CASE A.CURR_STG_ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         WHEN '1-VXVAID' THEN 'c'"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         WHEN"& _ 
                " '1-VXVAIE' THEN 'b'"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ELSE 'a' END  as orderbystr,   A.ROW_ID, A.PR_DEPT_OU_ID A"& _ 
                "S ACCOUNT_ROW_ID,A.CURR_STG_ID, A.NAME, A.CREATED, B.NAME AS ACCOUNT_NAME, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"   "& _ 
                "                         A.CREATED_BY, ISNULL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                ("& _ 
                "(SELECT          TOP (1) EMAIL_ADDR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                    FROM   "& _ 
                "           S_CONTACT AS z"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                    WHERE          (R"& _ 
                "OW_ID = A.CAMP_CON_ID)), N'') AS CONTACT, ISNULL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                              "& _ 
                "  ((SELECT          TOP (1) NAME"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                    FROM      "& _ 
                "        S_STG AS z"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                    WHERE          (ROW_ID ="& _ 
                " A.CURR_STG_ID )), N'') AS STAGE_NAME, ISNULL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                ("& _ 
                "(SELECT          TOP (1) su.LOGIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                    FROM     "& _ 
                "         S_POSTN AS z LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                         "& _ 
                "                       S_USER AS su ON z.PR_EMP_ID = su.ROW_ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                "& _ 
                "                    WHERE          (z.ROW_ID = A.PR_POSTN_ID)), N'') AS [PRIMARY"& _ 
                "], ISNULL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                ((SELECT          TOP (1) NAME"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                               FROM              S_ORG_EXT AS z"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"               "& _ 
                "                     WHERE          (ROW_ID = A.PR_PRTNR_ID)), N'') AS ChannelPa"& _ 
                "rtner, A.CURCY_CD, A.SUM_REVN_AMT, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            A.PR_DEPT_OU_ID"& _ 
                " AS ACCOUNT_ROW_ID, A.SUM_WIN_PROB, A.STATUS_CD, ISNULL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                       "& _ 
                "         ((SELECT          NAME"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                    FROM       "& _ 
                "       S_SALES_METHOD AS SM"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                    WHERE          "& _ 
                "(ROW_ID = A.SALES_METHOD_ID)), N'') AS SALES_METHOD_NAME, ISNULL(A.CHANNEL_TYPE_"& _ 
                "CD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            N'') AS Channel, A.SUM_EFFECTIVE_DT"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM     "& _ 
                "         S_OPTY AS A INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            S_ORG_EXT AS B ON A"& _ 
                ".PR_DEPT_OU_ID = B.ROW_ID OR A.PR_PRTNR_ID = B.ROW_ID LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                   S_OPTY_X AS X ON A.ROW_ID = X.ROW_ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE          (A.PR_DE"& _ 
                "PT_OU_ID IS NOT NULL) AND (UPPER(A.NAME) LIKE N'%' + REPLACE(UPPER(@OPTYNAME), '"& _ 
                "*', '%') + '%') "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            AND (B.ROW_ID = @ACCOUNTID)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                      AND A.CURR_STG_ID<>'' "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY   orderbystr, A.CREATED D"& _ 
                "ESC"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OPTYNAME", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ACCOUNTID", Global.System.Data.SqlDbType.NVarChar, 15, Global.System.Data.ParameterDirection.Input, 0, 0, "ROW_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT          A.ROW_ID, A.PR_DEPT_OU_ID AS ACCOUNT_ROW_ID,A.CURR_STG_ID, A.NAME"& _ 
                ", A.CREATED, B.NAME AS ACCOUNT_NAME, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            A.CREATED_BY,"& _ 
                " ISNULL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                ((SELECT          TOP (1) EMAIL_ADDR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "                                   FROM              S_CONTACT AS z"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "                         WHERE          (ROW_ID = A.CAMP_CON_ID)), N'') AS CONTA"& _ 
                "CT, ISNULL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                ((SELECT          TOP (1) NAME"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    "& _ 
                "                                FROM              S_STG AS z"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  "& _ 
                "                  WHERE          (ROW_ID = A.CURR_STG_ID)), N'') AS STAGE_NAME, "& _ 
                "ISNULL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                ((SELECT          TOP (1) su.LOGIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    "& _ 
                "                                FROM              S_POSTN AS z LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "                                                                S_USER AS su ON "& _ 
                "z.PR_EMP_ID = su.ROW_ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                    WHERE          (z.R"& _ 
                "OW_ID = A.PR_POSTN_ID)), N'') AS [PRIMARY], ISNULL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            "& _ 
                "    ((SELECT          TOP (1) NAME"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                    FROM    "& _ 
                "          S_ORG_EXT AS z"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                    WHERE          (RO"& _ 
                "W_ID = A.PR_PRTNR_ID)), N'') AS ChannelPartner, A.CURCY_CD, A.SUM_REVN_AMT, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  "& _ 
                "                          A.PR_DEPT_OU_ID AS ACCOUNT_ROW_ID, A.SUM_WIN_PROB, A.S"& _ 
                "TATUS_CD, ISNULL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                ((SELECT          NAME"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"      "& _ 
                "                              FROM              S_SALES_METHOD AS SM"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"          "& _ 
                "                          WHERE          (ROW_ID = A.SALES_METHOD_ID)), N'') AS "& _ 
                "SALES_METHOD_NAME, ISNULL(A.CHANNEL_TYPE_CD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            N'') "& _ 
                "AS Channel, A.SUM_EFFECTIVE_DT"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM              S_OPTY AS A INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"      "& _ 
                "                      S_ORG_EXT AS B ON A.PR_DEPT_OU_ID = B.ROW_ID OR A.PR_PRTNR"& _ 
                "_ID = B.ROW_ID LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            S_OPTY_X AS X ON A.R"& _ 
                "OW_ID = X.ROW_ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE          (A.PR_DEPT_OU_ID IS NOT NULL) AND (UPPER(A.NAME"& _ 
                ") LIKE N'%' + REPLACE(UPPER(@OPTYNAME), '*', '%') + '%') "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                "       AND (B.ROW_ID = @ACCOUNTID)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                           AND A.CURR_STG_ID"& _ 
                "<>''"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY    A.CREATED DESC"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OPTYNAME", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ACCOUNTID", Global.System.Data.SqlDbType.NVarChar, 15, Global.System.Data.ParameterDirection.Input, 0, 0, "ROW_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(5).Connection = Me.Connection
            Me._commandCollection(5).CommandText = "SELECT     CASE A.CURR_STG_ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         WHEN '1-VXVAID' THEN 'c'"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         WHEN '"& _ 
                "1-VXVAIE' THEN 'b'"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ELSE 'a' END  as orderbystr,       A.ROW_ID, A.PR_DEPT_OU_ID"& _ 
                " AS ACCOUNT_ROW_ID,A.CURR_STG_ID, A.NAME, A.CREATED, B.NAME AS ACCOUNT_NAME, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "                           A.CREATED_BY, ISNULL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                               "& _ 
                " ((SELECT          TOP (1) EMAIL_ADDR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                    FROM "& _ 
                "             S_CONTACT AS z"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                    WHERE          "& _ 
                "(ROW_ID = A.CAMP_CON_ID)), N'') AS CONTACT, ISNULL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            "& _ 
                "    ((SELECT          TOP (1) NAME"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                    FROM    "& _ 
                "          S_STG AS z"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                    WHERE          (ROW_ID"& _ 
                " = A.CURR_STG_ID     and   upper(NAME) <> upper('0% Lost') and upper(NAME) <> up"& _ 
                "per('100% Won-PO Input in SAP')  )), N'') AS STAGE_NAME, ISNULL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"               "& _ 
                "                 ((SELECT          TOP (1) su.LOGIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                           "& _ 
                "         FROM              S_POSTN AS z LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                       "& _ 
                "                                         S_USER AS su ON z.PR_EMP_ID = su.ROW_ID"& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                    WHERE          (z.ROW_ID = A.PR_POSTN_ID))"& _ 
                ", N'') AS [PRIMARY], ISNULL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                ((SELECT          T"& _ 
                "OP (1) NAME"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                    FROM              S_ORG_EXT AS "& _ 
                "z"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                    WHERE          (ROW_ID = A.PR_PRTNR_ID)),"& _ 
                " N'') AS ChannelPartner, A.CURCY_CD, A.SUM_REVN_AMT, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         "& _ 
                "   A.PR_DEPT_OU_ID AS ACCOUNT_ROW_ID, A.SUM_WIN_PROB, A.STATUS_CD, ISNULL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                           ((SELECT          NAME"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             "& _ 
                "       FROM              S_SALES_METHOD AS SM"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                 "& _ 
                "   WHERE          (ROW_ID = A.SALES_METHOD_ID)), N'') AS SALES_METHOD_NAME, ISNU"& _ 
                "LL(A.CHANNEL_TYPE_CD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            N'') AS Channel, A.SUM_EFFEC"& _ 
                "TIVE_DT"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM              S_OPTY AS A INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            S"& _ 
                "_ORG_EXT AS B ON A.PR_DEPT_OU_ID = B.ROW_ID OR A.PR_PRTNR_ID = B.ROW_ID LEFT OUT"& _ 
                "ER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            S_OPTY_X AS X ON A.ROW_ID = X.ROW_ID"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE"& _ 
                "          (A.PR_DEPT_OU_ID IS NOT NULL) AND (UPPER(A.NAME) LIKE N'%' + REPLACE(U"& _ 
                "PPER(@OPTYNAME), '*', '%') + '%') "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            AND (B.ROW_ID = "& _ 
                "@ACCOUNTID) and   A.STATUS_CD<>'Won'"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY   orderbystr , A.CREATED DESC"
            Me._commandCollection(5).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OPTYNAME", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ACCOUNTID", Global.System.Data.SqlDbType.[Variant], 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "ROW_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As SiebelDS.SIEBEL_OPPORTUNITYDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As SiebelDS.SIEBEL_OPPORTUNITYDataTable = New SiebelDS.SIEBEL_OPPORTUNITYDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function SearchOpty(ByVal OPTYNAME As String, ByVal ACCOUNTID As String) As SiebelDS.SIEBEL_OPPORTUNITYDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (OPTYNAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("OPTYNAME")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(OPTYNAME,String)
            End If
            If (ACCOUNTID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ACCOUNTID")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(ACCOUNTID,String)
            End If
            Dim dataTable As SiebelDS.SIEBEL_OPPORTUNITYDataTable = New SiebelDS.SIEBEL_OPPORTUNITYDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function SearchOptyForANA(ByVal OPTYNAME As String, ByVal ACCOUNTID As String) As SiebelDS.SIEBEL_OPPORTUNITYDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            If (OPTYNAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("OPTYNAME")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(OPTYNAME,String)
            End If
            If (ACCOUNTID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ACCOUNTID")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(ACCOUNTID,String)
            End If
            Dim dataTable As SiebelDS.SIEBEL_OPPORTUNITYDataTable = New SiebelDS.SIEBEL_OPPORTUNITYDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function SearchOptyV2(ByVal OPTYNAME As String, ByVal ACCOUNTID As String) As SiebelDS.SIEBEL_OPPORTUNITYDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            If (OPTYNAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("OPTYNAME")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(OPTYNAME,String)
            End If
            If (ACCOUNTID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ACCOUNTID")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(ACCOUNTID,String)
            End If
            Dim dataTable As SiebelDS.SIEBEL_OPPORTUNITYDataTable = New SiebelDS.SIEBEL_OPPORTUNITYDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function SearchOptyV3(ByVal OPTYNAME As String, ByVal ACCOUNTID As Object) As SiebelDS.SIEBEL_OPPORTUNITYDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            If (OPTYNAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("OPTYNAME")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(OPTYNAME,String)
            End If
            If (ACCOUNTID Is Nothing) Then
                Throw New Global.System.ArgumentNullException("ACCOUNTID")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(ACCOUNTID,Object)
            End If
            Dim dataTable As SiebelDS.SIEBEL_OPPORTUNITYDataTable = New SiebelDS.SIEBEL_OPPORTUNITYDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function CheckOptyNameExist(ByVal ACCOUNTID As String, ByVal OPTYNAME As String) As Global.System.Nullable(Of Integer)
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            If (ACCOUNTID Is Nothing) Then
                command.Parameters(0).Value = Global.System.DBNull.Value
            Else
                command.Parameters(0).Value = CType(ACCOUNTID,String)
            End If
            If (OPTYNAME Is Nothing) Then
                Throw New Global.System.ArgumentNullException("OPTYNAME")
            Else
                command.Parameters(1).Value = CType(OPTYNAME,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Integer)()
            Else
                Return New Global.System.Nullable(Of Integer)(CType(returnValue,Integer))
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class SiebelWSFailedLogTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "SiebelWSFailedLog"
            tableMapping.ColumnMappings.Add("quoteId", "quoteId")
            tableMapping.ColumnMappings.Add("FunctionName", "FunctionName")
            tableMapping.ColumnMappings.Add("Parameters", "Parameters")
            tableMapping.ColumnMappings.Add("EmailAddress", "EmailAddress")
            tableMapping.ColumnMappings.Add("ErrorMessage", "ErrorMessage")
            tableMapping.ColumnMappings.Add("InsertTime", "InsertTime")
            tableMapping.ColumnMappings.Add("LastRecallTime", "LastRecallTime")
            tableMapping.ColumnMappings.Add("IsRecall", "IsRecall")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [SiebelWSFailedLog] ([quoteId], [FunctionName], [Parameters], [EmailA"& _ 
                "ddress], [ErrorMessage], [InsertTime], [LastRecallTime], [IsRecall]) VALUES (@qu"& _ 
                "oteId, @FunctionName, @Parameters, @EmailAddress, @ErrorMessage, @InsertTime, @L"& _ 
                "astRecallTime, @IsRecall)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@quoteId", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "quoteId", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FunctionName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FunctionName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Parameters", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Parameters", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EmailAddress", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EmailAddress", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ErrorMessage", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ErrorMessage", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InsertTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InsertTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LastRecallTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LastRecallTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsRecall", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsRecall", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("EQ").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT          quoteId, FunctionName, Parameters, EmailAddress, ErrorMessage, In"& _ 
                "sertTime, LastRecallTime, IsRecall"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM              SiebelWSFailedLog"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As SiebelDS.SiebelWSFailedLogDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As SiebelDS.SiebelWSFailedLogDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As SiebelDS.SiebelWSFailedLogDataTable = New SiebelDS.SiebelWSFailedLogDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As SiebelDS.SiebelWSFailedLogDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As SiebelDS) As Integer
            Return Me.Adapter.Update(dataSet, "SiebelWSFailedLog")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal quoteId As String, ByVal FunctionName As String, ByVal Parameters As String, ByVal EmailAddress As String, ByVal ErrorMessage As String, ByVal InsertTime As Global.System.Nullable(Of Date), ByVal LastRecallTime As Global.System.Nullable(Of Date), ByVal IsRecall As Global.System.Nullable(Of Boolean)) As Integer
            If (quoteId Is Nothing) Then
                Throw New Global.System.ArgumentNullException("quoteId")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(quoteId,String)
            End If
            If (FunctionName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(FunctionName,String)
            End If
            If (Parameters Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Parameters,String)
            End If
            If (EmailAddress Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(EmailAddress,String)
            End If
            If (ErrorMessage Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(ErrorMessage,String)
            End If
            If (InsertTime.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(InsertTime.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (LastRecallTime.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(LastRecallTime.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (IsRecall.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(IsRecall.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
End Namespace
