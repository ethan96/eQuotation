<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Number" xml:space="preserve">
    <value>Number</value>
  </data>
  <data name="Pick" xml:space="preserve">
    <value>Pick</value>
  </data>
  <data name="RoleId" xml:space="preserve">
    <value>Role ID</value>
  </data>
  <data name="RoleName" xml:space="preserve">
    <value>Role Name</value>
  </data>
  <data name="RoleValue" xml:space="preserve">
    <value>Role Value</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>User Name</value>
  </data>
  <data name="Cost" xml:space="preserve">
    <value>Cost</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="ProductName" xml:space="preserve">
    <value>Product Name</value>
  </data>
  <data name="Unit" xml:space="preserve">
    <value>Uint</value>
  </data>
  <data name="ClassNameNullError" xml:space="preserve">
    <value>Class Name Can Not Be Null Or Equal to 'ROOT'</value>
  </data>
  <data name="RoleIdNullError" xml:space="preserve">
    <value>Role Id Can Not Be Null</value>
  </data>
  <data name="RoleNameNullError" xml:space="preserve">
    <value>Role Name Can Not Be Null</value>
  </data>
  <data name="RootNodeCannotBeDelete" xml:space="preserve">
    <value>Root Node Can not Be Delete</value>
  </data>
  <data name="RootNodeCannotBeEidt" xml:space="preserve">
    <value>Root Node Can not Be Eidt</value>
  </data>
  <data name="UserNameNullError" xml:space="preserve">
    <value>User Name Can Not Be Null</value>
  </data>
  <data name="ProductCostMustBeNum" xml:space="preserve">
    <value>Product Cost Must Be Number</value>
  </data>
  <data name="ProductNameNullError" xml:space="preserve">
    <value>Product Name Can not Be Null</value>
  </data>
  <data name="ProductPriceMustBeNum" xml:space="preserve">
    <value>Product Price Must Be Number</value>
  </data>
  <data name="ProductUtilNullError" xml:space="preserve">
    <value>Product Util Can not Be Null</value>
  </data>
  <data name="ConfigNameNullError" xml:space="preserve">
    <value>Config Name Can Not Be Null</value>
  </data>
  <data name="CanNotAddItSelf" xml:space="preserve">
    <value>Can Not Add It Self</value>
  </data>
  <data name="Config" xml:space="preserve">
    <value>Config</value>
  </data>
  <data name="ConfigIDNullError" xml:space="preserve">
    <value>Config ID Can Not Be Null</value>
  </data>
  <data name="ConfigName" xml:space="preserve">
    <value>Config Name</value>
  </data>
  <data name="DestinationObjectIsTheSubObjectOfTheSourceObject" xml:space="preserve">
    <value>Destination Object Is The Sub Object Of The Source Object</value>
  </data>
  <data name="Maintain" xml:space="preserve">
    <value>Maintain</value>
  </data>
  <data name="PickConfig" xml:space="preserve">
    <value>Pick Config</value>
  </data>
  <data name="PickProd" xml:space="preserve">
    <value>Pick Product</value>
  </data>
  <data name="Product" xml:space="preserve">
    <value>Product</value>
  </data>
  <data name="ProductIdNullError" xml:space="preserve">
    <value>No Product Be Select</value>
  </data>
  <data name="RoleValueShouldBeNum" xml:space="preserve">
    <value>Role Value Should Be Num</value>
  </data>
  <data name="Class" xml:space="preserve">
    <value>Class</value>
  </data>
  <data name="ClassIdNullError" xml:space="preserve">
    <value>Class Id Can Not Be Null</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Image" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="ClassName" xml:space="preserve">
    <value>Class Name</value>
  </data>
  <data name="PassWord" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PassWordNotCorrect" xml:space="preserve">
    <value>Pass Word Not Correct</value>
  </data>
  <data name="URL" xml:space="preserve">
    <value>URL</value>
  </data>
  <data name="URLName" xml:space="preserve">
    <value>URL Name</value>
  </data>
  <data name="URLNameNullError" xml:space="preserve">
    <value>URL Name Can Not Be Null</value>
  </data>
  <data name="URLNullError" xml:space="preserve">
    <value>URL Can Not Be Null</value>
  </data>
  <data name="UserNameNotCorrect" xml:space="preserve">
    <value>User Name Not Correct</value>
  </data>
  <data name="ConfirmNewPassword" xml:space="preserve">
    <value>Comfirm New Password</value>
  </data>
  <data name="NewPassword" xml:space="preserve">
    <value>New Password</value>
  </data>
  <data name="UploadImage" xml:space="preserve">
    <value>Upload Images</value>
  </data>
  <data name="NewPasswordCanNotBeNull" xml:space="preserve">
    <value>New Password Can Not Be Null</value>
  </data>
  <data name="PasswordLengthShouldMoreThan4" xml:space="preserve">
    <value>Password Length Should More Than 4</value>
  </data>
  <data name="TwoPasswordNotSame" xml:space="preserve">
    <value>Two Password Not Same</value>
  </data>
  <data name="Degree" xml:space="preserve">
    <value>Degree</value>
  </data>
  <data name="OrderNo" xml:space="preserve">
    <value>Order No</value>
  </data>
  <data name="Query" xml:space="preserve">
    <value>Query</value>
  </data>
  <data name="TableNo" xml:space="preserve">
    <value>Table No</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="NewPrice" xml:space="preserve">
    <value>New Price</value>
  </data>
  <data name="NewQty" xml:space="preserve">
    <value>New Qty</value>
  </data>
  <data name="NotEnoughPower" xml:space="preserve">
    <value>Not Enough Power</value>
  </data>
  <data name="PleaseInputOrderNoOrTableNo" xml:space="preserve">
    <value>Please Input Order No Or Table No</value>
  </data>
  <data name="Qty" xml:space="preserve">
    <value>Qty</value>
  </data>
  <data name="SubTotal" xml:space="preserve">
    <value>Sub Total</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="Amount" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="From" xml:space="preserve">
    <value>From</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="NewAMT" xml:space="preserve">
    <value>New Ammount</value>
  </data>
  <data name="OrigAMT" xml:space="preserve">
    <value>Original Ammount</value>
  </data>
  <data name="Seq" xml:space="preserve">
    <value>Seq</value>
  </data>
  <data name="To" xml:space="preserve">
    <value>To</value>
  </data>
  <data name="ConfirmBy" xml:space="preserve">
    <value>ConfirmBy</value>
  </data>
  <data name="ConfirmDate" xml:space="preserve">
    <value>Confirm Date</value>
  </data>
  <data name="OrderBy" xml:space="preserve">
    <value>OrderBy</value>
  </data>
  <data name="OrderDate" xml:space="preserve">
    <value>Order Date</value>
  </data>
  <data name="AmountDate" xml:space="preserve">
    <value>Amount Date</value>
  </data>
  <data name="VIPAmountShouldBeNum" xml:space="preserve">
    <value>VIP Amount Should Be Number</value>
  </data>
  <data name="VIPNum" xml:space="preserve">
    <value>VIP Num</value>
  </data>
  <data name="VIPnumNullError" xml:space="preserve">
    <value>VIP Num Can Not Be Null</value>
  </data>
  <data name="YHName" xml:space="preserve">
    <value>YH Name</value>
  </data>
  <data name="YHNameNullError" xml:space="preserve">
    <value>YH Name Can Not Be Null</value>
  </data>
  <data name="AccountInfo" xml:space="preserve">
    <value>Account Info</value>
  </data>
  <data name="DeliveryDate" xml:space="preserve">
    <value>Delivery Date</value>
  </data>
  <data name="ExpiredDate" xml:space="preserve">
    <value>Expired Date</value>
  </data>
  <data name="Freight" xml:space="preserve">
    <value>Freight</value>
  </data>
  <data name="Insurance" xml:space="preserve">
    <value>Insurance</value>
  </data>
  <data name="PaymentTerms" xml:space="preserve">
    <value>Payment Terms</value>
  </data>
  <data name="QuoteNotes" xml:space="preserve">
    <value>Quote Notes</value>
  </data>
  <data name="QuoteTo" xml:space="preserve">
    <value>Quote To</value>
  </data>
  <data name="RelatedInformation" xml:space="preserve">
    <value>Low GP% Reason</value>
  </data>
  <data name="ShippingTerms" xml:space="preserve">
    <value>Shipping Terms</value>
  </data>
  <data name="SpecialCharge" xml:space="preserve">
    <value>Special Charge</value>
  </data>
  <data name="Tax" xml:space="preserve">
    <value>Tax Rate</value>
  </data>
  <data name="Attention" xml:space="preserve">
    <value>Attention</value>
  </data>
  <data name="BankAccount" xml:space="preserve">
    <value>Bank Account</value>
  </data>
  <data name="Currency" xml:space="preserve">
    <value>Currency</value>
  </data>
  <data name="DirectPhone" xml:space="preserve">
    <value>Direct Phone</value>
  </data>
  <data name="Office" xml:space="preserve">
    <value>Office</value>
  </data>
  <data name="SalesEmail" xml:space="preserve">
    <value>Sales Email</value>
  </data>
  <data name="PartNo" xml:space="preserve">
    <value>Part No</value>
  </data>
  <data name="CreatedBy" xml:space="preserve">
    <value>Created By</value>
  </data>
  <data name="CustomId" xml:space="preserve">
    <value>Custom Id</value>
  </data>
  <data name="PreparedBy" xml:space="preserve">
    <value>Prepared By</value>
  </data>
  <data name="QuoteDate" xml:space="preserve">
    <value>Quote Date</value>
  </data>
  <data name="AccountName" xml:space="preserve">
    <value>Account Name</value>
  </data>
  <data name="CompanyID" xml:space="preserve">
    <value>ERP ID</value>
  </data>
  <data name="Add2Cart" xml:space="preserve">
    <value>Add2Cart</value>
  </data>
  <data name="Detail" xml:space="preserve">
    <value>Detail</value>
  </data>
  <data name="Order" xml:space="preserve">
    <value>Order</value>
  </data>
  <data name="Pdf" xml:space="preserve">
    <value>PDF</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="RefId" xml:space="preserve">
    <value>Ref Id</value>
  </data>
  <data name="isRepeatedOrder" xml:space="preserve">
    <value>Repeated Order?</value>
  </data>
  <data name="GetErpIdFromSiebel" xml:space="preserve">
    <value>Get ERP ID from Siebel</value>
  </data>
  <data name="QuoteDescription" xml:space="preserve">
    <value>Quote Description</value>
  </data>
  <data name="Combine" xml:space="preserve">
    <value>Combine</value>
  </data>
  <data name="CopyFromId" xml:space="preserve">
    <value>Copy From QuoteNo</value>
  </data>
  <data name="QuoteId" xml:space="preserve">
    <value>Quote Id</value>
  </data>
  <data name="SiebelQuoteId" xml:space="preserve">
    <value>Siebel Opportunity Id</value>
  </data>
  <data name="PurchaseOrderNO" xml:space="preserve">
    <value>PO NO</value>
  </data>
  <data name="SalesOrderNO" xml:space="preserve">
    <value>SO NO</value>
  </data>
  <data name="Revision" xml:space="preserve">
    <value>Revision</value>
  </data>
  <data name="EmailGreeting" xml:space="preserve">
    <value>Greeting</value>
  </data>
  <data name="SpecialTandC" xml:space="preserve">
    <value>Special terms and conditions</value>
  </data>
  <data name="Signature" xml:space="preserve">
    <value>Signature</value>
  </data>
</root>