'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18444
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="eQuotationStaging")>  _
Partial Public Class Ling2SqlDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertQuote_Master(instance As Quote_Master)
    End Sub
  Partial Private Sub UpdateQuote_Master(instance As Quote_Master)
    End Sub
  Partial Private Sub DeleteQuote_Master(instance As Quote_Master)
    End Sub
  Partial Private Sub InsertQuote_Master_Extension(instance As Quote_Master_Extension)
    End Sub
  Partial Private Sub UpdateQuote_Master_Extension(instance As Quote_Master_Extension)
    End Sub
  Partial Private Sub DeleteQuote_Master_Extension(instance As Quote_Master_Extension)
    End Sub
  Partial Private Sub InsertQuoteItem(instance As QuoteItem)
    End Sub
  Partial Private Sub UpdateQuoteItem(instance As QuoteItem)
    End Sub
  Partial Private Sub DeleteQuoteItem(instance As QuoteItem)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("EQ").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property Quote_Masters() As System.Data.Linq.Table(Of Quote_Master)
		Get
			Return Me.GetTable(Of Quote_Master)
		End Get
	End Property
	
	Public ReadOnly Property Quote_Master_Extensions() As System.Data.Linq.Table(Of Quote_Master_Extension)
		Get
			Return Me.GetTable(Of Quote_Master_Extension)
		End Get
	End Property
	
	Public ReadOnly Property QuoteItems() As System.Data.Linq.Table(Of QuoteItem)
		Get
			Return Me.GetTable(Of QuoteItem)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.QuotationMaster")>  _
Partial Public Class Quote_Master
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _quoteId As String
	
	Private _customId As String
	
	Private _quoteToRowId As String
	
	Private _quoteToErpId As String
	
	Private _quoteToName As String
	
	Private _office As String
	
	Private _currency As String
	
	Private _salesEmail As String
	
	Private _salesRowId As String
	
	Private _directPhone As String
	
	Private _attentionRowId As String
	
	Private _attentionEmail As String
	
	Private _bankInfo As String
	
	Private _quoteDate As System.Nullable(Of Date)
	
	Private _deliveryDate As System.Nullable(Of Date)
	
	Private _expiredDate As System.Nullable(Of Date)
	
	Private _shipTerm As String
	
	Private _paymentTerm As String
	
	Private _freight As System.Nullable(Of Decimal)
	
	Private _insurance As System.Nullable(Of Decimal)
	
	Private _specialCharge As System.Nullable(Of Decimal)
	
	Private _tax As System.Nullable(Of Decimal)
	
	Private _quoteNote As String
	
	Private _relatedInfo As String
	
	Private _createdBy As String
	
	Private _createdDate As System.Nullable(Of Date)
	
	Private _preparedBy As String
	
	Private _qstatus As String
	
	Private _isShowListPrice As System.Nullable(Of Integer)
	
	Private _isShowDiscount As System.Nullable(Of Integer)
	
	Private _isShowDueDate As System.Nullable(Of Integer)
	
	Private _isLumpSumOnly As System.Nullable(Of Integer)
	
	Private _isRepeatedOrder As System.Nullable(Of Integer)
	
	Private _ogroup As String
	
	Private _DelDateFlag As System.Nullable(Of Integer)
	
	Private _org As String
	
	Private _siebelRBU As String
	
	Private _DIST_CHAN As String
	
	Private _DIVISION As String
	
	Private _SALESGROUP As String
	
	Private _SALESOFFICE As String
	
	Private _DISTRICT As String
	
	Private _PO_NO As String
	
	Private _CARE_ON As String
	
	Private _isExempt As System.Nullable(Of Integer)
	
	Private _INCO1 As String
	
	Private _INCO2 As String
	
	Private _PRINTOUT_FORMAT As System.Nullable(Of Integer)
	
	Private _OriginalQuoteID As String
	
	Private _DocReg As System.Nullable(Of Long)
	
	Private _DocType As System.Nullable(Of Integer)
	
	Private _reqDate As System.Nullable(Of Date)
	
	Private _DOCSTATUS As System.Nullable(Of Integer)
	
	Private _Partial As System.Nullable(Of Integer)
	
	Private _IS_EARLYSHIP As System.Nullable(Of Integer)
	
	Private _DocRealType As String
	
	Private _LastUpdatedDate As System.Nullable(Of Date)
	
	Private _LastUpdatedBy As String
	
	Private _PODate As System.Nullable(Of Date)
	
	Private _KEYPERSON As String
	
	Private _EMPLOYEEID As String
	
	Private _isVirPartOnly As System.Nullable(Of Integer)
	
	Private _SHIPCUSTPONO As String
	
	Private _TAXCLASS As String
	
	Private _TAXDEPCITY As String
	
	Private _TAXDSTCITY As String
	
	Private _TRIANGULARINDICATOR As String
	
	Private _quoteNo As String
	
	Private _Revision_Number As System.Nullable(Of Short)
	
	Private _Active As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnquoteIdChanging(value As String)
    End Sub
    Partial Private Sub OnquoteIdChanged()
    End Sub
    Partial Private Sub OncustomIdChanging(value As String)
    End Sub
    Partial Private Sub OncustomIdChanged()
    End Sub
    Partial Private Sub OnquoteToRowIdChanging(value As String)
    End Sub
    Partial Private Sub OnquoteToRowIdChanged()
    End Sub
    Partial Private Sub OnquoteToErpIdChanging(value As String)
    End Sub
    Partial Private Sub OnquoteToErpIdChanged()
    End Sub
    Partial Private Sub OnquoteToNameChanging(value As String)
    End Sub
    Partial Private Sub OnquoteToNameChanged()
    End Sub
    Partial Private Sub OnofficeChanging(value As String)
    End Sub
    Partial Private Sub OnofficeChanged()
    End Sub
    Partial Private Sub OncurrencyChanging(value As String)
    End Sub
    Partial Private Sub OncurrencyChanged()
    End Sub
    Partial Private Sub OnsalesEmailChanging(value As String)
    End Sub
    Partial Private Sub OnsalesEmailChanged()
    End Sub
    Partial Private Sub OnsalesRowIdChanging(value As String)
    End Sub
    Partial Private Sub OnsalesRowIdChanged()
    End Sub
    Partial Private Sub OndirectPhoneChanging(value As String)
    End Sub
    Partial Private Sub OndirectPhoneChanged()
    End Sub
    Partial Private Sub OnattentionRowIdChanging(value As String)
    End Sub
    Partial Private Sub OnattentionRowIdChanged()
    End Sub
    Partial Private Sub OnattentionEmailChanging(value As String)
    End Sub
    Partial Private Sub OnattentionEmailChanged()
    End Sub
    Partial Private Sub OnbankInfoChanging(value As String)
    End Sub
    Partial Private Sub OnbankInfoChanged()
    End Sub
    Partial Private Sub OnquoteDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnquoteDateChanged()
    End Sub
    Partial Private Sub OndeliveryDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndeliveryDateChanged()
    End Sub
    Partial Private Sub OnexpiredDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnexpiredDateChanged()
    End Sub
    Partial Private Sub OnshipTermChanging(value As String)
    End Sub
    Partial Private Sub OnshipTermChanged()
    End Sub
    Partial Private Sub OnpaymentTermChanging(value As String)
    End Sub
    Partial Private Sub OnpaymentTermChanged()
    End Sub
    Partial Private Sub OnfreightChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnfreightChanged()
    End Sub
    Partial Private Sub OninsuranceChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OninsuranceChanged()
    End Sub
    Partial Private Sub OnspecialChargeChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnspecialChargeChanged()
    End Sub
    Partial Private Sub OntaxChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OntaxChanged()
    End Sub
    Partial Private Sub OnquoteNoteChanging(value As String)
    End Sub
    Partial Private Sub OnquoteNoteChanged()
    End Sub
    Partial Private Sub OnrelatedInfoChanging(value As String)
    End Sub
    Partial Private Sub OnrelatedInfoChanged()
    End Sub
    Partial Private Sub OncreatedByChanging(value As String)
    End Sub
    Partial Private Sub OncreatedByChanged()
    End Sub
    Partial Private Sub OncreatedDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OncreatedDateChanged()
    End Sub
    Partial Private Sub OnpreparedByChanging(value As String)
    End Sub
    Partial Private Sub OnpreparedByChanged()
    End Sub
    Partial Private Sub OnqstatusChanging(value As String)
    End Sub
    Partial Private Sub OnqstatusChanged()
    End Sub
    Partial Private Sub OnisShowListPriceChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnisShowListPriceChanged()
    End Sub
    Partial Private Sub OnisShowDiscountChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnisShowDiscountChanged()
    End Sub
    Partial Private Sub OnisShowDueDateChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnisShowDueDateChanged()
    End Sub
    Partial Private Sub OnisLumpSumOnlyChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnisLumpSumOnlyChanged()
    End Sub
    Partial Private Sub OnisRepeatedOrderChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnisRepeatedOrderChanged()
    End Sub
    Partial Private Sub OnogroupChanging(value As String)
    End Sub
    Partial Private Sub OnogroupChanged()
    End Sub
    Partial Private Sub OnDelDateFlagChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDelDateFlagChanged()
    End Sub
    Partial Private Sub OnorgChanging(value As String)
    End Sub
    Partial Private Sub OnorgChanged()
    End Sub
    Partial Private Sub OnsiebelRBUChanging(value As String)
    End Sub
    Partial Private Sub OnsiebelRBUChanged()
    End Sub
    Partial Private Sub OnDIST_CHANChanging(value As String)
    End Sub
    Partial Private Sub OnDIST_CHANChanged()
    End Sub
    Partial Private Sub OnDIVISIONChanging(value As String)
    End Sub
    Partial Private Sub OnDIVISIONChanged()
    End Sub
    Partial Private Sub OnSALESGROUPChanging(value As String)
    End Sub
    Partial Private Sub OnSALESGROUPChanged()
    End Sub
    Partial Private Sub OnSALESOFFICEChanging(value As String)
    End Sub
    Partial Private Sub OnSALESOFFICEChanged()
    End Sub
    Partial Private Sub OnDISTRICTChanging(value As String)
    End Sub
    Partial Private Sub OnDISTRICTChanged()
    End Sub
    Partial Private Sub OnPO_NOChanging(value As String)
    End Sub
    Partial Private Sub OnPO_NOChanged()
    End Sub
    Partial Private Sub OnCARE_ONChanging(value As String)
    End Sub
    Partial Private Sub OnCARE_ONChanged()
    End Sub
    Partial Private Sub OnisExemptChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnisExemptChanged()
    End Sub
    Partial Private Sub OnINCO1Changing(value As String)
    End Sub
    Partial Private Sub OnINCO1Changed()
    End Sub
    Partial Private Sub OnINCO2Changing(value As String)
    End Sub
    Partial Private Sub OnINCO2Changed()
    End Sub
    Partial Private Sub OnPRINTOUT_FORMATChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPRINTOUT_FORMATChanged()
    End Sub
    Partial Private Sub OnOriginalQuoteIDChanging(value As String)
    End Sub
    Partial Private Sub OnOriginalQuoteIDChanged()
    End Sub
    Partial Private Sub OnDocRegChanging(value As System.Nullable(Of Long))
    End Sub
    Partial Private Sub OnDocRegChanged()
    End Sub
    Partial Private Sub OnDocTypeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDocTypeChanged()
    End Sub
    Partial Private Sub OnreqDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnreqDateChanged()
    End Sub
    Partial Private Sub OnDOCSTATUSChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnDOCSTATUSChanged()
    End Sub
    Partial Private Sub OnPartialChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPartialChanged()
    End Sub
    Partial Private Sub OnIS_EARLYSHIPChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIS_EARLYSHIPChanged()
    End Sub
    Partial Private Sub OnDocRealTypeChanging(value As String)
    End Sub
    Partial Private Sub OnDocRealTypeChanged()
    End Sub
    Partial Private Sub OnLastUpdatedDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnLastUpdatedDateChanged()
    End Sub
    Partial Private Sub OnLastUpdatedByChanging(value As String)
    End Sub
    Partial Private Sub OnLastUpdatedByChanged()
    End Sub
    Partial Private Sub OnPODateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnPODateChanged()
    End Sub
    Partial Private Sub OnKEYPERSONChanging(value As String)
    End Sub
    Partial Private Sub OnKEYPERSONChanged()
    End Sub
    Partial Private Sub OnEMPLOYEEIDChanging(value As String)
    End Sub
    Partial Private Sub OnEMPLOYEEIDChanged()
    End Sub
    Partial Private Sub OnisVirPartOnlyChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnisVirPartOnlyChanged()
    End Sub
    Partial Private Sub OnSHIPCUSTPONOChanging(value As String)
    End Sub
    Partial Private Sub OnSHIPCUSTPONOChanged()
    End Sub
    Partial Private Sub OnTAXCLASSChanging(value As String)
    End Sub
    Partial Private Sub OnTAXCLASSChanged()
    End Sub
    Partial Private Sub OnTAXDEPCITYChanging(value As String)
    End Sub
    Partial Private Sub OnTAXDEPCITYChanged()
    End Sub
    Partial Private Sub OnTAXDSTCITYChanging(value As String)
    End Sub
    Partial Private Sub OnTAXDSTCITYChanged()
    End Sub
    Partial Private Sub OnTRIANGULARINDICATORChanging(value As String)
    End Sub
    Partial Private Sub OnTRIANGULARINDICATORChanged()
    End Sub
    Partial Private Sub OnquoteNoChanging(value As String)
    End Sub
    Partial Private Sub OnquoteNoChanged()
    End Sub
    Partial Private Sub OnRevision_NumberChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnRevision_NumberChanged()
    End Sub
    Partial Private Sub OnActiveChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnActiveChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_quoteId", DbType:="NVarChar(30) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property quoteId() As String
		Get
			Return Me._quoteId
		End Get
		Set
			If (String.Equals(Me._quoteId, value) = false) Then
				Me.OnquoteIdChanging(value)
				Me.SendPropertyChanging
				Me._quoteId = value
				Me.SendPropertyChanged("quoteId")
				Me.OnquoteIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_customId", DbType:="NVarChar(300)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property customId() As String
		Get
			Return Me._customId
		End Get
		Set
			If (String.Equals(Me._customId, value) = false) Then
				Me.OncustomIdChanging(value)
				Me.SendPropertyChanging
				Me._customId = value
				Me.SendPropertyChanged("customId")
				Me.OncustomIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_quoteToRowId", DbType:="NVarChar(30)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property quoteToRowId() As String
		Get
			Return Me._quoteToRowId
		End Get
		Set
			If (String.Equals(Me._quoteToRowId, value) = false) Then
				Me.OnquoteToRowIdChanging(value)
				Me.SendPropertyChanging
				Me._quoteToRowId = value
				Me.SendPropertyChanged("quoteToRowId")
				Me.OnquoteToRowIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_quoteToErpId", DbType:="NVarChar(30)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property quoteToErpId() As String
		Get
			Return Me._quoteToErpId
		End Get
		Set
			If (String.Equals(Me._quoteToErpId, value) = false) Then
				Me.OnquoteToErpIdChanging(value)
				Me.SendPropertyChanging
				Me._quoteToErpId = value
				Me.SendPropertyChanged("quoteToErpId")
				Me.OnquoteToErpIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_quoteToName", DbType:="NVarChar(300)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property quoteToName() As String
		Get
			Return Me._quoteToName
		End Get
		Set
			If (String.Equals(Me._quoteToName, value) = false) Then
				Me.OnquoteToNameChanging(value)
				Me.SendPropertyChanging
				Me._quoteToName = value
				Me.SendPropertyChanged("quoteToName")
				Me.OnquoteToNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_office", DbType:="NVarChar(30)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property office() As String
		Get
			Return Me._office
		End Get
		Set
			If (String.Equals(Me._office, value) = false) Then
				Me.OnofficeChanging(value)
				Me.SendPropertyChanging
				Me._office = value
				Me.SendPropertyChanged("office")
				Me.OnofficeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_currency", DbType:="NVarChar(30)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property currency() As String
		Get
			Return Me._currency
		End Get
		Set
			If (String.Equals(Me._currency, value) = false) Then
				Me.OncurrencyChanging(value)
				Me.SendPropertyChanging
				Me._currency = value
				Me.SendPropertyChanged("currency")
				Me.OncurrencyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_salesEmail", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property salesEmail() As String
		Get
			Return Me._salesEmail
		End Get
		Set
			If (String.Equals(Me._salesEmail, value) = false) Then
				Me.OnsalesEmailChanging(value)
				Me.SendPropertyChanging
				Me._salesEmail = value
				Me.SendPropertyChanged("salesEmail")
				Me.OnsalesEmailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_salesRowId", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property salesRowId() As String
		Get
			Return Me._salesRowId
		End Get
		Set
			If (String.Equals(Me._salesRowId, value) = false) Then
				Me.OnsalesRowIdChanging(value)
				Me.SendPropertyChanging
				Me._salesRowId = value
				Me.SendPropertyChanged("salesRowId")
				Me.OnsalesRowIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_directPhone", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property directPhone() As String
		Get
			Return Me._directPhone
		End Get
		Set
			If (String.Equals(Me._directPhone, value) = false) Then
				Me.OndirectPhoneChanging(value)
				Me.SendPropertyChanging
				Me._directPhone = value
				Me.SendPropertyChanged("directPhone")
				Me.OndirectPhoneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_attentionRowId", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property attentionRowId() As String
		Get
			Return Me._attentionRowId
		End Get
		Set
			If (String.Equals(Me._attentionRowId, value) = false) Then
				Me.OnattentionRowIdChanging(value)
				Me.SendPropertyChanging
				Me._attentionRowId = value
				Me.SendPropertyChanged("attentionRowId")
				Me.OnattentionRowIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_attentionEmail", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property attentionEmail() As String
		Get
			Return Me._attentionEmail
		End Get
		Set
			If (String.Equals(Me._attentionEmail, value) = false) Then
				Me.OnattentionEmailChanging(value)
				Me.SendPropertyChanging
				Me._attentionEmail = value
				Me.SendPropertyChanged("attentionEmail")
				Me.OnattentionEmailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bankInfo", DbType:="NVarChar(1000)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property bankInfo() As String
		Get
			Return Me._bankInfo
		End Get
		Set
			If (String.Equals(Me._bankInfo, value) = false) Then
				Me.OnbankInfoChanging(value)
				Me.SendPropertyChanging
				Me._bankInfo = value
				Me.SendPropertyChanged("bankInfo")
				Me.OnbankInfoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_quoteDate", DbType:="DateTime", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property quoteDate() As System.Nullable(Of Date)
		Get
			Return Me._quoteDate
		End Get
		Set
			If (Me._quoteDate.Equals(value) = false) Then
				Me.OnquoteDateChanging(value)
				Me.SendPropertyChanging
				Me._quoteDate = value
				Me.SendPropertyChanged("quoteDate")
				Me.OnquoteDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_deliveryDate", DbType:="Date", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property deliveryDate() As System.Nullable(Of Date)
		Get
			Return Me._deliveryDate
		End Get
		Set
			If (Me._deliveryDate.Equals(value) = false) Then
				Me.OndeliveryDateChanging(value)
				Me.SendPropertyChanging
				Me._deliveryDate = value
				Me.SendPropertyChanged("deliveryDate")
				Me.OndeliveryDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_expiredDate", DbType:="Date", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property expiredDate() As System.Nullable(Of Date)
		Get
			Return Me._expiredDate
		End Get
		Set
			If (Me._expiredDate.Equals(value) = false) Then
				Me.OnexpiredDateChanging(value)
				Me.SendPropertyChanging
				Me._expiredDate = value
				Me.SendPropertyChanged("expiredDate")
				Me.OnexpiredDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_shipTerm", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property shipTerm() As String
		Get
			Return Me._shipTerm
		End Get
		Set
			If (String.Equals(Me._shipTerm, value) = false) Then
				Me.OnshipTermChanging(value)
				Me.SendPropertyChanging
				Me._shipTerm = value
				Me.SendPropertyChanged("shipTerm")
				Me.OnshipTermChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_paymentTerm", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property paymentTerm() As String
		Get
			Return Me._paymentTerm
		End Get
		Set
			If (String.Equals(Me._paymentTerm, value) = false) Then
				Me.OnpaymentTermChanging(value)
				Me.SendPropertyChanging
				Me._paymentTerm = value
				Me.SendPropertyChanged("paymentTerm")
				Me.OnpaymentTermChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_freight", DbType:="Decimal(8,2)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property freight() As System.Nullable(Of Decimal)
		Get
			Return Me._freight
		End Get
		Set
			If (Me._freight.Equals(value) = false) Then
				Me.OnfreightChanging(value)
				Me.SendPropertyChanging
				Me._freight = value
				Me.SendPropertyChanged("freight")
				Me.OnfreightChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_insurance", DbType:="Decimal(8,2)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property insurance() As System.Nullable(Of Decimal)
		Get
			Return Me._insurance
		End Get
		Set
			If (Me._insurance.Equals(value) = false) Then
				Me.OninsuranceChanging(value)
				Me.SendPropertyChanging
				Me._insurance = value
				Me.SendPropertyChanged("insurance")
				Me.OninsuranceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_specialCharge", DbType:="Decimal(8,2)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property specialCharge() As System.Nullable(Of Decimal)
		Get
			Return Me._specialCharge
		End Get
		Set
			If (Me._specialCharge.Equals(value) = false) Then
				Me.OnspecialChargeChanging(value)
				Me.SendPropertyChanging
				Me._specialCharge = value
				Me.SendPropertyChanged("specialCharge")
				Me.OnspecialChargeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tax", DbType:="Decimal(10,4)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property tax() As System.Nullable(Of Decimal)
		Get
			Return Me._tax
		End Get
		Set
			If (Me._tax.Equals(value) = false) Then
				Me.OntaxChanging(value)
				Me.SendPropertyChanging
				Me._tax = value
				Me.SendPropertyChanged("tax")
				Me.OntaxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_quoteNote", DbType:="NVarChar(3000)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property quoteNote() As String
		Get
			Return Me._quoteNote
		End Get
		Set
			If (String.Equals(Me._quoteNote, value) = false) Then
				Me.OnquoteNoteChanging(value)
				Me.SendPropertyChanging
				Me._quoteNote = value
				Me.SendPropertyChanged("quoteNote")
				Me.OnquoteNoteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_relatedInfo", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property relatedInfo() As String
		Get
			Return Me._relatedInfo
		End Get
		Set
			If (String.Equals(Me._relatedInfo, value) = false) Then
				Me.OnrelatedInfoChanging(value)
				Me.SendPropertyChanging
				Me._relatedInfo = value
				Me.SendPropertyChanged("relatedInfo")
				Me.OnrelatedInfoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_createdBy", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property createdBy() As String
		Get
			Return Me._createdBy
		End Get
		Set
			If (String.Equals(Me._createdBy, value) = false) Then
				Me.OncreatedByChanging(value)
				Me.SendPropertyChanging
				Me._createdBy = value
				Me.SendPropertyChanged("createdBy")
				Me.OncreatedByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_createdDate", DbType:="Date", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property createdDate() As System.Nullable(Of Date)
		Get
			Return Me._createdDate
		End Get
		Set
			If (Me._createdDate.Equals(value) = false) Then
				Me.OncreatedDateChanging(value)
				Me.SendPropertyChanging
				Me._createdDate = value
				Me.SendPropertyChanged("createdDate")
				Me.OncreatedDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_preparedBy", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property preparedBy() As String
		Get
			Return Me._preparedBy
		End Get
		Set
			If (String.Equals(Me._preparedBy, value) = false) Then
				Me.OnpreparedByChanging(value)
				Me.SendPropertyChanging
				Me._preparedBy = value
				Me.SendPropertyChanged("preparedBy")
				Me.OnpreparedByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_qstatus", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property qstatus() As String
		Get
			Return Me._qstatus
		End Get
		Set
			If (String.Equals(Me._qstatus, value) = false) Then
				Me.OnqstatusChanging(value)
				Me.SendPropertyChanging
				Me._qstatus = value
				Me.SendPropertyChanged("qstatus")
				Me.OnqstatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_isShowListPrice", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property isShowListPrice() As System.Nullable(Of Integer)
		Get
			Return Me._isShowListPrice
		End Get
		Set
			If (Me._isShowListPrice.Equals(value) = false) Then
				Me.OnisShowListPriceChanging(value)
				Me.SendPropertyChanging
				Me._isShowListPrice = value
				Me.SendPropertyChanged("isShowListPrice")
				Me.OnisShowListPriceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_isShowDiscount", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property isShowDiscount() As System.Nullable(Of Integer)
		Get
			Return Me._isShowDiscount
		End Get
		Set
			If (Me._isShowDiscount.Equals(value) = false) Then
				Me.OnisShowDiscountChanging(value)
				Me.SendPropertyChanging
				Me._isShowDiscount = value
				Me.SendPropertyChanged("isShowDiscount")
				Me.OnisShowDiscountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_isShowDueDate", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property isShowDueDate() As System.Nullable(Of Integer)
		Get
			Return Me._isShowDueDate
		End Get
		Set
			If (Me._isShowDueDate.Equals(value) = false) Then
				Me.OnisShowDueDateChanging(value)
				Me.SendPropertyChanging
				Me._isShowDueDate = value
				Me.SendPropertyChanged("isShowDueDate")
				Me.OnisShowDueDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_isLumpSumOnly", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property isLumpSumOnly() As System.Nullable(Of Integer)
		Get
			Return Me._isLumpSumOnly
		End Get
		Set
			If (Me._isLumpSumOnly.Equals(value) = false) Then
				Me.OnisLumpSumOnlyChanging(value)
				Me.SendPropertyChanging
				Me._isLumpSumOnly = value
				Me.SendPropertyChanged("isLumpSumOnly")
				Me.OnisLumpSumOnlyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_isRepeatedOrder", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property isRepeatedOrder() As System.Nullable(Of Integer)
		Get
			Return Me._isRepeatedOrder
		End Get
		Set
			If (Me._isRepeatedOrder.Equals(value) = false) Then
				Me.OnisRepeatedOrderChanging(value)
				Me.SendPropertyChanging
				Me._isRepeatedOrder = value
				Me.SendPropertyChanged("isRepeatedOrder")
				Me.OnisRepeatedOrderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ogroup", DbType:="NVarChar(100)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ogroup() As String
		Get
			Return Me._ogroup
		End Get
		Set
			If (String.Equals(Me._ogroup, value) = false) Then
				Me.OnogroupChanging(value)
				Me.SendPropertyChanging
				Me._ogroup = value
				Me.SendPropertyChanged("ogroup")
				Me.OnogroupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DelDateFlag", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DelDateFlag() As System.Nullable(Of Integer)
		Get
			Return Me._DelDateFlag
		End Get
		Set
			If (Me._DelDateFlag.Equals(value) = false) Then
				Me.OnDelDateFlagChanging(value)
				Me.SendPropertyChanging
				Me._DelDateFlag = value
				Me.SendPropertyChanged("DelDateFlag")
				Me.OnDelDateFlagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_org", DbType:="NVarChar(10)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property org() As String
		Get
			Return Me._org
		End Get
		Set
			If (String.Equals(Me._org, value) = false) Then
				Me.OnorgChanging(value)
				Me.SendPropertyChanging
				Me._org = value
				Me.SendPropertyChanged("org")
				Me.OnorgChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_siebelRBU", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property siebelRBU() As String
		Get
			Return Me._siebelRBU
		End Get
		Set
			If (String.Equals(Me._siebelRBU, value) = false) Then
				Me.OnsiebelRBUChanging(value)
				Me.SendPropertyChanging
				Me._siebelRBU = value
				Me.SendPropertyChanged("siebelRBU")
				Me.OnsiebelRBUChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIST_CHAN", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DIST_CHAN() As String
		Get
			Return Me._DIST_CHAN
		End Get
		Set
			If (String.Equals(Me._DIST_CHAN, value) = false) Then
				Me.OnDIST_CHANChanging(value)
				Me.SendPropertyChanging
				Me._DIST_CHAN = value
				Me.SendPropertyChanged("DIST_CHAN")
				Me.OnDIST_CHANChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIVISION", DbType:="NVarChar(100)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DIVISION() As String
		Get
			Return Me._DIVISION
		End Get
		Set
			If (String.Equals(Me._DIVISION, value) = false) Then
				Me.OnDIVISIONChanging(value)
				Me.SendPropertyChanging
				Me._DIVISION = value
				Me.SendPropertyChanged("DIVISION")
				Me.OnDIVISIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALESGROUP", DbType:="NVarChar(100)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property SALESGROUP() As String
		Get
			Return Me._SALESGROUP
		End Get
		Set
			If (String.Equals(Me._SALESGROUP, value) = false) Then
				Me.OnSALESGROUPChanging(value)
				Me.SendPropertyChanging
				Me._SALESGROUP = value
				Me.SendPropertyChanged("SALESGROUP")
				Me.OnSALESGROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALESOFFICE", DbType:="NVarChar(100)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property SALESOFFICE() As String
		Get
			Return Me._SALESOFFICE
		End Get
		Set
			If (String.Equals(Me._SALESOFFICE, value) = false) Then
				Me.OnSALESOFFICEChanging(value)
				Me.SendPropertyChanging
				Me._SALESOFFICE = value
				Me.SendPropertyChanged("SALESOFFICE")
				Me.OnSALESOFFICEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISTRICT", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DISTRICT() As String
		Get
			Return Me._DISTRICT
		End Get
		Set
			If (String.Equals(Me._DISTRICT, value) = false) Then
				Me.OnDISTRICTChanging(value)
				Me.SendPropertyChanging
				Me._DISTRICT = value
				Me.SendPropertyChanged("DISTRICT")
				Me.OnDISTRICTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PO_NO", DbType:="NVarChar(100)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property PO_NO() As String
		Get
			Return Me._PO_NO
		End Get
		Set
			If (String.Equals(Me._PO_NO, value) = false) Then
				Me.OnPO_NOChanging(value)
				Me.SendPropertyChanging
				Me._PO_NO = value
				Me.SendPropertyChanged("PO_NO")
				Me.OnPO_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CARE_ON", DbType:="NVarChar(100)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property CARE_ON() As String
		Get
			Return Me._CARE_ON
		End Get
		Set
			If (String.Equals(Me._CARE_ON, value) = false) Then
				Me.OnCARE_ONChanging(value)
				Me.SendPropertyChanging
				Me._CARE_ON = value
				Me.SendPropertyChanged("CARE_ON")
				Me.OnCARE_ONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_isExempt", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property isExempt() As System.Nullable(Of Integer)
		Get
			Return Me._isExempt
		End Get
		Set
			If (Me._isExempt.Equals(value) = false) Then
				Me.OnisExemptChanging(value)
				Me.SendPropertyChanging
				Me._isExempt = value
				Me.SendPropertyChanged("isExempt")
				Me.OnisExemptChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INCO1", DbType:="NVarChar(10)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property INCO1() As String
		Get
			Return Me._INCO1
		End Get
		Set
			If (String.Equals(Me._INCO1, value) = false) Then
				Me.OnINCO1Changing(value)
				Me.SendPropertyChanging
				Me._INCO1 = value
				Me.SendPropertyChanged("INCO1")
				Me.OnINCO1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INCO2", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property INCO2() As String
		Get
			Return Me._INCO2
		End Get
		Set
			If (String.Equals(Me._INCO2, value) = false) Then
				Me.OnINCO2Changing(value)
				Me.SendPropertyChanging
				Me._INCO2 = value
				Me.SendPropertyChanged("INCO2")
				Me.OnINCO2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRINTOUT_FORMAT", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property PRINTOUT_FORMAT() As System.Nullable(Of Integer)
		Get
			Return Me._PRINTOUT_FORMAT
		End Get
		Set
			If (Me._PRINTOUT_FORMAT.Equals(value) = false) Then
				Me.OnPRINTOUT_FORMATChanging(value)
				Me.SendPropertyChanging
				Me._PRINTOUT_FORMAT = value
				Me.SendPropertyChanged("PRINTOUT_FORMAT")
				Me.OnPRINTOUT_FORMATChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OriginalQuoteID", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property OriginalQuoteID() As String
		Get
			Return Me._OriginalQuoteID
		End Get
		Set
			If (String.Equals(Me._OriginalQuoteID, value) = false) Then
				Me.OnOriginalQuoteIDChanging(value)
				Me.SendPropertyChanging
				Me._OriginalQuoteID = value
				Me.SendPropertyChanged("OriginalQuoteID")
				Me.OnOriginalQuoteIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DocReg", DbType:="BigInt", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DocReg() As System.Nullable(Of Long)
		Get
			Return Me._DocReg
		End Get
		Set
			If (Me._DocReg.Equals(value) = false) Then
				Me.OnDocRegChanging(value)
				Me.SendPropertyChanging
				Me._DocReg = value
				Me.SendPropertyChanged("DocReg")
				Me.OnDocRegChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DocType", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DocType() As System.Nullable(Of Integer)
		Get
			Return Me._DocType
		End Get
		Set
			If (Me._DocType.Equals(value) = false) Then
				Me.OnDocTypeChanging(value)
				Me.SendPropertyChanging
				Me._DocType = value
				Me.SendPropertyChanged("DocType")
				Me.OnDocTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_reqDate", DbType:="Date", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property reqDate() As System.Nullable(Of Date)
		Get
			Return Me._reqDate
		End Get
		Set
			If (Me._reqDate.Equals(value) = false) Then
				Me.OnreqDateChanging(value)
				Me.SendPropertyChanging
				Me._reqDate = value
				Me.SendPropertyChanged("reqDate")
				Me.OnreqDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DOCSTATUS", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DOCSTATUS() As System.Nullable(Of Integer)
		Get
			Return Me._DOCSTATUS
		End Get
		Set
			If (Me._DOCSTATUS.Equals(value) = false) Then
				Me.OnDOCSTATUSChanging(value)
				Me.SendPropertyChanging
				Me._DOCSTATUS = value
				Me.SendPropertyChanged("DOCSTATUS")
				Me.OnDOCSTATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="Partial", Storage:="_Partial", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property [Partial]() As System.Nullable(Of Integer)
		Get
			Return Me._Partial
		End Get
		Set
			If (Me._Partial.Equals(value) = false) Then
				Me.OnPartialChanging(value)
				Me.SendPropertyChanging
				Me._Partial = value
				Me.SendPropertyChanged("[Partial]")
				Me.OnPartialChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IS_EARLYSHIP", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property IS_EARLYSHIP() As System.Nullable(Of Integer)
		Get
			Return Me._IS_EARLYSHIP
		End Get
		Set
			If (Me._IS_EARLYSHIP.Equals(value) = false) Then
				Me.OnIS_EARLYSHIPChanging(value)
				Me.SendPropertyChanging
				Me._IS_EARLYSHIP = value
				Me.SendPropertyChanged("IS_EARLYSHIP")
				Me.OnIS_EARLYSHIPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DocRealType", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DocRealType() As String
		Get
			Return Me._DocRealType
		End Get
		Set
			If (String.Equals(Me._DocRealType, value) = false) Then
				Me.OnDocRealTypeChanging(value)
				Me.SendPropertyChanging
				Me._DocRealType = value
				Me.SendPropertyChanged("DocRealType")
				Me.OnDocRealTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastUpdatedDate", DbType:="Date", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property LastUpdatedDate() As System.Nullable(Of Date)
		Get
			Return Me._LastUpdatedDate
		End Get
		Set
			If (Me._LastUpdatedDate.Equals(value) = false) Then
				Me.OnLastUpdatedDateChanging(value)
				Me.SendPropertyChanging
				Me._LastUpdatedDate = value
				Me.SendPropertyChanged("LastUpdatedDate")
				Me.OnLastUpdatedDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastUpdatedBy", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property LastUpdatedBy() As String
		Get
			Return Me._LastUpdatedBy
		End Get
		Set
			If (String.Equals(Me._LastUpdatedBy, value) = false) Then
				Me.OnLastUpdatedByChanging(value)
				Me.SendPropertyChanging
				Me._LastUpdatedBy = value
				Me.SendPropertyChanged("LastUpdatedBy")
				Me.OnLastUpdatedByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PODate", DbType:="Date", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property PODate() As System.Nullable(Of Date)
		Get
			Return Me._PODate
		End Get
		Set
			If (Me._PODate.Equals(value) = false) Then
				Me.OnPODateChanging(value)
				Me.SendPropertyChanging
				Me._PODate = value
				Me.SendPropertyChanged("PODate")
				Me.OnPODateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KEYPERSON", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property KEYPERSON() As String
		Get
			Return Me._KEYPERSON
		End Get
		Set
			If (String.Equals(Me._KEYPERSON, value) = false) Then
				Me.OnKEYPERSONChanging(value)
				Me.SendPropertyChanging
				Me._KEYPERSON = value
				Me.SendPropertyChanged("KEYPERSON")
				Me.OnKEYPERSONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EMPLOYEEID", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property EMPLOYEEID() As String
		Get
			Return Me._EMPLOYEEID
		End Get
		Set
			If (String.Equals(Me._EMPLOYEEID, value) = false) Then
				Me.OnEMPLOYEEIDChanging(value)
				Me.SendPropertyChanging
				Me._EMPLOYEEID = value
				Me.SendPropertyChanged("EMPLOYEEID")
				Me.OnEMPLOYEEIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_isVirPartOnly", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property isVirPartOnly() As System.Nullable(Of Integer)
		Get
			Return Me._isVirPartOnly
		End Get
		Set
			If (Me._isVirPartOnly.Equals(value) = false) Then
				Me.OnisVirPartOnlyChanging(value)
				Me.SendPropertyChanging
				Me._isVirPartOnly = value
				Me.SendPropertyChanged("isVirPartOnly")
				Me.OnisVirPartOnlyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SHIPCUSTPONO", DbType:="NVarChar(100)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property SHIPCUSTPONO() As String
		Get
			Return Me._SHIPCUSTPONO
		End Get
		Set
			If (String.Equals(Me._SHIPCUSTPONO, value) = false) Then
				Me.OnSHIPCUSTPONOChanging(value)
				Me.SendPropertyChanging
				Me._SHIPCUSTPONO = value
				Me.SendPropertyChanged("SHIPCUSTPONO")
				Me.OnSHIPCUSTPONOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAXCLASS", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property TAXCLASS() As String
		Get
			Return Me._TAXCLASS
		End Get
		Set
			If (String.Equals(Me._TAXCLASS, value) = false) Then
				Me.OnTAXCLASSChanging(value)
				Me.SendPropertyChanging
				Me._TAXCLASS = value
				Me.SendPropertyChanged("TAXCLASS")
				Me.OnTAXCLASSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAXDEPCITY", DbType:="NVarChar(100)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property TAXDEPCITY() As String
		Get
			Return Me._TAXDEPCITY
		End Get
		Set
			If (String.Equals(Me._TAXDEPCITY, value) = false) Then
				Me.OnTAXDEPCITYChanging(value)
				Me.SendPropertyChanging
				Me._TAXDEPCITY = value
				Me.SendPropertyChanged("TAXDEPCITY")
				Me.OnTAXDEPCITYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TAXDSTCITY", DbType:="NVarChar(100)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property TAXDSTCITY() As String
		Get
			Return Me._TAXDSTCITY
		End Get
		Set
			If (String.Equals(Me._TAXDSTCITY, value) = false) Then
				Me.OnTAXDSTCITYChanging(value)
				Me.SendPropertyChanging
				Me._TAXDSTCITY = value
				Me.SendPropertyChanged("TAXDSTCITY")
				Me.OnTAXDSTCITYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TRIANGULARINDICATOR", DbType:="NVarChar(100)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property TRIANGULARINDICATOR() As String
		Get
			Return Me._TRIANGULARINDICATOR
		End Get
		Set
			If (String.Equals(Me._TRIANGULARINDICATOR, value) = false) Then
				Me.OnTRIANGULARINDICATORChanging(value)
				Me.SendPropertyChanging
				Me._TRIANGULARINDICATOR = value
				Me.SendPropertyChanged("TRIANGULARINDICATOR")
				Me.OnTRIANGULARINDICATORChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_quoteNo", DbType:="NVarChar(30)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property quoteNo() As String
		Get
			Return Me._quoteNo
		End Get
		Set
			If (String.Equals(Me._quoteNo, value) = false) Then
				Me.OnquoteNoChanging(value)
				Me.SendPropertyChanging
				Me._quoteNo = value
				Me.SendPropertyChanged("quoteNo")
				Me.OnquoteNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Revision_Number", DbType:="SmallInt", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Revision_Number() As System.Nullable(Of Short)
		Get
			Return Me._Revision_Number
		End Get
		Set
			If (Me._Revision_Number.Equals(value) = false) Then
				Me.OnRevision_NumberChanging(value)
				Me.SendPropertyChanging
				Me._Revision_Number = value
				Me.SendPropertyChanged("Revision_Number")
				Me.OnRevision_NumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Active", DbType:="Bit", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Active() As System.Nullable(Of Boolean)
		Get
			Return Me._Active
		End Get
		Set
			If (Me._Active.Equals(value) = false) Then
				Me.OnActiveChanging(value)
				Me.SendPropertyChanging
				Me._Active = value
				Me.SendPropertyChanged("Active")
				Me.OnActiveChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.QuotationExtension")>  _
Partial Public Class Quote_Master_Extension
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _QuoteID As String
	
	Private _EmailGreeting As String
	
	Private _SpecialTandC As String
	
	Private _SignatureRowID As String
	
	Private _Engineer As String
	
	Private _Engineer_Telephone As String
	
	Private _QuoteSource As String
	
	Private _ExpressCompany As String
	
	Private _IsShowTotal As System.Nullable(Of Boolean)
	
	Private _IsShowFreight As System.Nullable(Of Boolean)
	
	Private _ApprovalFlowType As System.Nullable(Of Integer)
	
	Private _LastUpdatedBy As String
	
	Private _LastUpdated As System.Nullable(Of Date)
	
    Private _Warranty As String

    Private _ABRQuoteType As String

    Private _JPCustomerOffice As String

    Private _CopyPurpose As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnQuoteIDChanging(value As String)
    End Sub
    Partial Private Sub OnQuoteIDChanged()
    End Sub
    Partial Private Sub OnEmailGreetingChanging(value As String)
    End Sub
    Partial Private Sub OnEmailGreetingChanged()
    End Sub
    Partial Private Sub OnSpecialTandCChanging(value As String)
    End Sub
    Partial Private Sub OnSpecialTandCChanged()
    End Sub
    Partial Private Sub OnSignatureRowIDChanging(value As String)
    End Sub
    Partial Private Sub OnSignatureRowIDChanged()
    End Sub
    Partial Private Sub OnEngineerChanging(value As String)
    End Sub
    Partial Private Sub OnEngineerChanged()
    End Sub
    Partial Private Sub OnEngineer_TelephoneChanging(value As String)
    End Sub
    Partial Private Sub OnEngineer_TelephoneChanged()
    End Sub
    Partial Private Sub OnQuoteSourceChanging(value As String)
    End Sub
    Partial Private Sub OnQuoteSourceChanged()
    End Sub
    Partial Private Sub OnExpressCompanyChanging(value As String)
    End Sub
    Partial Private Sub OnExpressCompanyChanged()
    End Sub
    Partial Private Sub OnIsShowTotalChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsShowTotalChanged()
    End Sub
    Partial Private Sub OnIsShowFreightChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsShowFreightChanged()
    End Sub
    Partial Private Sub OnApprovalFlowTypeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnApprovalFlowTypeChanged()
    End Sub
    Partial Private Sub OnLastUpdatedByChanging(value As String)
    End Sub
    Partial Private Sub OnLastUpdatedByChanged()
    End Sub
    Partial Private Sub OnLastUpdatedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnLastUpdatedChanged()
    End Sub
    Partial Private Sub OnWarrantyChanging(value As String)
    End Sub
    Partial Private Sub OnWarrantyChanged()
    End Sub

    Partial Private Sub OnABRQuoteTypeChanging(value As String)
    End Sub
    Partial Private Sub OnABRQuoteTypeChanged()
    End Sub

    Partial Private Sub OnJPCustomerOfficeChanging(value As String)
    End Sub
    Partial Private Sub OnJPCustomerOfficeChanged()
    End Sub

    Partial Private Sub OnCopyPurposeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCopyPurposeChanged()
    End Sub

#End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QuoteID", DbType:="NVarChar(30) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property QuoteID() As String
		Get
			Return Me._QuoteID
		End Get
		Set
			If (String.Equals(Me._QuoteID, value) = false) Then
				Me.OnQuoteIDChanging(value)
				Me.SendPropertyChanging
				Me._QuoteID = value
				Me.SendPropertyChanged("QuoteID")
				Me.OnQuoteIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EmailGreeting", DbType:="NVarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property EmailGreeting() As String
		Get
			Return Me._EmailGreeting
		End Get
		Set
			If (String.Equals(Me._EmailGreeting, value) = false) Then
				Me.OnEmailGreetingChanging(value)
				Me.SendPropertyChanging
				Me._EmailGreeting = value
				Me.SendPropertyChanged("EmailGreeting")
				Me.OnEmailGreetingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SpecialTandC", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property SpecialTandC() As String
		Get
			Return Me._SpecialTandC
		End Get
		Set
			If (String.Equals(Me._SpecialTandC, value) = false) Then
				Me.OnSpecialTandCChanging(value)
				Me.SendPropertyChanging
				Me._SpecialTandC = value
				Me.SendPropertyChanged("SpecialTandC")
				Me.OnSpecialTandCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SignatureRowID", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property SignatureRowID() As String
		Get
			Return Me._SignatureRowID
		End Get
		Set
			If (String.Equals(Me._SignatureRowID, value) = false) Then
				Me.OnSignatureRowIDChanging(value)
				Me.SendPropertyChanging
				Me._SignatureRowID = value
				Me.SendPropertyChanged("SignatureRowID")
				Me.OnSignatureRowIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Engineer", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Engineer() As String
		Get
			Return Me._Engineer
		End Get
		Set
			If (String.Equals(Me._Engineer, value) = false) Then
				Me.OnEngineerChanging(value)
				Me.SendPropertyChanging
				Me._Engineer = value
				Me.SendPropertyChanged("Engineer")
				Me.OnEngineerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Engineer_Telephone", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Engineer_Telephone() As String
		Get
			Return Me._Engineer_Telephone
		End Get
		Set
			If (String.Equals(Me._Engineer_Telephone, value) = false) Then
				Me.OnEngineer_TelephoneChanging(value)
				Me.SendPropertyChanging
				Me._Engineer_Telephone = value
				Me.SendPropertyChanged("Engineer_Telephone")
				Me.OnEngineer_TelephoneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QuoteSource", DbType:="NVarChar(20)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property QuoteSource() As String
		Get
			Return Me._QuoteSource
		End Get
		Set
			If (String.Equals(Me._QuoteSource, value) = false) Then
				Me.OnQuoteSourceChanging(value)
				Me.SendPropertyChanging
				Me._QuoteSource = value
				Me.SendPropertyChanged("QuoteSource")
				Me.OnQuoteSourceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExpressCompany", DbType:="NVarChar(100)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ExpressCompany() As String
		Get
			Return Me._ExpressCompany
		End Get
		Set
			If (String.Equals(Me._ExpressCompany, value) = false) Then
				Me.OnExpressCompanyChanging(value)
				Me.SendPropertyChanging
				Me._ExpressCompany = value
				Me.SendPropertyChanged("ExpressCompany")
				Me.OnExpressCompanyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsShowTotal", DbType:="Bit", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property IsShowTotal() As System.Nullable(Of Boolean)
		Get
			Return Me._IsShowTotal
		End Get
		Set
			If (Me._IsShowTotal.Equals(value) = false) Then
				Me.OnIsShowTotalChanging(value)
				Me.SendPropertyChanging
				Me._IsShowTotal = value
				Me.SendPropertyChanged("IsShowTotal")
				Me.OnIsShowTotalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsShowFreight", DbType:="Bit", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property IsShowFreight() As System.Nullable(Of Boolean)
		Get
			Return Me._IsShowFreight
		End Get
		Set
			If (Me._IsShowFreight.Equals(value) = false) Then
				Me.OnIsShowFreightChanging(value)
				Me.SendPropertyChanging
				Me._IsShowFreight = value
				Me.SendPropertyChanged("IsShowFreight")
				Me.OnIsShowFreightChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ApprovalFlowType", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ApprovalFlowType() As System.Nullable(Of Integer)
		Get
			Return Me._ApprovalFlowType
		End Get
		Set
			If (Me._ApprovalFlowType.Equals(value) = false) Then
				Me.OnApprovalFlowTypeChanging(value)
				Me.SendPropertyChanging
				Me._ApprovalFlowType = value
				Me.SendPropertyChanged("ApprovalFlowType")
				Me.OnApprovalFlowTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastUpdatedBy", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property LastUpdatedBy() As String
		Get
			Return Me._LastUpdatedBy
		End Get
		Set
			If (String.Equals(Me._LastUpdatedBy, value) = false) Then
				Me.OnLastUpdatedByChanging(value)
				Me.SendPropertyChanging
				Me._LastUpdatedBy = value
				Me.SendPropertyChanged("LastUpdatedBy")
				Me.OnLastUpdatedByChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastUpdated", DbType:="DateTime", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property LastUpdated() As System.Nullable(Of Date)
		Get
			Return Me._LastUpdated
		End Get
		Set
			If (Me._LastUpdated.Equals(value) = false) Then
				Me.OnLastUpdatedChanging(value)
				Me.SendPropertyChanging
				Me._LastUpdated = value
				Me.SendPropertyChanged("LastUpdated")
				Me.OnLastUpdatedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Warranty", DbType:="nvarchar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Warranty() As String
		Get
			Return Me._Warranty
		End Get
		Set
			If (String.Equals(Me._Warranty, value) = false) Then
				Me.OnWarrantyChanging(value)
				Me.SendPropertyChanging
				Me._Warranty = value
				Me.SendPropertyChanged("Warranty")
				Me.OnWarrantyChanged
			End If
		End Set
	End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ABRQuoteType", DbType:="nchar(4)", UpdateCheck:=UpdateCheck.Never)> _
    Public Property ABRQuoteType() As String
        Get
            Return Me._ABRQuoteType
        End Get
        Set(value As String)
            If (String.Equals(Me._ABRQuoteType, value) = False) Then
                Me.OnABRQuoteTypeChanging(value)
                Me.SendPropertyChanging()
                Me._ABRQuoteType = value
                Me.SendPropertyChanged("ABRQuoteType")
                Me.OnABRQuoteTypeChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_JPCustomerOffice", DbType:="nvarchar(100)", UpdateCheck:=UpdateCheck.Never)> _
    Public Property JPCustomerOffice() As String
        Get
            Return Me._JPCustomerOffice
        End Get
        Set(value As String)
            If (String.Equals(Me._JPCustomerOffice, value) = False) Then
                Me.OnJPCustomerOfficeChanging(value)
                Me.SendPropertyChanging()
                Me._JPCustomerOffice = value
                Me.SendPropertyChanged("JPCustomerOffice")
                Me.OnJPCustomerOfficeChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CopyPurpose", DbType:="Int", UpdateCheck:=UpdateCheck.Never)> _
    Public Property CopyPurpose() As System.Nullable(Of Integer)
        Get
            Return Me._CopyPurpose
        End Get
        Set(value As System.Nullable(Of Integer))
            If (Me._CopyPurpose.Equals(value) = False) Then
                Me.OnCopyPurposeChanging(value)
                Me.SendPropertyChanging()
                Me._CopyPurpose = value
                Me.SendPropertyChanged("CopyPurpose")
                Me.OnCopyPurposeChanged()
            End If
        End Set
    End Property

	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.QuotationDetail")>  _
Partial Public Class QuoteItem
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id As Integer
	
	Private _quoteId As String
	
	Private _line_No As System.Nullable(Of Integer)
	
	Private _partNo As String
	
	Private _description As String
	
	Private _qty As System.Nullable(Of Integer)
	
	Private _listPrice As System.Nullable(Of Decimal)
	
	Private _unitPrice As System.Nullable(Of Decimal)
	
	Private _newUnitPrice As System.Nullable(Of Decimal)
	
	Private _itp As System.Nullable(Of Decimal)
	
	Private _newItp As System.Nullable(Of Decimal)
	
	Private _RecyclingFee As System.Nullable(Of Decimal)
	
	Private _deliveryPlant As String
	
	Private _category As String
	
	Private _classABC As String
	
	Private _rohs As System.Nullable(Of Integer)
	
	Private _ewFlag As System.Nullable(Of Integer)
	
	Private _reqDate As System.Nullable(Of Date)
	
	Private _dueDate As System.Nullable(Of Date)
	
	Private _satisfyFlag As System.Nullable(Of Integer)
	
	Private _canBeConfirmed As System.Nullable(Of Integer)
	
	Private _custMaterial As String
	
	Private _inventory As System.Nullable(Of Integer)
	
	Private _oType As System.Nullable(Of Integer)
	
	Private _modelNo As String
	
	Private _sprNo As String
	
	Private _HigherLevel As System.Nullable(Of Integer)
	
	Private _DMF_Flag As String
	
	Private _ItemType As System.Nullable(Of Integer)
	
	Private _VirtualPartNo As String
	
	Private _DELIVERYGROUP As String
	
	Private _ShipPoint As String
	
	Private _StorageLoc As String
	
	Private _RECFIGID As String
	
	Private _DisplayUnitPrice As String
	
	Private _DisplayQty As String
	
	Private _DisplayLineNo As String
	
	Private _SequenceNo As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidChanging(value As Integer)
    End Sub
    Partial Private Sub OnidChanged()
    End Sub
    Partial Private Sub OnquoteIdChanging(value As String)
    End Sub
    Partial Private Sub OnquoteIdChanged()
    End Sub
    Partial Private Sub Online_NoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Online_NoChanged()
    End Sub
    Partial Private Sub OnpartNoChanging(value As String)
    End Sub
    Partial Private Sub OnpartNoChanged()
    End Sub
    Partial Private Sub OndescriptionChanging(value As String)
    End Sub
    Partial Private Sub OndescriptionChanged()
    End Sub
    Partial Private Sub OnqtyChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnqtyChanged()
    End Sub
    Partial Private Sub OnlistPriceChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnlistPriceChanged()
    End Sub
    Partial Private Sub OnunitPriceChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnunitPriceChanged()
    End Sub
    Partial Private Sub OnnewUnitPriceChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnnewUnitPriceChanged()
    End Sub
    Partial Private Sub OnitpChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnitpChanged()
    End Sub
    Partial Private Sub OnnewItpChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnnewItpChanged()
    End Sub
    Partial Private Sub OnRecyclingFeeChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnRecyclingFeeChanged()
    End Sub
    Partial Private Sub OndeliveryPlantChanging(value As String)
    End Sub
    Partial Private Sub OndeliveryPlantChanged()
    End Sub
    Partial Private Sub OncategoryChanging(value As String)
    End Sub
    Partial Private Sub OncategoryChanged()
    End Sub
    Partial Private Sub OnclassABCChanging(value As String)
    End Sub
    Partial Private Sub OnclassABCChanged()
    End Sub
    Partial Private Sub OnrohsChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrohsChanged()
    End Sub
    Partial Private Sub OnewFlagChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnewFlagChanged()
    End Sub
    Partial Private Sub OnreqDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnreqDateChanged()
    End Sub
    Partial Private Sub OndueDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndueDateChanged()
    End Sub
    Partial Private Sub OnsatisfyFlagChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnsatisfyFlagChanged()
    End Sub
    Partial Private Sub OncanBeConfirmedChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OncanBeConfirmedChanged()
    End Sub
    Partial Private Sub OncustMaterialChanging(value As String)
    End Sub
    Partial Private Sub OncustMaterialChanged()
    End Sub
    Partial Private Sub OninventoryChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OninventoryChanged()
    End Sub
    Partial Private Sub OnoTypeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnoTypeChanged()
    End Sub
    Partial Private Sub OnmodelNoChanging(value As String)
    End Sub
    Partial Private Sub OnmodelNoChanged()
    End Sub
    Partial Private Sub OnsprNoChanging(value As String)
    End Sub
    Partial Private Sub OnsprNoChanged()
    End Sub
    Partial Private Sub OnHigherLevelChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnHigherLevelChanged()
    End Sub
    Partial Private Sub OnDMF_FlagChanging(value As String)
    End Sub
    Partial Private Sub OnDMF_FlagChanged()
    End Sub
    Partial Private Sub OnItemTypeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnItemTypeChanged()
    End Sub
    Partial Private Sub OnVirtualPartNoChanging(value As String)
    End Sub
    Partial Private Sub OnVirtualPartNoChanged()
    End Sub
    Partial Private Sub OnDELIVERYGROUPChanging(value As String)
    End Sub
    Partial Private Sub OnDELIVERYGROUPChanged()
    End Sub
    Partial Private Sub OnShipPointChanging(value As String)
    End Sub
    Partial Private Sub OnShipPointChanged()
    End Sub
    Partial Private Sub OnStorageLocChanging(value As String)
    End Sub
    Partial Private Sub OnStorageLocChanged()
    End Sub
    Partial Private Sub OnRECFIGIDChanging(value As String)
    End Sub
    Partial Private Sub OnRECFIGIDChanged()
    End Sub
    Partial Private Sub OnDisplayUnitPriceChanging(value As String)
    End Sub
    Partial Private Sub OnDisplayUnitPriceChanged()
    End Sub
    Partial Private Sub OnDisplayQtyChanging(value As String)
    End Sub
    Partial Private Sub OnDisplayQtyChanged()
    End Sub
    Partial Private Sub OnDisplayLineNoChanging(value As String)
    End Sub
    Partial Private Sub OnDisplayLineNoChanged()
    End Sub
    Partial Private Sub OnSequenceNoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSequenceNoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id() As Integer
		Get
			Return Me._id
		End Get
		Set
			If ((Me._id = value)  _
						= false) Then
				Me.OnidChanging(value)
				Me.SendPropertyChanging
				Me._id = value
				Me.SendPropertyChanged("id")
				Me.OnidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_quoteId", DbType:="NVarChar(30)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property quoteId() As String
		Get
			Return Me._quoteId
		End Get
		Set
			If (String.Equals(Me._quoteId, value) = false) Then
				Me.OnquoteIdChanging(value)
				Me.SendPropertyChanging
				Me._quoteId = value
				Me.SendPropertyChanged("quoteId")
				Me.OnquoteIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_line_No", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property line_No() As System.Nullable(Of Integer)
		Get
			Return Me._line_No
		End Get
		Set
			If (Me._line_No.Equals(value) = false) Then
				Me.Online_NoChanging(value)
				Me.SendPropertyChanging
				Me._line_No = value
				Me.SendPropertyChanged("line_No")
				Me.Online_NoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_partNo", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property partNo() As String
		Get
			Return Me._partNo
		End Get
		Set
			If (String.Equals(Me._partNo, value) = false) Then
				Me.OnpartNoChanging(value)
				Me.SendPropertyChanging
				Me._partNo = value
				Me.SendPropertyChanged("partNo")
				Me.OnpartNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_description", DbType:="NVarChar(1000)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property description() As String
		Get
			Return Me._description
		End Get
		Set
			If (String.Equals(Me._description, value) = false) Then
				Me.OndescriptionChanging(value)
				Me.SendPropertyChanging
				Me._description = value
				Me.SendPropertyChanged("description")
				Me.OndescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_qty", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property qty() As System.Nullable(Of Integer)
		Get
			Return Me._qty
		End Get
		Set
			If (Me._qty.Equals(value) = false) Then
				Me.OnqtyChanging(value)
				Me.SendPropertyChanging
				Me._qty = value
				Me.SendPropertyChanged("qty")
				Me.OnqtyChanged
			End If
		End Set
	End Property
	
    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_listPrice", DbType:="Decimal(12,2)", UpdateCheck:=UpdateCheck.Never)> _
    Public Property listPrice() As System.Nullable(Of Decimal)
        Get
            Return Me._listPrice
        End Get
        Set(value As System.Nullable(Of Decimal))
            If (Me._listPrice.Equals(Value) = False) Then
                Me.OnlistPriceChanging(Value)
                Me.SendPropertyChanging()
                Me._listPrice = Value
                Me.SendPropertyChanged("listPrice")
                Me.OnlistPriceChanged()
            End If
        End Set
    End Property
	
    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_unitPrice", DbType:="Decimal(12,2)", UpdateCheck:=UpdateCheck.Never)> _
    Public Property unitPrice() As System.Nullable(Of Decimal)
        Get
            Return Me._unitPrice
        End Get
        Set(value As System.Nullable(Of Decimal))
            If (Me._unitPrice.Equals(Value) = False) Then
                Me.OnunitPriceChanging(Value)
                Me.SendPropertyChanging()
                Me._unitPrice = Value
                Me.SendPropertyChanged("unitPrice")
                Me.OnunitPriceChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_newUnitPrice", DbType:="Decimal(14,4)", UpdateCheck:=UpdateCheck.Never)>
    Public Property newUnitPrice() As System.Nullable(Of Decimal)
        Get
            Return Me._newUnitPrice
        End Get
        Set(value As System.Nullable(Of Decimal))
            If (Me._newUnitPrice.Equals(value) = False) Then
                Me.OnnewUnitPriceChanging(value)
                Me.SendPropertyChanging()
                Me._newUnitPrice = value
                Me.SendPropertyChanged("newUnitPrice")
                Me.OnnewUnitPriceChanged()
            End If
        End Set
    End Property

    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_itp", DbType:="Decimal(12,2)", UpdateCheck:=UpdateCheck.Never)> _
    Public Property itp() As System.Nullable(Of Decimal)
        Get
            Return Me._itp
        End Get
        Set(value As System.Nullable(Of Decimal))
            If (Me._itp.Equals(Value) = False) Then
                Me.OnitpChanging(Value)
                Me.SendPropertyChanging()
                Me._itp = Value
                Me.SendPropertyChanged("itp")
                Me.OnitpChanged()
            End If
        End Set
    End Property
	
    <Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_newItp", DbType:="Decimal(12,2)", UpdateCheck:=UpdateCheck.Never)> _
    Public Property newItp() As System.Nullable(Of Decimal)
        Get
            Return Me._newItp
        End Get
        Set(value As System.Nullable(Of Decimal))
            If (Me._newItp.Equals(Value) = False) Then
                Me.OnnewItpChanging(Value)
                Me.SendPropertyChanging()
                Me._newItp = Value
                Me.SendPropertyChanged("newItp")
                Me.OnnewItpChanged()
            End If
        End Set
    End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecyclingFee", DbType:="Decimal(8,2)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property RecyclingFee() As System.Nullable(Of Decimal)
		Get
			Return Me._RecyclingFee
		End Get
		Set
			If (Me._RecyclingFee.Equals(value) = false) Then
				Me.OnRecyclingFeeChanging(value)
				Me.SendPropertyChanging
				Me._RecyclingFee = value
				Me.SendPropertyChanged("RecyclingFee")
				Me.OnRecyclingFeeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_deliveryPlant", DbType:="NVarChar(10)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property deliveryPlant() As String
		Get
			Return Me._deliveryPlant
		End Get
		Set
			If (String.Equals(Me._deliveryPlant, value) = false) Then
				Me.OndeliveryPlantChanging(value)
				Me.SendPropertyChanging
				Me._deliveryPlant = value
				Me.SendPropertyChanged("deliveryPlant")
				Me.OndeliveryPlantChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_category", DbType:="NVarChar(300)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property category() As String
		Get
			Return Me._category
		End Get
		Set
			If (String.Equals(Me._category, value) = false) Then
				Me.OncategoryChanging(value)
				Me.SendPropertyChanging
				Me._category = value
				Me.SendPropertyChanged("category")
				Me.OncategoryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_classABC", DbType:="NVarChar(10)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property classABC() As String
		Get
			Return Me._classABC
		End Get
		Set
			If (String.Equals(Me._classABC, value) = false) Then
				Me.OnclassABCChanging(value)
				Me.SendPropertyChanging
				Me._classABC = value
				Me.SendPropertyChanged("classABC")
				Me.OnclassABCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rohs", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property rohs() As System.Nullable(Of Integer)
		Get
			Return Me._rohs
		End Get
		Set
			If (Me._rohs.Equals(value) = false) Then
				Me.OnrohsChanging(value)
				Me.SendPropertyChanging
				Me._rohs = value
				Me.SendPropertyChanged("rohs")
				Me.OnrohsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ewFlag", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ewFlag() As System.Nullable(Of Integer)
		Get
			Return Me._ewFlag
		End Get
		Set
			If (Me._ewFlag.Equals(value) = false) Then
				Me.OnewFlagChanging(value)
				Me.SendPropertyChanging
				Me._ewFlag = value
				Me.SendPropertyChanged("ewFlag")
				Me.OnewFlagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_reqDate", DbType:="Date", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property reqDate() As System.Nullable(Of Date)
		Get
			Return Me._reqDate
		End Get
		Set
			If (Me._reqDate.Equals(value) = false) Then
				Me.OnreqDateChanging(value)
				Me.SendPropertyChanging
				Me._reqDate = value
				Me.SendPropertyChanged("reqDate")
				Me.OnreqDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dueDate", DbType:="Date", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property dueDate() As System.Nullable(Of Date)
		Get
			Return Me._dueDate
		End Get
		Set
			If (Me._dueDate.Equals(value) = false) Then
				Me.OndueDateChanging(value)
				Me.SendPropertyChanging
				Me._dueDate = value
				Me.SendPropertyChanged("dueDate")
				Me.OndueDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_satisfyFlag", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property satisfyFlag() As System.Nullable(Of Integer)
		Get
			Return Me._satisfyFlag
		End Get
		Set
			If (Me._satisfyFlag.Equals(value) = false) Then
				Me.OnsatisfyFlagChanging(value)
				Me.SendPropertyChanging
				Me._satisfyFlag = value
				Me.SendPropertyChanged("satisfyFlag")
				Me.OnsatisfyFlagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_canBeConfirmed", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property canBeConfirmed() As System.Nullable(Of Integer)
		Get
			Return Me._canBeConfirmed
		End Get
		Set
			If (Me._canBeConfirmed.Equals(value) = false) Then
				Me.OncanBeConfirmedChanging(value)
				Me.SendPropertyChanging
				Me._canBeConfirmed = value
				Me.SendPropertyChanged("canBeConfirmed")
				Me.OncanBeConfirmedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_custMaterial", DbType:="NVarChar(100)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property custMaterial() As String
		Get
			Return Me._custMaterial
		End Get
		Set
			If (String.Equals(Me._custMaterial, value) = false) Then
				Me.OncustMaterialChanging(value)
				Me.SendPropertyChanging
				Me._custMaterial = value
				Me.SendPropertyChanged("custMaterial")
				Me.OncustMaterialChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_inventory", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property inventory() As System.Nullable(Of Integer)
		Get
			Return Me._inventory
		End Get
		Set
			If (Me._inventory.Equals(value) = false) Then
				Me.OninventoryChanging(value)
				Me.SendPropertyChanging
				Me._inventory = value
				Me.SendPropertyChanged("inventory")
				Me.OninventoryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oType", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property oType() As System.Nullable(Of Integer)
		Get
			Return Me._oType
		End Get
		Set
			If (Me._oType.Equals(value) = false) Then
				Me.OnoTypeChanging(value)
				Me.SendPropertyChanging
				Me._oType = value
				Me.SendPropertyChanged("oType")
				Me.OnoTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_modelNo", DbType:="NVarChar(100)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property modelNo() As String
		Get
			Return Me._modelNo
		End Get
		Set
			If (String.Equals(Me._modelNo, value) = false) Then
				Me.OnmodelNoChanging(value)
				Me.SendPropertyChanging
				Me._modelNo = value
				Me.SendPropertyChanged("modelNo")
				Me.OnmodelNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sprNo", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property sprNo() As String
		Get
			Return Me._sprNo
		End Get
		Set
			If (String.Equals(Me._sprNo, value) = false) Then
				Me.OnsprNoChanging(value)
				Me.SendPropertyChanging
				Me._sprNo = value
				Me.SendPropertyChanged("sprNo")
				Me.OnsprNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HigherLevel", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property HigherLevel() As System.Nullable(Of Integer)
		Get
			Return Me._HigherLevel
		End Get
		Set
			If (Me._HigherLevel.Equals(value) = false) Then
				Me.OnHigherLevelChanging(value)
				Me.SendPropertyChanging
				Me._HigherLevel = value
				Me.SendPropertyChanged("HigherLevel")
				Me.OnHigherLevelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DMF_Flag", DbType:="NChar(10)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DMF_Flag() As String
		Get
			Return Me._DMF_Flag
		End Get
		Set
			If (String.Equals(Me._DMF_Flag, value) = false) Then
				Me.OnDMF_FlagChanging(value)
				Me.SendPropertyChanging
				Me._DMF_Flag = value
				Me.SendPropertyChanged("DMF_Flag")
				Me.OnDMF_FlagChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ItemType", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ItemType() As System.Nullable(Of Integer)
		Get
			Return Me._ItemType
		End Get
		Set
			If (Me._ItemType.Equals(value) = false) Then
				Me.OnItemTypeChanging(value)
				Me.SendPropertyChanging
				Me._ItemType = value
				Me.SendPropertyChanged("ItemType")
				Me.OnItemTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VirtualPartNo", DbType:="NVarChar(100)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property VirtualPartNo() As String
		Get
			Return Me._VirtualPartNo
		End Get
		Set
			If (String.Equals(Me._VirtualPartNo, value) = false) Then
				Me.OnVirtualPartNoChanging(value)
				Me.SendPropertyChanging
				Me._VirtualPartNo = value
				Me.SendPropertyChanged("VirtualPartNo")
				Me.OnVirtualPartNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DELIVERYGROUP", DbType:="NVarChar(20)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DELIVERYGROUP() As String
		Get
			Return Me._DELIVERYGROUP
		End Get
		Set
			If (String.Equals(Me._DELIVERYGROUP, value) = false) Then
				Me.OnDELIVERYGROUPChanging(value)
				Me.SendPropertyChanging
				Me._DELIVERYGROUP = value
				Me.SendPropertyChanged("DELIVERYGROUP")
				Me.OnDELIVERYGROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ShipPoint", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ShipPoint() As String
		Get
			Return Me._ShipPoint
		End Get
		Set
			If (String.Equals(Me._ShipPoint, value) = false) Then
				Me.OnShipPointChanging(value)
				Me.SendPropertyChanging
				Me._ShipPoint = value
				Me.SendPropertyChanged("ShipPoint")
				Me.OnShipPointChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StorageLoc", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property StorageLoc() As String
		Get
			Return Me._StorageLoc
		End Get
		Set
			If (String.Equals(Me._StorageLoc, value) = false) Then
				Me.OnStorageLocChanging(value)
				Me.SendPropertyChanging
				Me._StorageLoc = value
				Me.SendPropertyChanged("StorageLoc")
				Me.OnStorageLocChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RECFIGID", DbType:="NVarChar(50)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property RECFIGID() As String
		Get
			Return Me._RECFIGID
		End Get
		Set
			If (String.Equals(Me._RECFIGID, value) = false) Then
				Me.OnRECFIGIDChanging(value)
				Me.SendPropertyChanging
				Me._RECFIGID = value
				Me.SendPropertyChanged("RECFIGID")
				Me.OnRECFIGIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DisplayUnitPrice", DbType:="NVarChar(10)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DisplayUnitPrice() As String
		Get
			Return Me._DisplayUnitPrice
		End Get
		Set
			If (String.Equals(Me._DisplayUnitPrice, value) = false) Then
				Me.OnDisplayUnitPriceChanging(value)
				Me.SendPropertyChanging
				Me._DisplayUnitPrice = value
				Me.SendPropertyChanged("DisplayUnitPrice")
				Me.OnDisplayUnitPriceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DisplayQty", DbType:="NVarChar(10)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DisplayQty() As String
		Get
			Return Me._DisplayQty
		End Get
		Set
			If (String.Equals(Me._DisplayQty, value) = false) Then
				Me.OnDisplayQtyChanging(value)
				Me.SendPropertyChanging
				Me._DisplayQty = value
				Me.SendPropertyChanged("DisplayQty")
				Me.OnDisplayQtyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DisplayLineNo", DbType:="NVarChar(10)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DisplayLineNo() As String
		Get
			Return Me._DisplayLineNo
		End Get
		Set
			If (String.Equals(Me._DisplayLineNo, value) = false) Then
				Me.OnDisplayLineNoChanging(value)
				Me.SendPropertyChanging
				Me._DisplayLineNo = value
				Me.SendPropertyChanged("DisplayLineNo")
				Me.OnDisplayLineNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SequenceNo", DbType:="Int", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property SequenceNo() As System.Nullable(Of Integer)
		Get
			Return Me._SequenceNo
		End Get
		Set
			If (Me._SequenceNo.Equals(value) = false) Then
				Me.OnSequenceNoChanging(value)
				Me.SendPropertyChanging
				Me._SequenceNo = value
				Me.SendPropertyChanged("SequenceNo")
				Me.OnSequenceNoChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
