<?xml version="1.0" encoding="utf-8"?>
<wa:ABBFindApproverFlow xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:amd="clr-namespace:Advantech.Myadvantech.DataAccess;assembly=Advantech.Myadvantech.DataAccess" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:local="clr-namespace:WorkFlowlAPI;assembly=WorkFlowlAPI" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:wa="clr-namespace:WorkFlowlAPI.ABBGPApproval;assembly=WorkFlowlAPI" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>Advantech.Myadvantech.DataAccess</x:String>
      <x:String>Advantech.Myadvantech.Business</x:String>
      <x:String>WorkFlowlAPI</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>EntityFramework</AssemblyReference>
      <AssemblyReference>EntityFramework.SqlServer</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Activities.DurableInstancing</AssemblyReference>
      <AssemblyReference>System.ComponentModel.DataAnnotations</AssemblyReference>
      <AssemblyReference>System.Configuration</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Runtime.DurableInstancing</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Net.Http</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>Advantech.Myadvantech.Business</AssemblyReference>
      <AssemblyReference>Advantech.Myadvantech.DataAccess</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>WorkFlowlAPI</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <wa:ABBFindApproverFlow.Implementation>
    <Flowchart>
      <Flowchart.Variables>
        <Variable x:TypeArguments="x:Double" Name="MinMargin" />
        <Variable x:TypeArguments="scg:List(amd:GPBLOCK_LOGIC)" Name="GPRuleList" />
        <Variable x:TypeArguments="x:Int32" Default="0" Name="levelNum" />
      </Flowchart.Variables>
      <Flowchart.StartNode>
        <FlowStep x:Name="__ReferenceID1">
          <Assign DisplayName="Init Approval List">
            <Assign.To>
              <OutArgument x:TypeArguments="scg:List(amd:WorkFlowApproval)">
                <mca:CSharpReference x:TypeArguments="scg:List(amd:WorkFlowApproval)">ApprovalList</mca:CSharpReference>
              </OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="scg:List(amd:WorkFlowApproval)">
                <mca:CSharpValue x:TypeArguments="scg:List(amd:WorkFlowApproval)">new List&lt;WorkFlowApproval&gt;()</mca:CSharpValue>
              </InArgument>
            </Assign.Value>
          </Assign>
          <FlowStep.Next>
            <FlowStep x:Name="__ReferenceID2">
              <Assign>
                <Assign.To>
                  <OutArgument x:TypeArguments="scg:List(amd:GPBLOCK_LOGIC)">
                    <mca:CSharpReference x:TypeArguments="scg:List(amd:GPBLOCK_LOGIC)">GPRuleList</mca:CSharpReference>
                  </OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="scg:List(amd:GPBLOCK_LOGIC)">
                    <mca:CSharpValue x:TypeArguments="scg:List(amd:GPBLOCK_LOGIC)">GPControlBusinessLogic.GetBBApprovalListByCompanyIDSalesEmailAndSalesCode(QuoteToERPID, SalesEmail, SalesCode)</mca:CSharpValue>
                  </InArgument>
                </Assign.Value>
              </Assign>
              <FlowStep.Next>
                <FlowDecision x:Name="__ReferenceID3" DisplayName="Found GP Rule by ERP ID?">
                  <FlowDecision.Condition>
                    <mca:CSharpValue x:TypeArguments="x:Boolean">GPRuleList.Count &gt; 0</mca:CSharpValue>
                  </FlowDecision.Condition>
                  <FlowDecision.True>
                    <FlowStep x:Name="__ReferenceID5">
                      <ForEach x:TypeArguments="amd:QuotationDetail" DisplayName="Add Approvals By GP">
                        <ForEach.Values>
                          <InArgument x:TypeArguments="scg:IEnumerable(amd:QuotationDetail)">
                            <mca:CSharpValue x:TypeArguments="scg:IEnumerable(amd:QuotationDetail)">QuotationDetails</mca:CSharpValue>
                          </InArgument>
                        </ForEach.Values>
                        <ActivityAction x:TypeArguments="amd:QuotationDetail">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="amd:QuotationDetail" Name="item" />
                          </ActivityAction.Argument>
                          <Sequence>
                            <Assign>
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Int32">
                                  <mca:CSharpReference x:TypeArguments="x:Int32">levelNum</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Int32">0</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign>
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <mca:CSharpReference x:TypeArguments="x:String">item.GPStatus</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">Normal</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ForEach x:TypeArguments="amd:GPBLOCK_LOGIC" DisplayName="Add Approvals By GP">
                              <ForEach.Values>
                                <InArgument x:TypeArguments="scg:IEnumerable(amd:GPBLOCK_LOGIC)">
                                  <mca:CSharpValue x:TypeArguments="scg:IEnumerable(amd:GPBLOCK_LOGIC)">GPRuleList</mca:CSharpValue>
                                </InArgument>
                              </ForEach.Values>
                              <ActivityAction x:TypeArguments="amd:GPBLOCK_LOGIC">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="amd:GPBLOCK_LOGIC" Name="rule" />
                                </ActivityAction.Argument>
                                <Sequence>
                                  <Assign>
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Int32">
                                        <mca:CSharpReference x:TypeArguments="x:Int32">levelNum</mca:CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Int32">
                                        <mca:CSharpValue x:TypeArguments="x:Int32">levelNum+1</mca:CSharpValue>
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <If>
                                    <If.Condition>
                                      <InArgument x:TypeArguments="x:Boolean">
                                        <mca:CSharpValue x:TypeArguments="x:Boolean">(double)item.Margin/100 &lt; rule.gp_level</mca:CSharpValue>
                                      </InArgument>
                                    </If.Condition>
                                    <If.Then>
                                      <Sequence>
                                        <Assign>
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">
                                              <mca:CSharpReference x:TypeArguments="x:String">item.GPStatus</mca:CSharpReference>
                                            </OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">
                                              <mca:CSharpValue x:TypeArguments="x:String">"&lt;" + (rule.gp_level * 100 ).ToString() + "%"</mca:CSharpValue>
                                            </InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <local:AddApprovalToList ViewGp="True">
                                          <local:AddApprovalToList.ApprovalList>
                                            <InOutArgument x:TypeArguments="scg:List(amd:WorkFlowApproval)">
                                              <mca:CSharpReference x:TypeArguments="scg:List(amd:WorkFlowApproval)">ApprovalList</mca:CSharpReference>
                                            </InOutArgument>
                                          </local:AddApprovalToList.ApprovalList>
                                          <local:AddApprovalToList.Approver>
                                            <InArgument x:TypeArguments="x:String">
                                              <mca:CSharpValue x:TypeArguments="x:String">rule.approver</mca:CSharpValue>
                                            </InArgument>
                                          </local:AddApprovalToList.Approver>
                                          <local:AddApprovalToList.ApproverType>
                                            <InArgument x:TypeArguments="x:String">
                                              <mca:CSharpValue x:TypeArguments="x:String">ApproverType.Sales.ToString()</mca:CSharpValue>
                                            </InArgument>
                                          </local:AddApprovalToList.ApproverType>
                                          <local:AddApprovalToList.LevelNum>
                                            <InArgument x:TypeArguments="x:Double">
                                              <mca:CSharpValue x:TypeArguments="x:Double">levelNum</mca:CSharpValue>
                                            </InArgument>
                                          </local:AddApprovalToList.LevelNum>
                                          <local:AddApprovalToList.QuoteId>
                                            <InArgument x:TypeArguments="x:String">
                                              <mca:CSharpValue x:TypeArguments="x:String">QuoteId</mca:CSharpValue>
                                            </InArgument>
                                          </local:AddApprovalToList.QuoteId>
                                          <local:AddApprovalToList.Url>
                                            <InArgument x:TypeArguments="x:String">
                                              <mca:CSharpValue x:TypeArguments="x:String">Url</mca:CSharpValue>
                                            </InArgument>
                                          </local:AddApprovalToList.Url>
                                        </local:AddApprovalToList>
                                      </Sequence>
                                    </If.Then>
                                  </If>
                                </Sequence>
                              </ActivityAction>
                            </ForEach>
                          </Sequence>
                        </ActivityAction>
                      </ForEach>
                      <FlowStep.Next>
                        <FlowDecision x:Name="__ReferenceID6" DisplayName="Expired Date Exceed 90 days?">
                          <FlowDecision.Condition>
                            <mca:CSharpValue x:TypeArguments="x:Boolean">(ExpiredDate.Date - QuoteDate.Date).TotalDays &gt; 90</mca:CSharpValue>
                          </FlowDecision.Condition>
                          <FlowDecision.True>
                            <FlowDecision x:Name="__ReferenceID10" DisplayName="Exist approvers?">
                              <FlowDecision.Condition>
                                <mca:CSharpValue x:TypeArguments="x:Boolean">ApprovalList!=null &amp;&amp; ApprovalList.Count &gt; 0</mca:CSharpValue>
                              </FlowDecision.Condition>
                              <FlowDecision.True>
                                <FlowStep x:Name="__ReferenceID11">
                                  <Assign>
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="local:FindApproverResult">
                                        <mca:CSharpReference x:TypeArguments="local:FindApproverResult">FindApproverResult</mca:CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="local:FindApproverResult">
                                        <mca:CSharpValue x:TypeArguments="local:FindApproverResult">FindApproverResult.NeedApprovalForGPAndExpiredDate</mca:CSharpValue>
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <FlowStep.Next>
                                    <FlowStep x:Name="__ReferenceID0">
                                      <Sequence DisplayName="Add Approvals By Expired Date">
                                        <Assign>
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Int32">
                                              <mca:CSharpReference x:TypeArguments="x:Int32">levelNum</mca:CSharpReference>
                                            </OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Int32">0</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <ForEach x:TypeArguments="amd:GPBLOCK_LOGIC" DisplayName="Add Approvals By Expired Date">
                                          <ForEach.Values>
                                            <InArgument x:TypeArguments="scg:IEnumerable(amd:GPBLOCK_LOGIC)">
                                              <mca:CSharpValue x:TypeArguments="scg:IEnumerable(amd:GPBLOCK_LOGIC)">GPRuleList</mca:CSharpValue>
                                            </InArgument>
                                          </ForEach.Values>
                                          <ActivityAction x:TypeArguments="amd:GPBLOCK_LOGIC">
                                            <ActivityAction.Argument>
                                              <DelegateInArgument x:TypeArguments="amd:GPBLOCK_LOGIC" Name="rule" />
                                            </ActivityAction.Argument>
                                            <Sequence>
                                              <Assign>
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Int32">
                                                    <mca:CSharpReference x:TypeArguments="x:Int32">levelNum</mca:CSharpReference>
                                                  </OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Int32">
                                                    <mca:CSharpValue x:TypeArguments="x:Int32">levelNum+1</mca:CSharpValue>
                                                  </InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <local:AddApprovalToList ViewGp="True">
                                                <local:AddApprovalToList.ApprovalList>
                                                  <InOutArgument x:TypeArguments="scg:List(amd:WorkFlowApproval)">
                                                    <mca:CSharpReference x:TypeArguments="scg:List(amd:WorkFlowApproval)">ApprovalList</mca:CSharpReference>
                                                  </InOutArgument>
                                                </local:AddApprovalToList.ApprovalList>
                                                <local:AddApprovalToList.Approver>
                                                  <InArgument x:TypeArguments="x:String">
                                                    <mca:CSharpValue x:TypeArguments="x:String">rule.approver</mca:CSharpValue>
                                                  </InArgument>
                                                </local:AddApprovalToList.Approver>
                                                <local:AddApprovalToList.ApproverType>
                                                  <InArgument x:TypeArguments="x:String">
                                                    <mca:CSharpValue x:TypeArguments="x:String">ApproverType.Sales.ToString()</mca:CSharpValue>
                                                  </InArgument>
                                                </local:AddApprovalToList.ApproverType>
                                                <local:AddApprovalToList.LevelNum>
                                                  <InArgument x:TypeArguments="x:Double">
                                                    <mca:CSharpValue x:TypeArguments="x:Double">levelNum</mca:CSharpValue>
                                                  </InArgument>
                                                </local:AddApprovalToList.LevelNum>
                                                <local:AddApprovalToList.QuoteId>
                                                  <InArgument x:TypeArguments="x:String">
                                                    <mca:CSharpValue x:TypeArguments="x:String">QuoteId</mca:CSharpValue>
                                                  </InArgument>
                                                </local:AddApprovalToList.QuoteId>
                                                <local:AddApprovalToList.Url>
                                                  <InArgument x:TypeArguments="x:String">
                                                    <mca:CSharpValue x:TypeArguments="x:String">Url</mca:CSharpValue>
                                                  </InArgument>
                                                </local:AddApprovalToList.Url>
                                              </local:AddApprovalToList>
                                            </Sequence>
                                          </ActivityAction>
                                        </ForEach>
                                      </Sequence>
                                    </FlowStep>
                                  </FlowStep.Next>
                                </FlowStep>
                              </FlowDecision.True>
                              <FlowDecision.False>
                                <FlowStep x:Name="__ReferenceID12">
                                  <Assign>
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="local:FindApproverResult">
                                        <mca:CSharpReference x:TypeArguments="local:FindApproverResult">FindApproverResult</mca:CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="local:FindApproverResult">
                                        <mca:CSharpValue x:TypeArguments="local:FindApproverResult">FindApproverResult.NeedApprovalForExpiredDate</mca:CSharpValue>
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <FlowStep.Next>
                                    <x:Reference>__ReferenceID0</x:Reference>
                                  </FlowStep.Next>
                                </FlowStep>
                              </FlowDecision.False>
                            </FlowDecision>
                          </FlowDecision.True>
                          <FlowDecision.False>
                            <FlowDecision x:Name="__ReferenceID7" DisplayName="Exist approvers?">
                              <FlowDecision.Condition>
                                <mca:CSharpValue x:TypeArguments="x:Boolean">ApprovalList!=null &amp;&amp; ApprovalList.Count &gt; 0</mca:CSharpValue>
                              </FlowDecision.Condition>
                              <FlowDecision.True>
                                <FlowStep x:Name="__ReferenceID8">
                                  <Assign>
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="local:FindApproverResult">
                                        <mca:CSharpReference x:TypeArguments="local:FindApproverResult">FindApproverResult</mca:CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="local:FindApproverResult">
                                        <mca:CSharpValue x:TypeArguments="local:FindApproverResult">FindApproverResult.NeedApprovalForGP</mca:CSharpValue>
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </FlowStep>
                              </FlowDecision.True>
                              <FlowDecision.False>
                                <FlowStep x:Name="__ReferenceID9">
                                  <Assign>
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="local:FindApproverResult">
                                        <mca:CSharpReference x:TypeArguments="local:FindApproverResult">FindApproverResult</mca:CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="local:FindApproverResult">
                                        <mca:CSharpValue x:TypeArguments="local:FindApproverResult">FindApproverResult.NoNeed</mca:CSharpValue>
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </FlowStep>
                              </FlowDecision.False>
                            </FlowDecision>
                          </FlowDecision.False>
                        </FlowDecision>
                      </FlowStep.Next>
                    </FlowStep>
                  </FlowDecision.True>
                  <FlowDecision.False>
                    <FlowStep x:Name="__ReferenceID4">
                      <Assign>
                        <Assign.To>
                          <OutArgument x:TypeArguments="local:FindApproverResult">
                            <mca:CSharpReference x:TypeArguments="local:FindApproverResult">FindApproverResult</mca:CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="local:FindApproverResult">
                            <mca:CSharpValue x:TypeArguments="local:FindApproverResult">FindApproverResult.GPRuleNotFound</mca:CSharpValue>
                          </InArgument>
                        </Assign.Value>
                      </Assign>
                    </FlowStep>
                  </FlowDecision.False>
                </FlowDecision>
              </FlowStep.Next>
            </FlowStep>
          </FlowStep.Next>
        </FlowStep>
      </Flowchart.StartNode>
      <x:Reference>__ReferenceID1</x:Reference>
      <x:Reference>__ReferenceID2</x:Reference>
      <x:Reference>__ReferenceID3</x:Reference>
      <x:Reference>__ReferenceID4</x:Reference>
      <x:Reference>__ReferenceID5</x:Reference>
      <x:Reference>__ReferenceID6</x:Reference>
      <x:Reference>__ReferenceID0</x:Reference>
      <x:Reference>__ReferenceID7</x:Reference>
      <x:Reference>__ReferenceID8</x:Reference>
      <x:Reference>__ReferenceID9</x:Reference>
      <x:Reference>__ReferenceID10</x:Reference>
      <x:Reference>__ReferenceID11</x:Reference>
      <x:Reference>__ReferenceID12</x:Reference>
      <sads:DebugSymbol.Symbol>d1FEOlxNeUFkdmFudGVjaFxNeUFkdmFudGVjaEFQSVxXb3JrRmxvd2xBUElcQUJCR1BBcHByb3ZhbFxBQkJGaW5kQXBwcm92ZXJGbG93LnhhbWxKQwOnAw8CAQFHM0c2AgECSwlWEgMB/gRZDWQWAwHhBGgTaGkDAdMEhQMVkAMeAwG2BGwV3gEfAwG9AuIBG+IBjwEDAa8C2wIf2wKVAQMBoQLvAiH6AioDAYQC3wIh6gIqAwHnAecBH+cBlQEDAdkBxQIh0AIqAwG8AfkBJb4CMAIBIOsBIfYBKgIBA1MPU4UBAwGNBU4PTncDAf8EYRNh0gEDAfAEXBNcdgMB4gSNAxuNA4oBAwHFBIgDG4gDgwEDAbcEbxtvhQEDAagEdhncASQDAb4C9wIn9wKOAQMBkwLyAifyAo8BAwGFAucCJ+cCmQEDAfYB4gIn4gKPAQMB6AHNAifNAqIBAwHLAcgCJ8gCjwEDAb0B+gEngwIwAwGsAYQCJ70CMQIBIfMBJ/MBpwECARLuASfuAY8BAgEEdxuAASQDAZcEgQEbigEkAwGGBIsBG9sBJQMBvwKBAlGBAlIDAbsB/QEt/QF6AwGtAYcCLYcCjwEDAZ4BjgIruwI2AgEifkV+RgMBpwR6IXpuAwGYBIgBRogBTAMBlgSEASGEAXQDAYcEjgEhjgGDAQMB9wOVAR/ZASoDAcACjwItmgI2AgF/mwItugJHAgEjlgEhoQEqAwHWA6IBIdgBJgMBwQKXAjOXAnoDAY8BkgIzkgKAAQMBgAGoAjOoAo4BAgFwngIzngKbAQIBYa0CM60CeQIBUrICM7ICeAIBQ7cCM7cCdAIBNJsCgwGbAokBAgEzowIzowJ+AgEkngEnngFuAwHnA5kBJ5kBdAMB1wOlASelAZABAwHCAqkBJdYBMAMB0gKqASe1ATADAbUDtgEn1QFBAwHTArIBLbIBmwEDAcYDrQEtrQGAAQMBtgPDAS3DAYgBAwGlA7kBLbkBlQEDAZUDyAEtyAFzAwGFA80BLc0BcgMB9QLSAS3SAW4DAeUCtgF9tgGDAQMB5AK+AS2+AXgDAdQC</sads:DebugSymbol.Symbol>
    </Flowchart>
  </wa:ABBFindApproverFlow.Implementation>
</wa:ABBFindApproverFlow>