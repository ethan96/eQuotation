<?xml version="1.0" encoding="utf-8"?>
<local:FindApproverFlow xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:amd="clr-namespace:Advantech.Myadvantech.DataAccess;assembly=Advantech.Myadvantech.DataAccess" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:local="clr-namespace:WorkFlowlAPI;assembly=WorkFlowlAPI" xmlns:local1="clr-namespace:WorkFlowlAPI.ACNGPApproval;assembly=WorkFlowlAPI" xmlns:local2="clr-namespace:WorkFlowlAPI.ABBGPApproval;assembly=WorkFlowlAPI" xmlns:local3="clr-namespace:WorkFlowlAPI.ASGGPApproval;assembly=WorkFlowlAPI" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
      <x:String>WorkFlowlAPI</x:String>
      <x:String>Advantech.Myadvantech.DataAccess</x:String>
      <x:String>Advantech.Myadvantech.Business</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>EntityFramework</AssemblyReference>
      <AssemblyReference>EntityFramework.SqlServer</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Activities.DurableInstancing</AssemblyReference>
      <AssemblyReference>System.ComponentModel.DataAnnotations</AssemblyReference>
      <AssemblyReference>System.Configuration</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Runtime.DurableInstancing</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Net.Http</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>Advantech.Myadvantech.Business</AssemblyReference>
      <AssemblyReference>Advantech.Myadvantech.DataAccess</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>WorkFlowlAPI</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <local:FindApproverFlow.Implementation>
    <Flowchart>
      <Flowchart.Variables>
        <Variable x:TypeArguments="x:String" Name="BU_Sector" />
        <Variable x:TypeArguments="x:Boolean" Name="BBGPRuleIsFound" />
        <Variable x:TypeArguments="scg:List(amd:QuotationDetail)" Name="QuotationDetailsWithoutServicePart" />
        <Variable x:TypeArguments="local:FindApproverResult" Name="FindApproverResult" />
        <Variable x:TypeArguments="s:String[]" Name="Approvers" />
        <Variable x:TypeArguments="x:Boolean" Name="IsNeedPSMApprover" />
        <Variable x:TypeArguments="scg:List(amd:QuotationDetail)" Name="EWQuotationDetails" />
      </Flowchart.Variables>
      <Flowchart.StartNode>
        <FlowStep x:Name="__ReferenceID1">
          <Assign DisplayName="Init Approval List">
            <Assign.To>
              <OutArgument x:TypeArguments="scg:List(amd:WorkFlowApproval)">
                <mca:CSharpReference x:TypeArguments="scg:List(amd:WorkFlowApproval)">ApprovalList</mca:CSharpReference>
              </OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="scg:List(amd:WorkFlowApproval)">
                <mca:CSharpValue x:TypeArguments="scg:List(amd:WorkFlowApproval)">new List&lt;WorkFlowApproval&gt;()</mca:CSharpValue>
              </InArgument>
            </Assign.Value>
          </Assign>
          <FlowStep.Next>
            <FlowStep x:Name="__ReferenceID3">
              <Assign DisplayName="Remove sevice parts in quotation details">
                <Assign.To>
                  <OutArgument x:TypeArguments="scg:List(amd:QuotationDetail)">
                    <mca:CSharpReference x:TypeArguments="scg:List(amd:QuotationDetail)">QuotationDetailsWithoutServicePart</mca:CSharpReference>
                  </OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="scg:List(amd:QuotationDetail)">
                    <mca:CSharpValue x:TypeArguments="scg:List(amd:QuotationDetail)">QuoteBusinessLogic.RemoveServicePartInQuotationDetails(QuotationMaster.QuotationDetail)</mca:CSharpValue>
                  </InArgument>
                </Assign.Value>
              </Assign>
              <FlowStep.Next>
                <FlowStep x:Name="__ReferenceID18">
                  <Assign DisplayName="Remove sevice parts in quotation details">
                    <Assign.To>
                      <OutArgument x:TypeArguments="scg:List(amd:QuotationDetail)">
                        <mca:CSharpReference x:TypeArguments="scg:List(amd:QuotationDetail)">EWQuotationDetails</mca:CSharpReference>
                      </OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="scg:List(amd:QuotationDetail)">
                        <mca:CSharpValue x:TypeArguments="scg:List(amd:QuotationDetail)">QuotationMaster.QuotationDetail.Where(q=&gt;q.IsEWpartnoX == true).ToList()</mca:CSharpValue>
                      </InArgument>
                    </Assign.Value>
                  </Assign>
                  <FlowStep.Next>
                    <FlowSwitch x:TypeArguments="x:String" x:Name="__ReferenceID0" DisplayName="Check Region">
                      <FlowSwitch.Default>
                        <FlowStep x:Name="__ReferenceID2">
                          <Assign>
                            <Assign.To>
                              <OutArgument x:TypeArguments="local:FindApproverResult">
                                <mca:CSharpReference x:TypeArguments="local:FindApproverResult">Result</mca:CSharpReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="local:FindApproverResult">
                                <mca:CSharpValue x:TypeArguments="local:FindApproverResult">FindApproverResult.NoNeed</mca:CSharpValue>
                              </InArgument>
                            </Assign.Value>
                          </Assign>
                        </FlowStep>
                      </FlowSwitch.Default>
                      <FlowSwitch.Expression>
                        <mca:CSharpValue x:TypeArguments="x:String">Region</mca:CSharpValue>
                      </FlowSwitch.Expression>
                      <FlowStep x:Key="ACN" x:Name="__ReferenceID4">
                        <local1:ACNFindApproverFlow>
                          <local1:ACNFindApproverFlow.ApprovalList>
                            <OutArgument x:TypeArguments="scg:List(amd:WorkFlowApproval)">
                              <mca:CSharpReference x:TypeArguments="scg:List(amd:WorkFlowApproval)">ApprovalList</mca:CSharpReference>
                            </OutArgument>
                          </local1:ACNFindApproverFlow.ApprovalList>
                          <local1:ACNFindApproverFlow.EWQuotationdetails>
                            <InArgument x:TypeArguments="scg:List(amd:QuotationDetail)">
                              <mca:CSharpValue x:TypeArguments="scg:List(amd:QuotationDetail)">EWQuotationDetails</mca:CSharpValue>
                            </InArgument>
                          </local1:ACNFindApproverFlow.EWQuotationdetails>
                          <local1:ACNFindApproverFlow.FindApproverResult>
                            <OutArgument x:TypeArguments="local:FindApproverResult">
                              <mca:CSharpReference x:TypeArguments="local:FindApproverResult">Result</mca:CSharpReference>
                            </OutArgument>
                          </local1:ACNFindApproverFlow.FindApproverResult>
                          <local1:ACNFindApproverFlow.QuotationDetails>
                            <InArgument x:TypeArguments="scg:List(amd:QuotationDetail)">
                              <mca:CSharpValue x:TypeArguments="scg:List(amd:QuotationDetail)">QuotationDetailsWithoutServicePart</mca:CSharpValue>
                            </InArgument>
                          </local1:ACNFindApproverFlow.QuotationDetails>
                          <local1:ACNFindApproverFlow.QuoteId>
                            <InArgument x:TypeArguments="x:String">
                              <mca:CSharpValue x:TypeArguments="x:String">QuotationMaster.quoteId</mca:CSharpValue>
                            </InArgument>
                          </local1:ACNFindApproverFlow.QuoteId>
                          <local1:ACNFindApproverFlow.SalesCode>
                            <InArgument x:TypeArguments="x:String">
                              <mca:CSharpValue x:TypeArguments="x:String">QuotationMaster.GetQuotationSalesRepresentativeSalesCode()</mca:CSharpValue>
                            </InArgument>
                          </local1:ACNFindApproverFlow.SalesCode>
                          <local1:ACNFindApproverFlow.SalesEmail>
                            <InArgument x:TypeArguments="x:String">
                              <mca:CSharpValue x:TypeArguments="x:String">QuotationMaster.GetQuotationSalesRepresentative()</mca:CSharpValue>
                            </InArgument>
                          </local1:ACNFindApproverFlow.SalesEmail>
                          <local1:ACNFindApproverFlow.Url>
                            <InArgument x:TypeArguments="x:String">
                              <mca:CSharpValue x:TypeArguments="x:String">Url</mca:CSharpValue>
                            </InArgument>
                          </local1:ACNFindApproverFlow.Url>
                        </local1:ACNFindApproverFlow>
                      </FlowStep>
                      <FlowStep x:Key="ABB" x:Name="__ReferenceID5">
                        <local2:ABBFindApproverFlow>
                          <local2:ABBFindApproverFlow.ApprovalList>
                            <OutArgument x:TypeArguments="scg:List(amd:WorkFlowApproval)">
                              <mca:CSharpReference x:TypeArguments="scg:List(amd:WorkFlowApproval)">ApprovalList</mca:CSharpReference>
                            </OutArgument>
                          </local2:ABBFindApproverFlow.ApprovalList>
                          <local2:ABBFindApproverFlow.ExpiredDate>
                            <InArgument x:TypeArguments="s:DateTime">
                              <mca:CSharpValue x:TypeArguments="s:DateTime">QuotationMaster.expiredDate.Value</mca:CSharpValue>
                            </InArgument>
                          </local2:ABBFindApproverFlow.ExpiredDate>
                          <local2:ABBFindApproverFlow.FindApproverResult>
                            <OutArgument x:TypeArguments="local:FindApproverResult">
                              <mca:CSharpReference x:TypeArguments="local:FindApproverResult">Result</mca:CSharpReference>
                            </OutArgument>
                          </local2:ABBFindApproverFlow.FindApproverResult>
                          <local2:ABBFindApproverFlow.QuotationDetails>
                            <InArgument x:TypeArguments="scg:List(amd:QuotationDetail)">
                              <mca:CSharpValue x:TypeArguments="scg:List(amd:QuotationDetail)">QuotationDetailsWithoutServicePart</mca:CSharpValue>
                            </InArgument>
                          </local2:ABBFindApproverFlow.QuotationDetails>
                          <local2:ABBFindApproverFlow.QuoteDate>
                            <InArgument x:TypeArguments="s:DateTime">
                              <mca:CSharpValue x:TypeArguments="s:DateTime">QuotationMaster.quoteDate.Value</mca:CSharpValue>
                            </InArgument>
                          </local2:ABBFindApproverFlow.QuoteDate>
                          <local2:ABBFindApproverFlow.QuoteId>
                            <InArgument x:TypeArguments="x:String">
                              <mca:CSharpValue x:TypeArguments="x:String">QuotationMaster.quoteId</mca:CSharpValue>
                            </InArgument>
                          </local2:ABBFindApproverFlow.QuoteId>
                          <local2:ABBFindApproverFlow.QuoteToERPID>
                            <InArgument x:TypeArguments="x:String">
                              <mca:CSharpValue x:TypeArguments="x:String">QuotationMaster.quoteToErpId</mca:CSharpValue>
                            </InArgument>
                          </local2:ABBFindApproverFlow.QuoteToERPID>
                          <local2:ABBFindApproverFlow.SalesCode>
                            <InArgument x:TypeArguments="x:String">
                              <mca:CSharpValue x:TypeArguments="x:String">QuotationMaster.GetQuotationSalesRepresentativeSalesCode()</mca:CSharpValue>
                            </InArgument>
                          </local2:ABBFindApproverFlow.SalesCode>
                          <local2:ABBFindApproverFlow.SalesEmail>
                            <InArgument x:TypeArguments="x:String">
                              <mca:CSharpValue x:TypeArguments="x:String">QuotationMaster.GetQuotationSalesRepresentative()</mca:CSharpValue>
                            </InArgument>
                          </local2:ABBFindApproverFlow.SalesEmail>
                          <local2:ABBFindApproverFlow.Url>
                            <InArgument x:TypeArguments="x:String">
                              <mca:CSharpValue x:TypeArguments="x:String">Url</mca:CSharpValue>
                            </InArgument>
                          </local2:ABBFindApproverFlow.Url>
                        </local2:ABBFindApproverFlow>
                      </FlowStep>
                      <FlowStep x:Key="ASG" x:Name="__ReferenceID6">
                        <local3:ASGFindApproverFlow>
                          <local3:ASGFindApproverFlow.ApprovalList>
                            <OutArgument x:TypeArguments="scg:List(amd:WorkFlowApproval)">
                              <mca:CSharpReference x:TypeArguments="scg:List(amd:WorkFlowApproval)">ApprovalList</mca:CSharpReference>
                            </OutArgument>
                          </local3:ASGFindApproverFlow.ApprovalList>
                          <local3:ASGFindApproverFlow.BU_Sector>
                            <OutArgument x:TypeArguments="x:String">
                              <mca:CSharpReference x:TypeArguments="x:String">BU_Sector</mca:CSharpReference>
                            </OutArgument>
                          </local3:ASGFindApproverFlow.BU_Sector>
                          <local3:ASGFindApproverFlow.FindApproverResult>
                            <OutArgument x:TypeArguments="local:FindApproverResult">
                              <mca:CSharpReference x:TypeArguments="local:FindApproverResult">Result</mca:CSharpReference>
                            </OutArgument>
                          </local3:ASGFindApproverFlow.FindApproverResult>
                          <local3:ASGFindApproverFlow.QuotationDetails>
                            <InArgument x:TypeArguments="scg:List(amd:QuotationDetail)">
                              <mca:CSharpValue x:TypeArguments="scg:List(amd:QuotationDetail)">QuotationDetailsWithoutServicePart</mca:CSharpValue>
                            </InArgument>
                          </local3:ASGFindApproverFlow.QuotationDetails>
                          <local3:ASGFindApproverFlow.QuoteId>
                            <InArgument x:TypeArguments="x:String">
                              <mca:CSharpValue x:TypeArguments="x:String">QuotationMaster.quoteId</mca:CSharpValue>
                            </InArgument>
                          </local3:ASGFindApproverFlow.QuoteId>
                          <local3:ASGFindApproverFlow.SalesCode>
                            <InArgument x:TypeArguments="x:String">
                              <mca:CSharpValue x:TypeArguments="x:String">QuotationMaster.GetQuotationSalesRepresentativeSalesCode()</mca:CSharpValue>
                            </InArgument>
                          </local3:ASGFindApproverFlow.SalesCode>
                          <local3:ASGFindApproverFlow.SalesEmail>
                            <InArgument x:TypeArguments="x:String">
                              <mca:CSharpValue x:TypeArguments="x:String">QuotationMaster.GetQuotationSalesRepresentative()</mca:CSharpValue>
                            </InArgument>
                          </local3:ASGFindApproverFlow.SalesEmail>
                          <local3:ASGFindApproverFlow.Url>
                            <InArgument x:TypeArguments="x:String">
                              <mca:CSharpValue x:TypeArguments="x:String">Url</mca:CSharpValue>
                            </InArgument>
                          </local3:ASGFindApproverFlow.Url>
                        </local3:ASGFindApproverFlow>
                      </FlowStep>
                    </FlowSwitch>
                  </FlowStep.Next>
                </FlowStep>
              </FlowStep.Next>
            </FlowStep>
          </FlowStep.Next>
        </FlowStep>
      </Flowchart.StartNode>
      <x:Reference>__ReferenceID0</x:Reference>
      <x:Reference>__ReferenceID1</x:Reference>
      <x:Reference>__ReferenceID2</x:Reference>
      <x:Reference>__ReferenceID3</x:Reference>
      <x:Reference>__ReferenceID4</x:Reference>
      <x:Reference>__ReferenceID5</x:Reference>
      <FlowStep>
        <ForEach x:TypeArguments="amd:QuotationDetail" DisplayName="Get GP Status For QuoteDetails">
          <ForEach.Values>
            <InArgument x:TypeArguments="scg:IEnumerable(amd:QuotationDetail)">
              <mca:CSharpValue x:TypeArguments="scg:IEnumerable(amd:QuotationDetail)">QuotationMaster.QuotationDetail</mca:CSharpValue>
            </InArgument>
          </ForEach.Values>
          <ActivityAction x:TypeArguments="amd:QuotationDetail">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="amd:QuotationDetail" Name="item" />
            </ActivityAction.Argument>
            <Sequence>
              <Assign DisplayName="Find Approver by SalesEmail and ApprovelLevel">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:String[]">
                    <mca:CSharpReference x:TypeArguments="s:String[]">Approvers</mca:CSharpReference>
                  </OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:String[]">
                    <mca:CSharpValue x:TypeArguments="s:String[]">GPControlBusinessLogic.FindApproversByMarginAndSalesTeam((decimal)item.Margin / 100, BU_Sector)</mca:CSharpValue>
                  </InArgument>
                </Assign.Value>
              </Assign>
              <If>
                <If.Condition>
                  <InArgument x:TypeArguments="x:Boolean">
                    <mca:CSharpValue x:TypeArguments="x:Boolean">Approvers.Count() &gt; 0 &amp;&amp; QuotationDetailsWithoutServicePart.Contains(item) &amp;&amp; item.ItemType != (int)LineItemType.BTOSParent</mca:CSharpValue>
                  </InArgument>
                </If.Condition>
                <If.Then>
                  <Assign>
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">
                        <mca:CSharpReference x:TypeArguments="x:String">item.GPStatus</mca:CSharpReference>
                      </OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">Below GP</InArgument>
                    </Assign.Value>
                  </Assign>
                </If.Then>
              </If>
            </Sequence>
          </ActivityAction>
        </ForEach>
      </FlowStep>
      <x:Reference>__ReferenceID6</x:Reference>
      <FlowStep>
        <ForEach x:TypeArguments="amd:QuotationDetail" DisplayName="Create PSM For EW parts">
          <ForEach.Values>
            <InArgument x:TypeArguments="scg:IEnumerable(amd:QuotationDetail)">
              <mca:CSharpValue x:TypeArguments="scg:IEnumerable(amd:QuotationDetail)">QuotationMaster.QuotationDetail.Where(d=&gt;d.IsEWpartnoX == true)</mca:CSharpValue>
            </InArgument>
          </ForEach.Values>
          <ActivityAction x:TypeArguments="amd:QuotationDetail">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="amd:QuotationDetail" Name="LineItem" />
            </ActivityAction.Argument>
            <Sequence>
              <Assign>
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Boolean">
                    <mca:CSharpReference x:TypeArguments="x:Boolean">IsNeedPSMApprover</mca:CSharpReference>
                  </OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                </Assign.Value>
              </Assign>
              <Flowchart DisplayName="Find Max Level and NeedPsm?">
                <Flowchart.StartNode>
                  <FlowDecision x:Name="__ReferenceID7" DisplayName="Below SAPPrice? or Margin&lt;0.2">
                    <FlowDecision.Condition>
                      <mca:CSharpValue x:TypeArguments="x:Boolean">LineItem.BelowSAPPriceRate &gt; 0</mca:CSharpValue>
                    </FlowDecision.Condition>
                    <FlowDecision.True>
                      <FlowStep x:Name="__ReferenceID10">
                        <Assign>
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">
                              <mca:CSharpReference x:TypeArguments="x:String">LineItem.GPStatus</mca:CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">Below SAPPrice</InArgument>
                          </Assign.Value>
                        </Assign>
                        <FlowStep.Next>
                          <FlowStep x:Name="__ReferenceID8">
                            <Assign>
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Boolean">
                                  <mca:CSharpReference x:TypeArguments="x:Boolean">IsNeedPSMApprover</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                              </Assign.Value>
                            </Assign>
                          </FlowStep>
                        </FlowStep.Next>
                      </FlowStep>
                    </FlowDecision.True>
                    <FlowDecision.False>
                      <FlowStep x:Name="__ReferenceID9">
                        <Assign>
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">
                              <mca:CSharpReference x:TypeArguments="x:String">LineItem.GPStatus</mca:CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">Normal</InArgument>
                          </Assign.Value>
                        </Assign>
                      </FlowStep>
                    </FlowDecision.False>
                  </FlowDecision>
                </Flowchart.StartNode>
                <x:Reference>__ReferenceID7</x:Reference>
                <x:Reference>__ReferenceID8</x:Reference>
                <x:Reference>__ReferenceID9</x:Reference>
                <x:Reference>__ReferenceID10</x:Reference>
              </Flowchart>
              <If>
                <If.Condition>
                  <InArgument x:TypeArguments="x:Boolean">
                    <mca:CSharpValue x:TypeArguments="x:Boolean">IsNeedPSMApprover</mca:CSharpValue>
                  </InArgument>
                </If.Condition>
                <If.Then>
                  <Flowchart DisplayName="Create all PSM Approvers">
                    <Flowchart.Variables>
                      <Variable x:TypeArguments="x:Int32" Default="0" Name="PSM_ApproveLevel" />
                      <Variable x:TypeArguments="x:Boolean" Default="False" Name="ViewGP" />
                      <Variable x:TypeArguments="x:Int32" Name="MaxPSMApprovalLevel" />
                      <Variable x:TypeArguments="x:Int32" Name="PSMApproverLevelPriority" />
                      <Variable x:TypeArguments="x:Double" Default="0" Name="ApproveLevel" />
                      <Variable x:TypeArguments="scg:List(x:String)" Name="ApproverList" />
                    </Flowchart.Variables>
                    <Flowchart.StartNode>
                      <FlowStep x:Name="__ReferenceID14">
                        <Assign DisplayName="PSM_ApproveLevel =1">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">
                              <mca:CSharpReference x:TypeArguments="x:Int32">PSM_ApproveLevel</mca:CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">1</InArgument>
                          </Assign.Value>
                        </Assign>
                        <FlowStep.Next>
                          <FlowStep x:Name="__ReferenceID16">
                            <Assign DisplayName="Find PSM Approver by Line_Item_Product_div and PSM_ApproveLevel">
                              <Assign.To>
                                <OutArgument x:TypeArguments="scg:List(x:String)">
                                  <mca:CSharpReference x:TypeArguments="scg:List(x:String)">ApproverList</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="scg:List(x:String)">
                                  <mca:CSharpValue x:TypeArguments="scg:List(x:String)">GPControlBusinessLogic.FindPSMApproversByProductDivAndApproveLevel(LineItem.ProductDiv, PSM_ApproveLevel)</mca:CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                            <FlowStep.Next>
                              <FlowDecision x:Name="__ReferenceID11" DisplayName="Check if Approver is not empty?">
                                <FlowDecision.Condition>
                                  <mca:CSharpValue x:TypeArguments="x:Boolean">ApproverList.Any()</mca:CSharpValue>
                                </FlowDecision.Condition>
                                <FlowDecision.True>
                                  <FlowStep x:Name="__ReferenceID15">
                                    <Assign>
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Int32">
                                          <mca:CSharpReference x:TypeArguments="x:Int32">PSMApproverLevelPriority</mca:CSharpReference>
                                        </OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Int32">
                                          <mca:CSharpValue x:TypeArguments="x:Int32">GPControlBusinessLogic.GetPSMApproverLevelPriority("ACN", "")</mca:CSharpValue>
                                        </InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <FlowStep.Next>
                                      <FlowStep x:Name="__ReferenceID13">
                                        <Assign>
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Double">
                                              <mca:CSharpReference x:TypeArguments="x:Double">ApproveLevel</mca:CSharpReference>
                                            </OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Double">
                                              <mca:CSharpValue x:TypeArguments="x:Double">(double)GPControlBusinessLogic.GenerateNewApproverLevel(PSMApproverLevelPriority,PSM_ApproveLevel)</mca:CSharpValue>
                                            </InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <FlowStep.Next>
                                          <FlowStep x:Name="__ReferenceID12">
                                            <Assign>
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:Boolean">
                                                  <mca:CSharpReference x:TypeArguments="x:Boolean">ViewGP</mca:CSharpReference>
                                                </OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                            <FlowStep.Next>
                                              <FlowStep x:Name="__ReferenceID17">
                                                <local:AddApprovalsToList>
                                                  <local:AddApprovalsToList.ApprovalList>
                                                    <InOutArgument x:TypeArguments="scg:List(amd:WorkFlowApproval)">
                                                      <mca:CSharpReference x:TypeArguments="scg:List(amd:WorkFlowApproval)">ApprovalList</mca:CSharpReference>
                                                    </InOutArgument>
                                                  </local:AddApprovalsToList.ApprovalList>
                                                  <local:AddApprovalsToList.ApproverType>
                                                    <InArgument x:TypeArguments="x:String">
                                                      <mca:CSharpValue x:TypeArguments="x:String">ApproverType.PSM.ToString()</mca:CSharpValue>
                                                    </InArgument>
                                                  </local:AddApprovalsToList.ApproverType>
                                                  <local:AddApprovalsToList.Approvers>
                                                    <InArgument x:TypeArguments="scg:List(x:String)">
                                                      <mca:CSharpValue x:TypeArguments="scg:List(x:String)">ApproverList</mca:CSharpValue>
                                                    </InArgument>
                                                  </local:AddApprovalsToList.Approvers>
                                                  <local:AddApprovalsToList.LevelNum>
                                                    <InArgument x:TypeArguments="x:Double">
                                                      <mca:CSharpValue x:TypeArguments="x:Double">ApproveLevel</mca:CSharpValue>
                                                    </InArgument>
                                                  </local:AddApprovalsToList.LevelNum>
                                                  <local:AddApprovalsToList.QuoteId>
                                                    <InArgument x:TypeArguments="x:String">
                                                      <mca:CSharpValue x:TypeArguments="x:String">QuotationMaster.quoteId</mca:CSharpValue>
                                                    </InArgument>
                                                  </local:AddApprovalsToList.QuoteId>
                                                  <local:AddApprovalsToList.Url>
                                                    <InArgument x:TypeArguments="x:String">
                                                      <mca:CSharpValue x:TypeArguments="x:String">Url</mca:CSharpValue>
                                                    </InArgument>
                                                  </local:AddApprovalsToList.Url>
                                                  <local:AddApprovalsToList.ViewGp>
                                                    <InArgument x:TypeArguments="x:Boolean">
                                                      <mca:CSharpValue x:TypeArguments="x:Boolean">ViewGP</mca:CSharpValue>
                                                    </InArgument>
                                                  </local:AddApprovalsToList.ViewGp>
                                                </local:AddApprovalsToList>
                                              </FlowStep>
                                            </FlowStep.Next>
                                          </FlowStep>
                                        </FlowStep.Next>
                                      </FlowStep>
                                    </FlowStep.Next>
                                  </FlowStep>
                                </FlowDecision.True>
                              </FlowDecision>
                            </FlowStep.Next>
                          </FlowStep>
                        </FlowStep.Next>
                      </FlowStep>
                    </Flowchart.StartNode>
                    <x:Reference>__ReferenceID11</x:Reference>
                    <x:Reference>__ReferenceID12</x:Reference>
                    <x:Reference>__ReferenceID13</x:Reference>
                    <x:Reference>__ReferenceID14</x:Reference>
                    <x:Reference>__ReferenceID15</x:Reference>
                    <x:Reference>__ReferenceID16</x:Reference>
                    <x:Reference>__ReferenceID17</x:Reference>
                  </Flowchart>
                </If.Then>
              </If>
            </Sequence>
          </ActivityAction>
        </ForEach>
      </FlowStep>
      <x:Reference>__ReferenceID18</x:Reference>
      <sads:DebugSymbol.Symbol>d0NEOlxNeUFkdmFudGVjaEdpdFxNeUFkdmFudGVjaEFQSVxXb3JrRmxvd2xBUElcRmluZEFwcHJvdmVyRmxvdy54YW1sK0EDvwQPAgEBTQlYEgMBtQNbDWYWAwGaA2kRdBoDAf8CiAEXiAFbAwHyAnkZhAEiAwHXAu0BF5YCNAMB7gG3ARfqATQCAWuLARe0ATQCAQJVD1WFAQMBwwNQD1B3AwG2A2MTY70BAwGoA14TXpABAwGbA3EXcbUBAwGNA2wXbIQBAwGAA4EBH4EBhgEDAeUCfB98ewMB2AKOAh2OAowBAwHKAokCHYkClQEDAb0C8AEd8AGFAQMBsAL6AR36AXkDAaMChAIdhAJyAwGWApMCHZMCXgMBiQL1AR31AWwDAfwB/wEd/wGSAQMB7wHiAR3iAYwBAwHhAdgBHdgBdwMB1AHdAR3dAZUBAwHHAc4BHc4BfAMBugG6AR26AYUBAwGtAb8BHb8BfgMBoAHEAR3EAXkDAZMB0wEd0wFyAwGGAecBHecBXgIBeckBHckBkgECAWysAR2sAYwBAgFepwEdpwGVAQIBUZMBHZMBggECAUSOAR2OAYUBAgE3mAEdmAF5AgEqogEdogFyAgEdsQEdsQFeAgEQnQEdnQGSAQIBAw==</sads:DebugSymbol.Symbol>
    </Flowchart>
  </local:FindApproverFlow.Implementation>
</local:FindApproverFlow>