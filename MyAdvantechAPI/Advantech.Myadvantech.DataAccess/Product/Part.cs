//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration;
using System.Data;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Text;

using System.Data.Common;


[assembly: InternalsVisibleTo("Advantech.Myadvantech.Business")]
namespace Advantech.Myadvantech.DataAccess
{
    public partial  class Part
    {
        public virtual String PartNumber
        {
            get;
            set;
        }
         [DefaultValue(1)]

        public Decimal ListPrice
        {
            get;
            set;
        }

        public virtual Decimal UnitPrice
        {
            get;
            set;
        }

        public virtual Decimal MinimumPrice
        {
            get;
            set;
        }

        /// <summary>
        /// BR ICMS Normal Base
        /// </summary>
        public virtual Decimal BX10
        {
            get;
            set;
        }


        /// <summary>
        /// ABR ICMS
        /// </summary>
        public virtual Decimal BX13
        {
            get;
            set;
        }

        /// <summary>
        /// ABR IPI
        /// </summary>
        public virtual Decimal BX23
        {
            get;
            set;
        }

        /// <summary>
        /// ICMS ST(Sub Trib Amount)
        /// </summary>
        public virtual Decimal BX40
        {
            get;
            set;
        }

        /// <summary>
        /// ABR ICMS ST
        /// </summary>
        public virtual Decimal BX41
        {
            get;
            set;
        }

        /// <summary>
        /// ABR COFINS
        /// </summary>
        public virtual Decimal BX72
        {
            get;
            set;
        }

        /// <summary>
        /// ABR PIS
        /// </summary>
        public virtual Decimal BX82
        {
            get;
            set;
        }

        /// <summary>
        /// ICMS Orig Part Amt
        /// </summary>
        public virtual Decimal BX94
        {
            get;
            set;
        }

        /// <summary>
        /// ICMS Dest Part Amt
        /// </summary>
        public virtual Decimal BX95
        {
            get;
            set;
        }

        /// <summary>
        /// ICMS Spec Fund Amt
        /// </summary>
        public virtual Decimal BX96
        {
            get;
            set;
        }

        /// <summary>
        /// Freight
        /// </summary>
        public virtual Decimal FK00
        {
            get;
            set;
        }

        /// <summary>
        /// ICMS Tax Rate
        /// </summary>
        public virtual Decimal ICVA
        {
            get;
            set;
        }

        /// <summary>
        /// IPI Tax Rate
        /// </summary>
        public virtual Decimal IPVA
        {
            get;
            set;
        }

        /// <summary>
        /// ICMS Rate SF=ST
        /// </summary>
        public virtual Decimal ISIC
        {
            get;
            set;
        }

        /// <summary>
        /// 
        /// </summary>
        public virtual Decimal ISTS
        {
            get;
            set;
        }

        /// <summary>
        /// COFINS Rate
        /// </summary>
        public virtual Decimal BCO1
        {
            get;
            set;
        }

        /// <summary>
        /// PIS Rate
        /// </summary>
        public virtual Decimal BPI1
        {
            get;
            set;
        }

        /// <summary>
        /// part's control in SAP MM view
        /// </summary>
        public virtual String NCM
        {
            get;
            set;
        }


        public virtual Decimal ITP
        {
            get;
            set;
        }
        //public virtual String SoldToErpID  //要考慮是否該出現在part類別中
        //{
        //    get;
        //    set;
        //}
        //public virtual String ShipToErpID //要考慮是否該出現在part類別中
        //{
        //    get;
        //    set;
        //}
        public virtual String OrgID
        {
            get;
            set;
        }

        public virtual String PlantID
        {
            get;
            set;
        }
        public virtual string Currency
        {
            get;
            set;
        }


        public virtual string Material
        {
            get;
            set;
        }
        public virtual string CustomerMaterial
        {
            get;
            set;
        }
        public virtual string DMF_Flag
        {
            get;
            set;
        }

        private Conditions _conditions;
        public Conditions Conditions
        {
            get
            {
                if (this._conditions == null)
                    this._conditions = new Conditions();
                return this._conditions;
            }
            set
            {
                this._conditions = value;
            }
        }



        public virtual String SAPDescription
        {
            get;
            set;
        }

        public virtual String PISDescription
        {
            get;
            set;
        }


        private List<ProductSpec> _PartSpecs = new List<ProductSpec>();
        public List<ProductSpec> PartSpecs
        {
            get
            {
                if (this._PartSpecs.Count == 0)
                {
                    this.LoadPartSpecsInformation();
                }
                return _PartSpecs;
            }
            //protected set { this._PartSpecs = PartSpecs; }
        }

        private List<Model> _Models = new List<Model>();
        public List<Model> Models
        {
            get
            {
                if (this._Models.Count == 0)
                {
                    this.LoadModels();
                }
                return _Models;
            }
            //protected set;
        }

        public Part()
        {
        }

        public Part(String PartNo)
        {
            this.PartNumber = PartNo;
            //LoadPartDetail(this.PartNumber);
        }

        internal void LoadModels(bool IsCompleteMode = false)
        {

            IDbConnection cnn = DatabaceFactory.GetPISConnection();

            StringBuilder sql = new StringBuilder();

            //優化這一段，如果已查過一次model資訊，在model建構子中就不用再查一次model資訊

            sql.Append(this.GetPartModelByPISSQL());
            //sql.AppendLine(string.Format(" Select distinct m.Model_name, mp.part_no as PART_NO, m.MODEL_ID "));
            //sql.AppendLine(string.Format(" From model m "));
            //sql.AppendLine(string.Format(" left join Category_Model cm on cm.Model_name=m.Model_name "));
            //sql.AppendLine(string.Format(" left join CATALOG_CATEGORY cc on cc.Category_id=cm.Category_id "));
            //sql.AppendLine(string.Format(" left join Model_Publish mpu on mpu.model_name =m.model_name and mpu.Site_ID ='ACL' "));
            //sql.AppendLine(string.Format(" left join model_product mp on m.model_name=mp.Model_name and mp.relation='product' and mp.PART_NO = @PN "));
            //sql.AppendLine(string.Format(" left join product on product.part_no=mp.Part_no "));
            //sql.AppendLine(string.Format(" Where cc.CATALOGID IN ('{0}', '{1}') ", new string[] { "1-2JKBQD", "1-2MLAX2" }));
            //sql.AppendLine(string.Format(" And mpu.Active_FLG ='Y'"));
            //sql.AppendLine(string.Format(" And mp.STATUS<>'deleted' "));
            //sql.AppendLine(string.Format(" AND (PRODUCT.PART_NO =@PN or m.Model_name= substring(@PN,0, charindex('-',@PN,charindex('-',@PN)+1)) "));
            //sql.AppendLine(string.Format(" or m.MODEL_NAME =@PN "));
            //sql.AppendLine(string.Format(" ) "));
            //sql.AppendLine(string.Format(" Order by m.Model_name DESC "));

            IDbCommand cmd = DatabaceFactory.CreateCommand(sql.ToString(), DatabaseType.SQLServer, cnn);

            IDbDataParameter dp = cmd.CreateParameter();
            dp.ParameterName = "PN";
            dp.Value = this.PartNumber;
            cmd.Parameters.Add(dp);

            DbDataAdapter da = DatabaceFactory.CreateAdapter(cmd, DatabaseType.SQLServer);

            DataTable dt = new DataTable("Model");

            da.Fill(dt);

            if (dt == null || dt.Rows.Count == 0)
            {
                //If part is not hooked to model in PIS, then get model and part relationship from SAP(PRODUCT_LOGISTICS_NEW)
                sql.Clear();
                sql.Append(this.GetPartModelBySAPSQL());
                //sql.AppendLine(string.Format(" Select distinct top 1 m.Model_name,ISNULL(mp.part_no,pln.PART_NO) as PART_NO  ,m.MODEL_ID "));
                //sql.AppendLine(string.Format(" from dbo.model m "));
                //sql.AppendLine(string.Format(" left join dbo.Category_Model cm on  cm.Model_name=m.Model_name "));
                //sql.AppendLine(string.Format(" left join dbo.CATALOG_CATEGORY cc on cc.Category_id=cm.Category_id "));
                //sql.AppendLine(string.Format(" left join Model_Publish mpu on mpu.model_name =m.model_name and mpu.Site_ID ='ACL' "));
                //sql.AppendLine(string.Format(" left join PRODUCT_LOGISTICS_NEW pln  on pln.MODEL_NO =m.MODEL_NAME "));
                //sql.AppendLine(string.Format(" 			and pln.PART_NO = @PN "));
                //sql.AppendLine(string.Format(" left join model_product  mp on m.model_name=mp.Model_name and mp.relation='product' and mp.PART_NO = @PN "));
                //sql.AppendLine(string.Format(" left join product on product.part_no=mp.Part_no "));
                //sql.AppendLine(string.Format(" Where cc.CATALOGID IN ('{0}', '{1}') ", new string[] { "1-2JKBQD", "1-2MLAX2" }));
                //sql.AppendLine(string.Format(" And mp.STATUS<>'deleted' "));
                //sql.AppendLine(string.Format("         AND (PRODUCT.PART_NO =@PN or m.Model_name= substring(@PN,0, charindex('-',@PN,charindex('-',@PN)+1)) "));
                //sql.AppendLine(string.Format("         or pln.PART_NO =@PN or m.MODEL_NAME =@PN  "));
                //sql.AppendLine(string.Format("         ) "));
                //sql.AppendLine(string.Format("  order by m.Model_name DESC "));

                cmd.CommandText = sql.ToString();
                dt = new DataTable("Model");
                da.Fill(dt);

            }


            foreach (DataRow _row in dt.Rows)
            {
                Model _model = new Model((string)_row["Model_name"]);
                if (IsCompleteMode) {
                    _model.LoadCompleteModelInformation();
                } else {
                    _model.LoadBasicModelInformation();
                }
                this._Models.Add(_model);
            }

        }

        internal void LoadPartDetail()
        {
            //希望能增加外部傳入參數的方式來指定連線字串
            IDbConnection cnn = DatabaceFactory.GetPISConnection();

            StringBuilder sql = new StringBuilder();

            IDbCommand cmd = DatabaceFactory.CreateCommand(sql.ToString(), DatabaseType.SQLServer, cnn);

            IDbDataParameter dp = cmd.CreateParameter();
            dp.ParameterName = "PN";
            dp.Value = this.PartNumber;
            cmd.Parameters.Add(dp);

            //Get Specs and Descriptions
            sql.Clear();
            sql.Append(this.GetPartSpecsSQL());

            sql.Append(" ; ");
            sql.Append(this.GetPartDescriptionSQL());

            cmd.CommandText = sql.ToString();

            DbDataAdapter da = DatabaceFactory.CreateAdapter(cmd, DatabaseType.SQLServer);

            DataSet dsPart = new DataSet();
            da.Fill(dsPart);

            //======================Product Spec==========================================
            this.WriteToAttributePartSpecs(dsPart.Tables[0]);
            //======================Product Description==========================================
            this.WriteToAttributePartDescription(dsPart.Tables[1]);

        }

        private string GetPartModelByPISSQL()
        {
            StringBuilder sql = new StringBuilder();
            sql.AppendLine(string.Format(" Select distinct m.Model_name, mp.part_no as PART_NO, m.MODEL_ID "));
            sql.AppendLine(string.Format(" From model m "));
            sql.AppendLine(string.Format(" left join Category_Model cm on cm.Model_name=m.Model_name "));
            sql.AppendLine(string.Format(" left join CATALOG_CATEGORY cc on cc.Category_id=cm.Category_id "));
            sql.AppendLine(string.Format(" left join Model_Publish mpu on mpu.model_name =m.model_name and mpu.Site_ID ='ACL' "));
            sql.AppendLine(string.Format(" left join model_product mp on m.model_name=mp.Model_name and mp.relation='product' and mp.PART_NO = @PN "));
            sql.AppendLine(string.Format(" left join product on product.part_no=mp.Part_no "));
            sql.AppendLine(string.Format(" Where cc.CATALOGID IN ('{0}', '{1}') ", new string[] { "1-2JKBQD", "1-2MLAX2" }));
            sql.AppendLine(string.Format(" And mpu.Active_FLG ='Y'"));
            sql.AppendLine(string.Format(" And mp.STATUS<>'deleted' "));
            sql.AppendLine(string.Format(" AND (PRODUCT.PART_NO =@PN or m.Model_name= substring(@PN,0, charindex('-',@PN,charindex('-',@PN)+1)) "));
            sql.AppendLine(string.Format(" or m.MODEL_NAME =@PN "));
            sql.AppendLine(string.Format(" ) "));
            sql.AppendLine(string.Format(" Order by m.Model_name DESC "));
            return sql.ToString();
        }

        private string GetPartModelBySAPSQL()
        {
            StringBuilder sql = new StringBuilder();
            sql.AppendLine(string.Format(" Select distinct top 1 m.Model_name,ISNULL(mp.part_no,pln.PART_NO) as PART_NO  ,m.MODEL_ID "));
            sql.AppendLine(string.Format(" from dbo.model m "));
            sql.AppendLine(string.Format(" left join dbo.Category_Model cm on  cm.Model_name=m.Model_name "));
            sql.AppendLine(string.Format(" left join dbo.CATALOG_CATEGORY cc on cc.Category_id=cm.Category_id "));
            sql.AppendLine(string.Format(" left join Model_Publish mpu on mpu.model_name =m.model_name and mpu.Site_ID ='ACL' "));
            sql.AppendLine(string.Format(" left join PRODUCT_LOGISTICS_NEW pln  on pln.MODEL_NO =m.MODEL_NAME "));
            sql.AppendLine(string.Format(" 			and pln.PART_NO = @PN "));
            sql.AppendLine(string.Format(" left join model_product  mp on m.model_name=mp.Model_name and mp.relation='product' and mp.PART_NO = @PN "));
            sql.AppendLine(string.Format(" left join product on product.part_no=mp.Part_no "));
            sql.AppendLine(string.Format(" Where cc.CATALOGID IN ('{0}', '{1}') ", new string[] { "1-2JKBQD", "1-2MLAX2" }));
            sql.AppendLine(string.Format(" And mp.STATUS<>'deleted' "));
            sql.AppendLine(string.Format("         AND (PRODUCT.PART_NO =@PN or m.Model_name= substring(@PN,0, charindex('-',@PN,charindex('-',@PN)+1)) "));
            sql.AppendLine(string.Format("         or pln.PART_NO =@PN or m.MODEL_NAME =@PN  "));
            sql.AppendLine(string.Format("         ) "));
            sql.AppendLine(string.Format("  order by m.Model_name DESC "));
            return sql.ToString();
        }



        private string GetPartSpecsSQL()
        {
            StringBuilder sql = new StringBuilder();
            sql.Append(" Select AttrCatID,AttrCatName,AttrID,AttrName,AttrValueID,AttrValueName,DataSheet_Sequence,Is_Filter ");
            sql.Append(" From V_SPEC_V3  ");
            sql.Append(" Where ProductNo=@PN and lang='ENU' and ItemType='Part'");
            sql.Append(" order by DataSheet_Sequence ");
            return sql.ToString();
        }

        internal void LoadPartSpecsInformation()
        {
            if (string.IsNullOrEmpty(this.PartNumber)) { return; }
            IDbConnection cnn = DatabaceFactory.GetPISConnection();
            
            IDbCommand cmd = null;
            IDbDataParameter dp = null;
            DbDataAdapter da = null;

            cmd = DatabaceFactory.CreateCommand(this.GetPartSpecsSQL(), DatabaseType.SQLServer, cnn);
            dp = cmd.CreateParameter();
            dp.ParameterName = "PN";
            dp.Value = this.PartNumber;
            cmd.Parameters.Add(dp);

            da = DatabaceFactory.CreateAdapter(cmd, DatabaseType.SQLServer);
            DataSet DsModel = new DataSet();
            da.Fill(DsModel);

            this.WriteToAttributePartSpecs(DsModel.Tables[0]);
        }

        internal void WriteToAttributePartSpecs(DataTable dt)
        {

            foreach (DataRow _row in dt.Rows)
            {
                ProductSpec _spec = new ProductSpec();
                _spec.SpecCategoryID = (int)_row["AttrCatID"];
                _spec.SpecCategoryName = (string)_row["AttrCatName"];
                _spec.SpecItemID = (int)_row["AttrID"];
                _spec.SpecItemName = (string)_row["AttrName"];
                _spec.SpecItemValueID = (int)_row["AttrValueID"];
                _spec.SpecItemValueName = (string)_row["AttrValueName"];
                _spec.Sequence = (int)_row["DataSheet_Sequence"];
                _spec.IsFilterOption = (bool)_row["Is_Filter"];
                this._PartSpecs.Add(_spec);
            }
        }

        private string GetPartDescriptionSQL()
        {
            StringBuilder sql = new StringBuilder();
            sql.Append(" Select isnull(PRODUCT_DESC,'') as SAPDescription,isnull(PRODUCT_DESC2,'') as PISDescription ");
            sql.Append(" From PRODUCT ");
            sql.Append(" Where PART_NO=@PN ");
            return sql.ToString();
        }


        internal void LoadPartDescriptionInformation()
        {
            if (string.IsNullOrEmpty(this.PartNumber)) { return; }
            IDbConnection cnn = DatabaceFactory.GetPISConnection();
            
            IDbCommand cmd = null;
            IDbDataParameter dp = null;
            DbDataAdapter da = null;

            cmd = DatabaceFactory.CreateCommand(this.GetPartDescriptionSQL(), DatabaseType.SQLServer, cnn);
            dp = cmd.CreateParameter();
            dp.ParameterName = "PN";
            dp.Value = this.PartNumber;
            cmd.Parameters.Add(dp);

            da = DatabaceFactory.CreateAdapter(cmd, DatabaseType.SQLServer);
            DataSet DsModel = new DataSet();
            da.Fill(DsModel);

            this.WriteToAttributePartDescription(DsModel.Tables[0]);
        }


        private void WriteToAttributePartDescription(DataTable dt)
        {
            if ((dt != null) && (dt.Rows.Count > 0))
            {
                this.SAPDescription = (string)dt.Rows[0]["SAPDescription"];
                this.PISDescription = (string)dt.Rows[0]["PISDescription"];
            }

        }

    }
}