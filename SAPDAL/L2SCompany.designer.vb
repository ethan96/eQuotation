'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="MyAdvantechGlobal")>  _
Partial Public Class L2SCompanyDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertSAP_COMPANY_EMPLOYEE(instance As SAP_COMPANY_EMPLOYEE)
    End Sub
  Partial Private Sub UpdateSAP_COMPANY_EMPLOYEE(instance As SAP_COMPANY_EMPLOYEE)
    End Sub
  Partial Private Sub DeleteSAP_COMPANY_EMPLOYEE(instance As SAP_COMPANY_EMPLOYEE)
    End Sub
  Partial Private Sub InsertSAP_COMPANY_PARTNER(instance As SAP_COMPANY_PARTNER)
    End Sub
  Partial Private Sub UpdateSAP_COMPANY_PARTNER(instance As SAP_COMPANY_PARTNER)
    End Sub
  Partial Private Sub DeleteSAP_COMPANY_PARTNER(instance As SAP_COMPANY_PARTNER)
    End Sub
  Partial Private Sub InsertSAP_DIMCOMPANY(instance As SAP_DIMCOMPANY)
    End Sub
  Partial Private Sub UpdateSAP_DIMCOMPANY(instance As SAP_DIMCOMPANY)
    End Sub
  Partial Private Sub DeleteSAP_DIMCOMPANY(instance As SAP_DIMCOMPANY)
    End Sub
  Partial Private Sub InsertSAP_COMPANY_CONTACT(instance As SAP_COMPANY_CONTACT)
    End Sub
  Partial Private Sub UpdateSAP_COMPANY_CONTACT(instance As SAP_COMPANY_CONTACT)
    End Sub
  Partial Private Sub DeleteSAP_COMPANY_CONTACT(instance As SAP_COMPANY_CONTACT)
    End Sub
  Partial Private Sub InsertSAP_COMPANY_SALES_DEF(instance As SAP_COMPANY_SALES_DEF)
    End Sub
  Partial Private Sub UpdateSAP_COMPANY_SALES_DEF(instance As SAP_COMPANY_SALES_DEF)
    End Sub
  Partial Private Sub DeleteSAP_COMPANY_SALES_DEF(instance As SAP_COMPANY_SALES_DEF)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.SAPDAL.My.MySettings.Default.MyAdvantechGlobalConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property SAP_COMPANY_EMPLOYEEs() As System.Data.Linq.Table(Of SAP_COMPANY_EMPLOYEE)
		Get
			Return Me.GetTable(Of SAP_COMPANY_EMPLOYEE)
		End Get
	End Property
	
	Public ReadOnly Property SAP_COMPANY_PARTNERs() As System.Data.Linq.Table(Of SAP_COMPANY_PARTNER)
		Get
			Return Me.GetTable(Of SAP_COMPANY_PARTNER)
		End Get
	End Property
	
	Public ReadOnly Property SAP_DIMCOMPANies() As System.Data.Linq.Table(Of SAP_DIMCOMPANY)
		Get
			Return Me.GetTable(Of SAP_DIMCOMPANY)
		End Get
	End Property
	
	Public ReadOnly Property SAP_COMPANY_CONTACTs() As System.Data.Linq.Table(Of SAP_COMPANY_CONTACT)
		Get
			Return Me.GetTable(Of SAP_COMPANY_CONTACT)
		End Get
	End Property
	
	Public ReadOnly Property SAP_COMPANY_SALES_DEFs() As System.Data.Linq.Table(Of SAP_COMPANY_SALES_DEF)
		Get
			Return Me.GetTable(Of SAP_COMPANY_SALES_DEF)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.SAP_COMPANY_EMPLOYEE")>  _
Partial Public Class SAP_COMPANY_EMPLOYEE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _COMPANY_ID As String
	
	Private _SUB_COMPANY_ID As String
	
	Private _SALES_ORG As String
	
	Private _PARTNER_FUNCTION As String
	
	Private _SALES_CODE As String
	
	Private _ID As Integer
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCOMPANY_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCOMPANY_IDChanged()
    End Sub
    Partial Private Sub OnSUB_COMPANY_IDChanging(value As String)
    End Sub
    Partial Private Sub OnSUB_COMPANY_IDChanged()
    End Sub
    Partial Private Sub OnSALES_ORGChanging(value As String)
    End Sub
    Partial Private Sub OnSALES_ORGChanged()
    End Sub
    Partial Private Sub OnPARTNER_FUNCTIONChanging(value As String)
    End Sub
    Partial Private Sub OnPARTNER_FUNCTIONChanged()
    End Sub
    Partial Private Sub OnSALES_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnSALES_CODEChanged()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY_ID", DbType:="NVarChar(30)")>  _
	Public Property COMPANY_ID() As String
		Get
			Return Me._COMPANY_ID
		End Get
		Set
			If (String.Equals(Me._COMPANY_ID, value) = false) Then
				Me.OnCOMPANY_IDChanging(value)
				Me.SendPropertyChanging
				Me._COMPANY_ID = value
				Me.SendPropertyChanged("COMPANY_ID")
				Me.OnCOMPANY_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SUB_COMPANY_ID", DbType:="NVarChar(30)")>  _
	Public Property SUB_COMPANY_ID() As String
		Get
			Return Me._SUB_COMPANY_ID
		End Get
		Set
			If (String.Equals(Me._SUB_COMPANY_ID, value) = false) Then
				Me.OnSUB_COMPANY_IDChanging(value)
				Me.SendPropertyChanging
				Me._SUB_COMPANY_ID = value
				Me.SendPropertyChanged("SUB_COMPANY_ID")
				Me.OnSUB_COMPANY_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALES_ORG", DbType:="NVarChar(12)")>  _
	Public Property SALES_ORG() As String
		Get
			Return Me._SALES_ORG
		End Get
		Set
			If (String.Equals(Me._SALES_ORG, value) = false) Then
				Me.OnSALES_ORGChanging(value)
				Me.SendPropertyChanging
				Me._SALES_ORG = value
				Me.SendPropertyChanged("SALES_ORG")
				Me.OnSALES_ORGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PARTNER_FUNCTION", DbType:="NVarChar(6)")>  _
	Public Property PARTNER_FUNCTION() As String
		Get
			Return Me._PARTNER_FUNCTION
		End Get
		Set
			If (String.Equals(Me._PARTNER_FUNCTION, value) = false) Then
				Me.OnPARTNER_FUNCTIONChanging(value)
				Me.SendPropertyChanging
				Me._PARTNER_FUNCTION = value
				Me.SendPropertyChanged("PARTNER_FUNCTION")
				Me.OnPARTNER_FUNCTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALES_CODE", DbType:="NVarChar(24)")>  _
	Public Property SALES_CODE() As String
		Get
			Return Me._SALES_CODE
		End Get
		Set
			If (String.Equals(Me._SALES_CODE, value) = false) Then
				Me.OnSALES_CODEChanging(value)
				Me.SendPropertyChanging
				Me._SALES_CODE = value
				Me.SendPropertyChanged("SALES_CODE")
				Me.OnSALES_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.SAP_COMPANY_PARTNERS")>  _
Partial Public Class SAP_COMPANY_PARTNER
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _COMPANY_ID As String
	
	Private _ORG_ID As String
	
	Private _DIST_CHANN As String
	
	Private _DIVISION As String
	
	Private _PARTNER_FUNCTION As String
	
	Private _PARENT_COMPANY_ID As String
	
	Private _VENDOR_CREDITOR As String
	
	Private _SALES_CODE As String
	
	Private _PARTNER_NUMBER As String
	
	Private _KNREF As String
	
	Private _DEFPA As String
	
	Private _ID As Integer
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCOMPANY_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCOMPANY_IDChanged()
    End Sub
    Partial Private Sub OnORG_IDChanging(value As String)
    End Sub
    Partial Private Sub OnORG_IDChanged()
    End Sub
    Partial Private Sub OnDIST_CHANNChanging(value As String)
    End Sub
    Partial Private Sub OnDIST_CHANNChanged()
    End Sub
    Partial Private Sub OnDIVISIONChanging(value As String)
    End Sub
    Partial Private Sub OnDIVISIONChanged()
    End Sub
    Partial Private Sub OnPARTNER_FUNCTIONChanging(value As String)
    End Sub
    Partial Private Sub OnPARTNER_FUNCTIONChanged()
    End Sub
    Partial Private Sub OnPARENT_COMPANY_IDChanging(value As String)
    End Sub
    Partial Private Sub OnPARENT_COMPANY_IDChanged()
    End Sub
    Partial Private Sub OnVENDOR_CREDITORChanging(value As String)
    End Sub
    Partial Private Sub OnVENDOR_CREDITORChanged()
    End Sub
    Partial Private Sub OnSALES_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnSALES_CODEChanged()
    End Sub
    Partial Private Sub OnPARTNER_NUMBERChanging(value As String)
    End Sub
    Partial Private Sub OnPARTNER_NUMBERChanged()
    End Sub
    Partial Private Sub OnKNREFChanging(value As String)
    End Sub
    Partial Private Sub OnKNREFChanged()
    End Sub
    Partial Private Sub OnDEFPAChanging(value As String)
    End Sub
    Partial Private Sub OnDEFPAChanged()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY_ID", DbType:="NVarChar(30)")>  _
	Public Property COMPANY_ID() As String
		Get
			Return Me._COMPANY_ID
		End Get
		Set
			If (String.Equals(Me._COMPANY_ID, value) = false) Then
				Me.OnCOMPANY_IDChanging(value)
				Me.SendPropertyChanging
				Me._COMPANY_ID = value
				Me.SendPropertyChanged("COMPANY_ID")
				Me.OnCOMPANY_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORG_ID", DbType:="NVarChar(12)")>  _
	Public Property ORG_ID() As String
		Get
			Return Me._ORG_ID
		End Get
		Set
			If (String.Equals(Me._ORG_ID, value) = false) Then
				Me.OnORG_IDChanging(value)
				Me.SendPropertyChanging
				Me._ORG_ID = value
				Me.SendPropertyChanged("ORG_ID")
				Me.OnORG_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIST_CHANN", DbType:="NVarChar(6)")>  _
	Public Property DIST_CHANN() As String
		Get
			Return Me._DIST_CHANN
		End Get
		Set
			If (String.Equals(Me._DIST_CHANN, value) = false) Then
				Me.OnDIST_CHANNChanging(value)
				Me.SendPropertyChanging
				Me._DIST_CHANN = value
				Me.SendPropertyChanged("DIST_CHANN")
				Me.OnDIST_CHANNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIVISION", DbType:="NVarChar(6)")>  _
	Public Property DIVISION() As String
		Get
			Return Me._DIVISION
		End Get
		Set
			If (String.Equals(Me._DIVISION, value) = false) Then
				Me.OnDIVISIONChanging(value)
				Me.SendPropertyChanging
				Me._DIVISION = value
				Me.SendPropertyChanged("DIVISION")
				Me.OnDIVISIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PARTNER_FUNCTION", DbType:="NVarChar(6)")>  _
	Public Property PARTNER_FUNCTION() As String
		Get
			Return Me._PARTNER_FUNCTION
		End Get
		Set
			If (String.Equals(Me._PARTNER_FUNCTION, value) = false) Then
				Me.OnPARTNER_FUNCTIONChanging(value)
				Me.SendPropertyChanging
				Me._PARTNER_FUNCTION = value
				Me.SendPropertyChanged("PARTNER_FUNCTION")
				Me.OnPARTNER_FUNCTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PARENT_COMPANY_ID", DbType:="NVarChar(30)")>  _
	Public Property PARENT_COMPANY_ID() As String
		Get
			Return Me._PARENT_COMPANY_ID
		End Get
		Set
			If (String.Equals(Me._PARENT_COMPANY_ID, value) = false) Then
				Me.OnPARENT_COMPANY_IDChanging(value)
				Me.SendPropertyChanging
				Me._PARENT_COMPANY_ID = value
				Me.SendPropertyChanged("PARENT_COMPANY_ID")
				Me.OnPARENT_COMPANY_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VENDOR_CREDITOR", DbType:="NVarChar(30)")>  _
	Public Property VENDOR_CREDITOR() As String
		Get
			Return Me._VENDOR_CREDITOR
		End Get
		Set
			If (String.Equals(Me._VENDOR_CREDITOR, value) = false) Then
				Me.OnVENDOR_CREDITORChanging(value)
				Me.SendPropertyChanging
				Me._VENDOR_CREDITOR = value
				Me.SendPropertyChanged("VENDOR_CREDITOR")
				Me.OnVENDOR_CREDITORChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALES_CODE", DbType:="NVarChar(24)")>  _
	Public Property SALES_CODE() As String
		Get
			Return Me._SALES_CODE
		End Get
		Set
			If (String.Equals(Me._SALES_CODE, value) = false) Then
				Me.OnSALES_CODEChanging(value)
				Me.SendPropertyChanging
				Me._SALES_CODE = value
				Me.SendPropertyChanged("SALES_CODE")
				Me.OnSALES_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PARTNER_NUMBER", DbType:="NVarChar(30)")>  _
	Public Property PARTNER_NUMBER() As String
		Get
			Return Me._PARTNER_NUMBER
		End Get
		Set
			If (String.Equals(Me._PARTNER_NUMBER, value) = false) Then
				Me.OnPARTNER_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._PARTNER_NUMBER = value
				Me.SendPropertyChanged("PARTNER_NUMBER")
				Me.OnPARTNER_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KNREF", DbType:="NVarChar(90)")>  _
	Public Property KNREF() As String
		Get
			Return Me._KNREF
		End Get
		Set
			If (String.Equals(Me._KNREF, value) = false) Then
				Me.OnKNREFChanging(value)
				Me.SendPropertyChanging
				Me._KNREF = value
				Me.SendPropertyChanged("KNREF")
				Me.OnKNREFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DEFPA", DbType:="NVarChar(3)")>  _
	Public Property DEFPA() As String
		Get
			Return Me._DEFPA
		End Get
		Set
			If (String.Equals(Me._DEFPA, value) = false) Then
				Me.OnDEFPAChanging(value)
				Me.SendPropertyChanging
				Me._DEFPA = value
				Me.SendPropertyChanged("DEFPA")
				Me.OnDEFPAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.SAP_DIMCOMPANY")>  _
Partial Public Class SAP_DIMCOMPANY
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _UNIQUE_ID As String
	
	Private _COMPANY_ID As String
	
	Private _ORG_ID As String
	
	Private _PARENTCOMPANYID As String
	
	Private _COMPANY_NAME As String
	
	Private _ADDRESS As String
	
	Private _FAX_NO As String
	
	Private _TEL_NO As String
	
	Private _COMPANY_TYPE As String
	
	Private _PRICE_CLASS As String
	
	Private _CURRENCY As String
	
	Private _COUNTRY As String
	
	Private _REGION_CODE As String
	
	Private _ZIP_CODE As String
	
	Private _CITY As String
	
	Private _ATTENTION As String
	
	Private _CREDIT_TERM As String
	
	Private _SHIP_VIA As String
	
	Private _URL As String
	
	Private _CREATEDDATE As String
	
	Private _CREATED_BY As String
	
	Private _COMPANY_PRICE_TYPE As String
	
	Private _SHIPCONDITION As String
	
	Private _ATTRIBUTE4 As String
	
	Private _SALESOFFICE As String
	
	Private _SALESGROUP As String
	
	Private _AMT_INSURED As System.Nullable(Of Decimal)
	
	Private _CREDIT_LIMIT As System.Nullable(Of Decimal)
	
	Private _CONTACT_EMAIL As String
	
	Private _DELETION_FLAG As String
	
	Private _COUNTRY_NAME As String
	
	Private _SALESOFFICENAME As String
	
	Private _SAP_SALESNAME As String
	
	Private _SAP_SALESCODE As String
	
	Private _SAP_ISNAME As String
	
	Private _SAP_OPNAME As String
	
	Private _SECTOR As String
	
	Private _PRIMARY_BAA As String
	
	Private _ACCOUNT_ROW_ID As String
	
	Private _ACCOUNT_NAME As String
	
	Private _ACCOUNT_STATUS As String
	
	Private _RBU As String
	
	Private _PRIMARY_SALES_EMAIL As String
	
	Private _PRIMARY_OWNER_DIVISION As String
	
	Private _BUSINESS_GROUP As String
	
	Private _ACCOUNT_TYPE As String
	
	Private _FACT2005 As System.Nullable(Of Decimal)
	
	Private _FACT2006 As System.Nullable(Of Decimal)
	
	Private _FACT2007 As System.Nullable(Of Decimal)
	
	Private _FACT2008 As System.Nullable(Of Decimal)
	
	Private _FACT2009 As System.Nullable(Of Decimal)
	
	Private _FACT2010 As System.Nullable(Of Decimal)
	
	Private _LAST_BUY_DATE As System.Nullable(Of Date)
	
	Private _ORDERS_IN_PAST_YEAR As System.Nullable(Of Integer)
	
	Private _AMOUNT_IN_PAST_YEAR As System.Nullable(Of Decimal)
	
	Private _ORDERS_IN_PAST_HALFYEAR As System.Nullable(Of Integer)
	
	Private _CUST_IND As String
	
	Private _VM As String
	
	Private _PRICE_GRP As String
	
	Private _PRICE_LIST As String
	
	Private _INCO1 As String
	
	Private _INCO2 As String
	
	Private _PAYMENT_TERM_CODE As String
	
	Private _PAYMENT_TERM_NAME As String
	
	Private _ID As Integer
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnUNIQUE_IDChanging(value As String)
    End Sub
    Partial Private Sub OnUNIQUE_IDChanged()
    End Sub
    Partial Private Sub OnCOMPANY_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCOMPANY_IDChanged()
    End Sub
    Partial Private Sub OnORG_IDChanging(value As String)
    End Sub
    Partial Private Sub OnORG_IDChanged()
    End Sub
    Partial Private Sub OnPARENTCOMPANYIDChanging(value As String)
    End Sub
    Partial Private Sub OnPARENTCOMPANYIDChanged()
    End Sub
    Partial Private Sub OnCOMPANY_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCOMPANY_NAMEChanged()
    End Sub
    Partial Private Sub OnADDRESSChanging(value As String)
    End Sub
    Partial Private Sub OnADDRESSChanged()
    End Sub
    Partial Private Sub OnFAX_NOChanging(value As String)
    End Sub
    Partial Private Sub OnFAX_NOChanged()
    End Sub
    Partial Private Sub OnTEL_NOChanging(value As String)
    End Sub
    Partial Private Sub OnTEL_NOChanged()
    End Sub
    Partial Private Sub OnCOMPANY_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnCOMPANY_TYPEChanged()
    End Sub
    Partial Private Sub OnPRICE_CLASSChanging(value As String)
    End Sub
    Partial Private Sub OnPRICE_CLASSChanged()
    End Sub
    Partial Private Sub OnCURRENCYChanging(value As String)
    End Sub
    Partial Private Sub OnCURRENCYChanged()
    End Sub
    Partial Private Sub OnCOUNTRYChanging(value As String)
    End Sub
    Partial Private Sub OnCOUNTRYChanged()
    End Sub
    Partial Private Sub OnREGION_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnREGION_CODEChanged()
    End Sub
    Partial Private Sub OnZIP_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnZIP_CODEChanged()
    End Sub
    Partial Private Sub OnCITYChanging(value As String)
    End Sub
    Partial Private Sub OnCITYChanged()
    End Sub
    Partial Private Sub OnATTENTIONChanging(value As String)
    End Sub
    Partial Private Sub OnATTENTIONChanged()
    End Sub
    Partial Private Sub OnCREDIT_TERMChanging(value As String)
    End Sub
    Partial Private Sub OnCREDIT_TERMChanged()
    End Sub
    Partial Private Sub OnSHIP_VIAChanging(value As String)
    End Sub
    Partial Private Sub OnSHIP_VIAChanged()
    End Sub
    Partial Private Sub OnURLChanging(value As String)
    End Sub
    Partial Private Sub OnURLChanged()
    End Sub
    Partial Private Sub OnCREATEDDATEChanging(value As String)
    End Sub
    Partial Private Sub OnCREATEDDATEChanged()
    End Sub
    Partial Private Sub OnCREATED_BYChanging(value As String)
    End Sub
    Partial Private Sub OnCREATED_BYChanged()
    End Sub
    Partial Private Sub OnCOMPANY_PRICE_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnCOMPANY_PRICE_TYPEChanged()
    End Sub
    Partial Private Sub OnSHIPCONDITIONChanging(value As String)
    End Sub
    Partial Private Sub OnSHIPCONDITIONChanged()
    End Sub
    Partial Private Sub OnATTRIBUTE4Changing(value As String)
    End Sub
    Partial Private Sub OnATTRIBUTE4Changed()
    End Sub
    Partial Private Sub OnSALESOFFICEChanging(value As String)
    End Sub
    Partial Private Sub OnSALESOFFICEChanged()
    End Sub
    Partial Private Sub OnSALESGROUPChanging(value As String)
    End Sub
    Partial Private Sub OnSALESGROUPChanged()
    End Sub
    Partial Private Sub OnAMT_INSUREDChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnAMT_INSUREDChanged()
    End Sub
    Partial Private Sub OnCREDIT_LIMITChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnCREDIT_LIMITChanged()
    End Sub
    Partial Private Sub OnCONTACT_EMAILChanging(value As String)
    End Sub
    Partial Private Sub OnCONTACT_EMAILChanged()
    End Sub
    Partial Private Sub OnDELETION_FLAGChanging(value As String)
    End Sub
    Partial Private Sub OnDELETION_FLAGChanged()
    End Sub
    Partial Private Sub OnCOUNTRY_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnCOUNTRY_NAMEChanged()
    End Sub
    Partial Private Sub OnSALESOFFICENAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSALESOFFICENAMEChanged()
    End Sub
    Partial Private Sub OnSAP_SALESNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSAP_SALESNAMEChanged()
    End Sub
    Partial Private Sub OnSAP_SALESCODEChanging(value As String)
    End Sub
    Partial Private Sub OnSAP_SALESCODEChanged()
    End Sub
    Partial Private Sub OnSAP_ISNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSAP_ISNAMEChanged()
    End Sub
    Partial Private Sub OnSAP_OPNAMEChanging(value As String)
    End Sub
    Partial Private Sub OnSAP_OPNAMEChanged()
    End Sub
    Partial Private Sub OnSECTORChanging(value As String)
    End Sub
    Partial Private Sub OnSECTORChanged()
    End Sub
    Partial Private Sub OnPRIMARY_BAAChanging(value As String)
    End Sub
    Partial Private Sub OnPRIMARY_BAAChanged()
    End Sub
    Partial Private Sub OnACCOUNT_ROW_IDChanging(value As String)
    End Sub
    Partial Private Sub OnACCOUNT_ROW_IDChanged()
    End Sub
    Partial Private Sub OnACCOUNT_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnACCOUNT_NAMEChanged()
    End Sub
    Partial Private Sub OnACCOUNT_STATUSChanging(value As String)
    End Sub
    Partial Private Sub OnACCOUNT_STATUSChanged()
    End Sub
    Partial Private Sub OnRBUChanging(value As String)
    End Sub
    Partial Private Sub OnRBUChanged()
    End Sub
    Partial Private Sub OnPRIMARY_SALES_EMAILChanging(value As String)
    End Sub
    Partial Private Sub OnPRIMARY_SALES_EMAILChanged()
    End Sub
    Partial Private Sub OnPRIMARY_OWNER_DIVISIONChanging(value As String)
    End Sub
    Partial Private Sub OnPRIMARY_OWNER_DIVISIONChanged()
    End Sub
    Partial Private Sub OnBUSINESS_GROUPChanging(value As String)
    End Sub
    Partial Private Sub OnBUSINESS_GROUPChanged()
    End Sub
    Partial Private Sub OnACCOUNT_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnACCOUNT_TYPEChanged()
    End Sub
    Partial Private Sub OnFACT2005Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnFACT2005Changed()
    End Sub
    Partial Private Sub OnFACT2006Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnFACT2006Changed()
    End Sub
    Partial Private Sub OnFACT2007Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnFACT2007Changed()
    End Sub
    Partial Private Sub OnFACT2008Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnFACT2008Changed()
    End Sub
    Partial Private Sub OnFACT2009Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnFACT2009Changed()
    End Sub
    Partial Private Sub OnFACT2010Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnFACT2010Changed()
    End Sub
    Partial Private Sub OnLAST_BUY_DATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnLAST_BUY_DATEChanged()
    End Sub
    Partial Private Sub OnORDERS_IN_PAST_YEARChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnORDERS_IN_PAST_YEARChanged()
    End Sub
    Partial Private Sub OnAMOUNT_IN_PAST_YEARChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnAMOUNT_IN_PAST_YEARChanged()
    End Sub
    Partial Private Sub OnORDERS_IN_PAST_HALFYEARChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnORDERS_IN_PAST_HALFYEARChanged()
    End Sub
    Partial Private Sub OnCUST_INDChanging(value As String)
    End Sub
    Partial Private Sub OnCUST_INDChanged()
    End Sub
    Partial Private Sub OnVMChanging(value As String)
    End Sub
    Partial Private Sub OnVMChanged()
    End Sub
    Partial Private Sub OnPRICE_GRPChanging(value As String)
    End Sub
    Partial Private Sub OnPRICE_GRPChanged()
    End Sub
    Partial Private Sub OnPRICE_LISTChanging(value As String)
    End Sub
    Partial Private Sub OnPRICE_LISTChanged()
    End Sub
    Partial Private Sub OnINCO1Changing(value As String)
    End Sub
    Partial Private Sub OnINCO1Changed()
    End Sub
    Partial Private Sub OnINCO2Changing(value As String)
    End Sub
    Partial Private Sub OnINCO2Changed()
    End Sub
    Partial Private Sub OnPAYMENT_TERM_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnPAYMENT_TERM_CODEChanged()
    End Sub
    Partial Private Sub OnPAYMENT_TERM_NAMEChanging(value As String)
    End Sub
    Partial Private Sub OnPAYMENT_TERM_NAMEChanged()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UNIQUE_ID", DbType:="NVarChar(100)")>  _
	Public Property UNIQUE_ID() As String
		Get
			Return Me._UNIQUE_ID
		End Get
		Set
			If (String.Equals(Me._UNIQUE_ID, value) = false) Then
				Me.OnUNIQUE_IDChanging(value)
				Me.SendPropertyChanging
				Me._UNIQUE_ID = value
				Me.SendPropertyChanged("UNIQUE_ID")
				Me.OnUNIQUE_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY_ID", DbType:="NVarChar(30)")>  _
	Public Property COMPANY_ID() As String
		Get
			Return Me._COMPANY_ID
		End Get
		Set
			If (String.Equals(Me._COMPANY_ID, value) = false) Then
				Me.OnCOMPANY_IDChanging(value)
				Me.SendPropertyChanging
				Me._COMPANY_ID = value
				Me.SendPropertyChanged("COMPANY_ID")
				Me.OnCOMPANY_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORG_ID", DbType:="NVarChar(12)")>  _
	Public Property ORG_ID() As String
		Get
			Return Me._ORG_ID
		End Get
		Set
			If (String.Equals(Me._ORG_ID, value) = false) Then
				Me.OnORG_IDChanging(value)
				Me.SendPropertyChanging
				Me._ORG_ID = value
				Me.SendPropertyChanged("ORG_ID")
				Me.OnORG_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PARENTCOMPANYID", DbType:="NVarChar(30)")>  _
	Public Property PARENTCOMPANYID() As String
		Get
			Return Me._PARENTCOMPANYID
		End Get
		Set
			If (String.Equals(Me._PARENTCOMPANYID, value) = false) Then
				Me.OnPARENTCOMPANYIDChanging(value)
				Me.SendPropertyChanging
				Me._PARENTCOMPANYID = value
				Me.SendPropertyChanged("PARENTCOMPANYID")
				Me.OnPARENTCOMPANYIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY_NAME", DbType:="NVarChar(210)")>  _
	Public Property COMPANY_NAME() As String
		Get
			Return Me._COMPANY_NAME
		End Get
		Set
			If (String.Equals(Me._COMPANY_NAME, value) = false) Then
				Me.OnCOMPANY_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._COMPANY_NAME = value
				Me.SendPropertyChanged("COMPANY_NAME")
				Me.OnCOMPANY_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ADDRESS", DbType:="NVarChar(420)")>  _
	Public Property ADDRESS() As String
		Get
			Return Me._ADDRESS
		End Get
		Set
			If (String.Equals(Me._ADDRESS, value) = false) Then
				Me.OnADDRESSChanging(value)
				Me.SendPropertyChanging
				Me._ADDRESS = value
				Me.SendPropertyChanged("ADDRESS")
				Me.OnADDRESSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FAX_NO", DbType:="NVarChar(93)")>  _
	Public Property FAX_NO() As String
		Get
			Return Me._FAX_NO
		End Get
		Set
			If (String.Equals(Me._FAX_NO, value) = false) Then
				Me.OnFAX_NOChanging(value)
				Me.SendPropertyChanging
				Me._FAX_NO = value
				Me.SendPropertyChanged("FAX_NO")
				Me.OnFAX_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEL_NO", DbType:="NVarChar(48)")>  _
	Public Property TEL_NO() As String
		Get
			Return Me._TEL_NO
		End Get
		Set
			If (String.Equals(Me._TEL_NO, value) = false) Then
				Me.OnTEL_NOChanging(value)
				Me.SendPropertyChanging
				Me._TEL_NO = value
				Me.SendPropertyChanged("TEL_NO")
				Me.OnTEL_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY_TYPE", DbType:="NVarChar(12)")>  _
	Public Property COMPANY_TYPE() As String
		Get
			Return Me._COMPANY_TYPE
		End Get
		Set
			If (String.Equals(Me._COMPANY_TYPE, value) = false) Then
				Me.OnCOMPANY_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._COMPANY_TYPE = value
				Me.SendPropertyChanged("COMPANY_TYPE")
				Me.OnCOMPANY_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRICE_CLASS", DbType:="NVarChar(24)")>  _
	Public Property PRICE_CLASS() As String
		Get
			Return Me._PRICE_CLASS
		End Get
		Set
			If (String.Equals(Me._PRICE_CLASS, value) = false) Then
				Me.OnPRICE_CLASSChanging(value)
				Me.SendPropertyChanging
				Me._PRICE_CLASS = value
				Me.SendPropertyChanged("PRICE_CLASS")
				Me.OnPRICE_CLASSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CURRENCY", DbType:="NVarChar(15)")>  _
	Public Property CURRENCY() As String
		Get
			Return Me._CURRENCY
		End Get
		Set
			If (String.Equals(Me._CURRENCY, value) = false) Then
				Me.OnCURRENCYChanging(value)
				Me.SendPropertyChanging
				Me._CURRENCY = value
				Me.SendPropertyChanged("CURRENCY")
				Me.OnCURRENCYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTRY", DbType:="NVarChar(9)")>  _
	Public Property COUNTRY() As String
		Get
			Return Me._COUNTRY
		End Get
		Set
			If (String.Equals(Me._COUNTRY, value) = false) Then
				Me.OnCOUNTRYChanging(value)
				Me.SendPropertyChanging
				Me._COUNTRY = value
				Me.SendPropertyChanged("COUNTRY")
				Me.OnCOUNTRYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_REGION_CODE", DbType:="NVarChar(9)")>  _
	Public Property REGION_CODE() As String
		Get
			Return Me._REGION_CODE
		End Get
		Set
			If (String.Equals(Me._REGION_CODE, value) = false) Then
				Me.OnREGION_CODEChanging(value)
				Me.SendPropertyChanging
				Me._REGION_CODE = value
				Me.SendPropertyChanged("REGION_CODE")
				Me.OnREGION_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ZIP_CODE", DbType:="NVarChar(30)")>  _
	Public Property ZIP_CODE() As String
		Get
			Return Me._ZIP_CODE
		End Get
		Set
			If (String.Equals(Me._ZIP_CODE, value) = false) Then
				Me.OnZIP_CODEChanging(value)
				Me.SendPropertyChanging
				Me._ZIP_CODE = value
				Me.SendPropertyChanged("ZIP_CODE")
				Me.OnZIP_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CITY", DbType:="NVarChar(120)")>  _
	Public Property CITY() As String
		Get
			Return Me._CITY
		End Get
		Set
			If (String.Equals(Me._CITY, value) = false) Then
				Me.OnCITYChanging(value)
				Me.SendPropertyChanging
				Me._CITY = value
				Me.SendPropertyChanged("CITY")
				Me.OnCITYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATTENTION", DbType:="NVarChar(120)")>  _
	Public Property ATTENTION() As String
		Get
			Return Me._ATTENTION
		End Get
		Set
			If (String.Equals(Me._ATTENTION, value) = false) Then
				Me.OnATTENTIONChanging(value)
				Me.SendPropertyChanging
				Me._ATTENTION = value
				Me.SendPropertyChanged("ATTENTION")
				Me.OnATTENTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREDIT_TERM", DbType:="NVarChar(12)")>  _
	Public Property CREDIT_TERM() As String
		Get
			Return Me._CREDIT_TERM
		End Get
		Set
			If (String.Equals(Me._CREDIT_TERM, value) = false) Then
				Me.OnCREDIT_TERMChanging(value)
				Me.SendPropertyChanging
				Me._CREDIT_TERM = value
				Me.SendPropertyChanged("CREDIT_TERM")
				Me.OnCREDIT_TERMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SHIP_VIA", DbType:="NVarChar(95)")>  _
	Public Property SHIP_VIA() As String
		Get
			Return Me._SHIP_VIA
		End Get
		Set
			If (String.Equals(Me._SHIP_VIA, value) = false) Then
				Me.OnSHIP_VIAChanging(value)
				Me.SendPropertyChanging
				Me._SHIP_VIA = value
				Me.SendPropertyChanged("SHIP_VIA")
				Me.OnSHIP_VIAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_URL", DbType:="NVarChar(396)")>  _
	Public Property URL() As String
		Get
			Return Me._URL
		End Get
		Set
			If (String.Equals(Me._URL, value) = false) Then
				Me.OnURLChanging(value)
				Me.SendPropertyChanging
				Me._URL = value
				Me.SendPropertyChanged("URL")
				Me.OnURLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATEDDATE", DbType:="NVarChar(24)")>  _
	Public Property CREATEDDATE() As String
		Get
			Return Me._CREATEDDATE
		End Get
		Set
			If (String.Equals(Me._CREATEDDATE, value) = false) Then
				Me.OnCREATEDDATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATEDDATE = value
				Me.SendPropertyChanged("CREATEDDATE")
				Me.OnCREATEDDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATED_BY", DbType:="NVarChar(36)")>  _
	Public Property CREATED_BY() As String
		Get
			Return Me._CREATED_BY
		End Get
		Set
			If (String.Equals(Me._CREATED_BY, value) = false) Then
				Me.OnCREATED_BYChanging(value)
				Me.SendPropertyChanging
				Me._CREATED_BY = value
				Me.SendPropertyChanged("CREATED_BY")
				Me.OnCREATED_BYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY_PRICE_TYPE", DbType:="NVarChar(6)")>  _
	Public Property COMPANY_PRICE_TYPE() As String
		Get
			Return Me._COMPANY_PRICE_TYPE
		End Get
		Set
			If (String.Equals(Me._COMPANY_PRICE_TYPE, value) = false) Then
				Me.OnCOMPANY_PRICE_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._COMPANY_PRICE_TYPE = value
				Me.SendPropertyChanged("COMPANY_PRICE_TYPE")
				Me.OnCOMPANY_PRICE_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SHIPCONDITION", DbType:="NVarChar(6)")>  _
	Public Property SHIPCONDITION() As String
		Get
			Return Me._SHIPCONDITION
		End Get
		Set
			If (String.Equals(Me._SHIPCONDITION, value) = false) Then
				Me.OnSHIPCONDITIONChanging(value)
				Me.SendPropertyChanging
				Me._SHIPCONDITION = value
				Me.SendPropertyChanged("SHIPCONDITION")
				Me.OnSHIPCONDITIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ATTRIBUTE4", DbType:="NVarChar(6)")>  _
	Public Property ATTRIBUTE4() As String
		Get
			Return Me._ATTRIBUTE4
		End Get
		Set
			If (String.Equals(Me._ATTRIBUTE4, value) = false) Then
				Me.OnATTRIBUTE4Changing(value)
				Me.SendPropertyChanging
				Me._ATTRIBUTE4 = value
				Me.SendPropertyChanged("ATTRIBUTE4")
				Me.OnATTRIBUTE4Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALESOFFICE", DbType:="NVarChar(12)")>  _
	Public Property SALESOFFICE() As String
		Get
			Return Me._SALESOFFICE
		End Get
		Set
			If (String.Equals(Me._SALESOFFICE, value) = false) Then
				Me.OnSALESOFFICEChanging(value)
				Me.SendPropertyChanging
				Me._SALESOFFICE = value
				Me.SendPropertyChanged("SALESOFFICE")
				Me.OnSALESOFFICEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALESGROUP", DbType:="NVarChar(9)")>  _
	Public Property SALESGROUP() As String
		Get
			Return Me._SALESGROUP
		End Get
		Set
			If (String.Equals(Me._SALESGROUP, value) = false) Then
				Me.OnSALESGROUPChanging(value)
				Me.SendPropertyChanging
				Me._SALESGROUP = value
				Me.SendPropertyChanged("SALESGROUP")
				Me.OnSALESGROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AMT_INSURED", DbType:="Decimal(38,0)")>  _
	Public Property AMT_INSURED() As System.Nullable(Of Decimal)
		Get
			Return Me._AMT_INSURED
		End Get
		Set
			If (Me._AMT_INSURED.Equals(value) = false) Then
				Me.OnAMT_INSUREDChanging(value)
				Me.SendPropertyChanging
				Me._AMT_INSURED = value
				Me.SendPropertyChanged("AMT_INSURED")
				Me.OnAMT_INSUREDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREDIT_LIMIT", DbType:="Decimal(38,0)")>  _
	Public Property CREDIT_LIMIT() As System.Nullable(Of Decimal)
		Get
			Return Me._CREDIT_LIMIT
		End Get
		Set
			If (Me._CREDIT_LIMIT.Equals(value) = false) Then
				Me.OnCREDIT_LIMITChanging(value)
				Me.SendPropertyChanging
				Me._CREDIT_LIMIT = value
				Me.SendPropertyChanged("CREDIT_LIMIT")
				Me.OnCREDIT_LIMITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONTACT_EMAIL", DbType:="NVarChar(723)")>  _
	Public Property CONTACT_EMAIL() As String
		Get
			Return Me._CONTACT_EMAIL
		End Get
		Set
			If (String.Equals(Me._CONTACT_EMAIL, value) = false) Then
				Me.OnCONTACT_EMAILChanging(value)
				Me.SendPropertyChanging
				Me._CONTACT_EMAIL = value
				Me.SendPropertyChanged("CONTACT_EMAIL")
				Me.OnCONTACT_EMAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DELETION_FLAG", DbType:="NVarChar(3)")>  _
	Public Property DELETION_FLAG() As String
		Get
			Return Me._DELETION_FLAG
		End Get
		Set
			If (String.Equals(Me._DELETION_FLAG, value) = false) Then
				Me.OnDELETION_FLAGChanging(value)
				Me.SendPropertyChanging
				Me._DELETION_FLAG = value
				Me.SendPropertyChanged("DELETION_FLAG")
				Me.OnDELETION_FLAGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTRY_NAME", DbType:="NVarChar(45)")>  _
	Public Property COUNTRY_NAME() As String
		Get
			Return Me._COUNTRY_NAME
		End Get
		Set
			If (String.Equals(Me._COUNTRY_NAME, value) = false) Then
				Me.OnCOUNTRY_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._COUNTRY_NAME = value
				Me.SendPropertyChanged("COUNTRY_NAME")
				Me.OnCOUNTRY_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALESOFFICENAME", DbType:="NVarChar(50)")>  _
	Public Property SALESOFFICENAME() As String
		Get
			Return Me._SALESOFFICENAME
		End Get
		Set
			If (String.Equals(Me._SALESOFFICENAME, value) = false) Then
				Me.OnSALESOFFICENAMEChanging(value)
				Me.SendPropertyChanging
				Me._SALESOFFICENAME = value
				Me.SendPropertyChanged("SALESOFFICENAME")
				Me.OnSALESOFFICENAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SAP_SALESNAME", DbType:="NVarChar(100)")>  _
	Public Property SAP_SALESNAME() As String
		Get
			Return Me._SAP_SALESNAME
		End Get
		Set
			If (String.Equals(Me._SAP_SALESNAME, value) = false) Then
				Me.OnSAP_SALESNAMEChanging(value)
				Me.SendPropertyChanging
				Me._SAP_SALESNAME = value
				Me.SendPropertyChanged("SAP_SALESNAME")
				Me.OnSAP_SALESNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SAP_SALESCODE", DbType:="NVarChar(20)")>  _
	Public Property SAP_SALESCODE() As String
		Get
			Return Me._SAP_SALESCODE
		End Get
		Set
			If (String.Equals(Me._SAP_SALESCODE, value) = false) Then
				Me.OnSAP_SALESCODEChanging(value)
				Me.SendPropertyChanging
				Me._SAP_SALESCODE = value
				Me.SendPropertyChanged("SAP_SALESCODE")
				Me.OnSAP_SALESCODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SAP_ISNAME", DbType:="NVarChar(100)")>  _
	Public Property SAP_ISNAME() As String
		Get
			Return Me._SAP_ISNAME
		End Get
		Set
			If (String.Equals(Me._SAP_ISNAME, value) = false) Then
				Me.OnSAP_ISNAMEChanging(value)
				Me.SendPropertyChanging
				Me._SAP_ISNAME = value
				Me.SendPropertyChanged("SAP_ISNAME")
				Me.OnSAP_ISNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SAP_OPNAME", DbType:="NVarChar(100)")>  _
	Public Property SAP_OPNAME() As String
		Get
			Return Me._SAP_OPNAME
		End Get
		Set
			If (String.Equals(Me._SAP_OPNAME, value) = false) Then
				Me.OnSAP_OPNAMEChanging(value)
				Me.SendPropertyChanging
				Me._SAP_OPNAME = value
				Me.SendPropertyChanged("SAP_OPNAME")
				Me.OnSAP_OPNAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SECTOR", DbType:="NVarChar(40)")>  _
	Public Property SECTOR() As String
		Get
			Return Me._SECTOR
		End Get
		Set
			If (String.Equals(Me._SECTOR, value) = false) Then
				Me.OnSECTORChanging(value)
				Me.SendPropertyChanging
				Me._SECTOR = value
				Me.SendPropertyChanged("SECTOR")
				Me.OnSECTORChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRIMARY_BAA", DbType:="NVarChar(200)")>  _
	Public Property PRIMARY_BAA() As String
		Get
			Return Me._PRIMARY_BAA
		End Get
		Set
			If (String.Equals(Me._PRIMARY_BAA, value) = false) Then
				Me.OnPRIMARY_BAAChanging(value)
				Me.SendPropertyChanging
				Me._PRIMARY_BAA = value
				Me.SendPropertyChanged("PRIMARY_BAA")
				Me.OnPRIMARY_BAAChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACCOUNT_ROW_ID", DbType:="NVarChar(50)")>  _
	Public Property ACCOUNT_ROW_ID() As String
		Get
			Return Me._ACCOUNT_ROW_ID
		End Get
		Set
			If (String.Equals(Me._ACCOUNT_ROW_ID, value) = false) Then
				Me.OnACCOUNT_ROW_IDChanging(value)
				Me.SendPropertyChanging
				Me._ACCOUNT_ROW_ID = value
				Me.SendPropertyChanged("ACCOUNT_ROW_ID")
				Me.OnACCOUNT_ROW_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACCOUNT_NAME", DbType:="NVarChar(100)")>  _
	Public Property ACCOUNT_NAME() As String
		Get
			Return Me._ACCOUNT_NAME
		End Get
		Set
			If (String.Equals(Me._ACCOUNT_NAME, value) = false) Then
				Me.OnACCOUNT_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._ACCOUNT_NAME = value
				Me.SendPropertyChanged("ACCOUNT_NAME")
				Me.OnACCOUNT_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACCOUNT_STATUS", DbType:="NVarChar(30)")>  _
	Public Property ACCOUNT_STATUS() As String
		Get
			Return Me._ACCOUNT_STATUS
		End Get
		Set
			If (String.Equals(Me._ACCOUNT_STATUS, value) = false) Then
				Me.OnACCOUNT_STATUSChanging(value)
				Me.SendPropertyChanging
				Me._ACCOUNT_STATUS = value
				Me.SendPropertyChanged("ACCOUNT_STATUS")
				Me.OnACCOUNT_STATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RBU", DbType:="NVarChar(150)")>  _
	Public Property RBU() As String
		Get
			Return Me._RBU
		End Get
		Set
			If (String.Equals(Me._RBU, value) = false) Then
				Me.OnRBUChanging(value)
				Me.SendPropertyChanging
				Me._RBU = value
				Me.SendPropertyChanged("RBU")
				Me.OnRBUChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRIMARY_SALES_EMAIL", DbType:="NVarChar(100)")>  _
	Public Property PRIMARY_SALES_EMAIL() As String
		Get
			Return Me._PRIMARY_SALES_EMAIL
		End Get
		Set
			If (String.Equals(Me._PRIMARY_SALES_EMAIL, value) = false) Then
				Me.OnPRIMARY_SALES_EMAILChanging(value)
				Me.SendPropertyChanging
				Me._PRIMARY_SALES_EMAIL = value
				Me.SendPropertyChanged("PRIMARY_SALES_EMAIL")
				Me.OnPRIMARY_SALES_EMAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRIMARY_OWNER_DIVISION", DbType:="NVarChar(100)")>  _
	Public Property PRIMARY_OWNER_DIVISION() As String
		Get
			Return Me._PRIMARY_OWNER_DIVISION
		End Get
		Set
			If (String.Equals(Me._PRIMARY_OWNER_DIVISION, value) = false) Then
				Me.OnPRIMARY_OWNER_DIVISIONChanging(value)
				Me.SendPropertyChanging
				Me._PRIMARY_OWNER_DIVISION = value
				Me.SendPropertyChanged("PRIMARY_OWNER_DIVISION")
				Me.OnPRIMARY_OWNER_DIVISIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BUSINESS_GROUP", DbType:="NVarChar(50)")>  _
	Public Property BUSINESS_GROUP() As String
		Get
			Return Me._BUSINESS_GROUP
		End Get
		Set
			If (String.Equals(Me._BUSINESS_GROUP, value) = false) Then
				Me.OnBUSINESS_GROUPChanging(value)
				Me.SendPropertyChanging
				Me._BUSINESS_GROUP = value
				Me.SendPropertyChanged("BUSINESS_GROUP")
				Me.OnBUSINESS_GROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACCOUNT_TYPE", DbType:="NVarChar(50)")>  _
	Public Property ACCOUNT_TYPE() As String
		Get
			Return Me._ACCOUNT_TYPE
		End Get
		Set
			If (String.Equals(Me._ACCOUNT_TYPE, value) = false) Then
				Me.OnACCOUNT_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._ACCOUNT_TYPE = value
				Me.SendPropertyChanged("ACCOUNT_TYPE")
				Me.OnACCOUNT_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FACT2005", DbType:="Money")>  _
	Public Property FACT2005() As System.Nullable(Of Decimal)
		Get
			Return Me._FACT2005
		End Get
		Set
			If (Me._FACT2005.Equals(value) = false) Then
				Me.OnFACT2005Changing(value)
				Me.SendPropertyChanging
				Me._FACT2005 = value
				Me.SendPropertyChanged("FACT2005")
				Me.OnFACT2005Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FACT2006", DbType:="Money")>  _
	Public Property FACT2006() As System.Nullable(Of Decimal)
		Get
			Return Me._FACT2006
		End Get
		Set
			If (Me._FACT2006.Equals(value) = false) Then
				Me.OnFACT2006Changing(value)
				Me.SendPropertyChanging
				Me._FACT2006 = value
				Me.SendPropertyChanged("FACT2006")
				Me.OnFACT2006Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FACT2007", DbType:="Money")>  _
	Public Property FACT2007() As System.Nullable(Of Decimal)
		Get
			Return Me._FACT2007
		End Get
		Set
			If (Me._FACT2007.Equals(value) = false) Then
				Me.OnFACT2007Changing(value)
				Me.SendPropertyChanging
				Me._FACT2007 = value
				Me.SendPropertyChanged("FACT2007")
				Me.OnFACT2007Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FACT2008", DbType:="Money")>  _
	Public Property FACT2008() As System.Nullable(Of Decimal)
		Get
			Return Me._FACT2008
		End Get
		Set
			If (Me._FACT2008.Equals(value) = false) Then
				Me.OnFACT2008Changing(value)
				Me.SendPropertyChanging
				Me._FACT2008 = value
				Me.SendPropertyChanged("FACT2008")
				Me.OnFACT2008Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FACT2009", DbType:="Money")>  _
	Public Property FACT2009() As System.Nullable(Of Decimal)
		Get
			Return Me._FACT2009
		End Get
		Set
			If (Me._FACT2009.Equals(value) = false) Then
				Me.OnFACT2009Changing(value)
				Me.SendPropertyChanging
				Me._FACT2009 = value
				Me.SendPropertyChanged("FACT2009")
				Me.OnFACT2009Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FACT2010", DbType:="Money")>  _
	Public Property FACT2010() As System.Nullable(Of Decimal)
		Get
			Return Me._FACT2010
		End Get
		Set
			If (Me._FACT2010.Equals(value) = false) Then
				Me.OnFACT2010Changing(value)
				Me.SendPropertyChanging
				Me._FACT2010 = value
				Me.SendPropertyChanged("FACT2010")
				Me.OnFACT2010Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAST_BUY_DATE", DbType:="DateTime")>  _
	Public Property LAST_BUY_DATE() As System.Nullable(Of Date)
		Get
			Return Me._LAST_BUY_DATE
		End Get
		Set
			If (Me._LAST_BUY_DATE.Equals(value) = false) Then
				Me.OnLAST_BUY_DATEChanging(value)
				Me.SendPropertyChanging
				Me._LAST_BUY_DATE = value
				Me.SendPropertyChanged("LAST_BUY_DATE")
				Me.OnLAST_BUY_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORDERS_IN_PAST_YEAR", DbType:="Int")>  _
	Public Property ORDERS_IN_PAST_YEAR() As System.Nullable(Of Integer)
		Get
			Return Me._ORDERS_IN_PAST_YEAR
		End Get
		Set
			If (Me._ORDERS_IN_PAST_YEAR.Equals(value) = false) Then
				Me.OnORDERS_IN_PAST_YEARChanging(value)
				Me.SendPropertyChanging
				Me._ORDERS_IN_PAST_YEAR = value
				Me.SendPropertyChanged("ORDERS_IN_PAST_YEAR")
				Me.OnORDERS_IN_PAST_YEARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AMOUNT_IN_PAST_YEAR", DbType:="Money")>  _
	Public Property AMOUNT_IN_PAST_YEAR() As System.Nullable(Of Decimal)
		Get
			Return Me._AMOUNT_IN_PAST_YEAR
		End Get
		Set
			If (Me._AMOUNT_IN_PAST_YEAR.Equals(value) = false) Then
				Me.OnAMOUNT_IN_PAST_YEARChanging(value)
				Me.SendPropertyChanging
				Me._AMOUNT_IN_PAST_YEAR = value
				Me.SendPropertyChanged("AMOUNT_IN_PAST_YEAR")
				Me.OnAMOUNT_IN_PAST_YEARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORDERS_IN_PAST_HALFYEAR", DbType:="Int")>  _
	Public Property ORDERS_IN_PAST_HALFYEAR() As System.Nullable(Of Integer)
		Get
			Return Me._ORDERS_IN_PAST_HALFYEAR
		End Get
		Set
			If (Me._ORDERS_IN_PAST_HALFYEAR.Equals(value) = false) Then
				Me.OnORDERS_IN_PAST_HALFYEARChanging(value)
				Me.SendPropertyChanging
				Me._ORDERS_IN_PAST_HALFYEAR = value
				Me.SendPropertyChanged("ORDERS_IN_PAST_HALFYEAR")
				Me.OnORDERS_IN_PAST_HALFYEARChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CUST_IND", DbType:="NVarChar(20)")>  _
	Public Property CUST_IND() As String
		Get
			Return Me._CUST_IND
		End Get
		Set
			If (String.Equals(Me._CUST_IND, value) = false) Then
				Me.OnCUST_INDChanging(value)
				Me.SendPropertyChanging
				Me._CUST_IND = value
				Me.SendPropertyChanged("CUST_IND")
				Me.OnCUST_INDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VM", DbType:="NVarChar(180)")>  _
	Public Property VM() As String
		Get
			Return Me._VM
		End Get
		Set
			If (String.Equals(Me._VM, value) = false) Then
				Me.OnVMChanging(value)
				Me.SendPropertyChanging
				Me._VM = value
				Me.SendPropertyChanged("VM")
				Me.OnVMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRICE_GRP", DbType:="NVarChar(10)")>  _
	Public Property PRICE_GRP() As String
		Get
			Return Me._PRICE_GRP
		End Get
		Set
			If (String.Equals(Me._PRICE_GRP, value) = false) Then
				Me.OnPRICE_GRPChanging(value)
				Me.SendPropertyChanging
				Me._PRICE_GRP = value
				Me.SendPropertyChanged("PRICE_GRP")
				Me.OnPRICE_GRPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRICE_LIST", DbType:="NVarChar(10)")>  _
	Public Property PRICE_LIST() As String
		Get
			Return Me._PRICE_LIST
		End Get
		Set
			If (String.Equals(Me._PRICE_LIST, value) = false) Then
				Me.OnPRICE_LISTChanging(value)
				Me.SendPropertyChanging
				Me._PRICE_LIST = value
				Me.SendPropertyChanged("PRICE_LIST")
				Me.OnPRICE_LISTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INCO1", DbType:="NVarChar(50)")>  _
	Public Property INCO1() As String
		Get
			Return Me._INCO1
		End Get
		Set
			If (String.Equals(Me._INCO1, value) = false) Then
				Me.OnINCO1Changing(value)
				Me.SendPropertyChanging
				Me._INCO1 = value
				Me.SendPropertyChanged("INCO1")
				Me.OnINCO1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_INCO2", DbType:="NVarChar(100)")>  _
	Public Property INCO2() As String
		Get
			Return Me._INCO2
		End Get
		Set
			If (String.Equals(Me._INCO2, value) = false) Then
				Me.OnINCO2Changing(value)
				Me.SendPropertyChanging
				Me._INCO2 = value
				Me.SendPropertyChanged("INCO2")
				Me.OnINCO2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PAYMENT_TERM_CODE", DbType:="NVarChar(50)")>  _
	Public Property PAYMENT_TERM_CODE() As String
		Get
			Return Me._PAYMENT_TERM_CODE
		End Get
		Set
			If (String.Equals(Me._PAYMENT_TERM_CODE, value) = false) Then
				Me.OnPAYMENT_TERM_CODEChanging(value)
				Me.SendPropertyChanging
				Me._PAYMENT_TERM_CODE = value
				Me.SendPropertyChanged("PAYMENT_TERM_CODE")
				Me.OnPAYMENT_TERM_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PAYMENT_TERM_NAME", DbType:="NVarChar(300)")>  _
	Public Property PAYMENT_TERM_NAME() As String
		Get
			Return Me._PAYMENT_TERM_NAME
		End Get
		Set
			If (String.Equals(Me._PAYMENT_TERM_NAME, value) = false) Then
				Me.OnPAYMENT_TERM_NAMEChanging(value)
				Me.SendPropertyChanging
				Me._PAYMENT_TERM_NAME = value
				Me.SendPropertyChanged("PAYMENT_TERM_NAME")
				Me.OnPAYMENT_TERM_NAMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.SAP_COMPANY_CONTACTS")>  _
Partial Public Class SAP_COMPANY_CONTACT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _COMPANY_ID As String
	
	Private _CONTACT_EMAIL As String
	
	Private _FLGDEFAULT As String
	
	Private _CONSNUMBER As String
	
	Private _HOME_FLAG As String
	
	Private _SMTP_SRCH As String
	
	Private _PERSNUMBER As String
	
	Private _TEL_NUMBER As String
	
	Private _TELNR_LONG As String
	
	Private _TELNR_CALL As String
	
	Private _ID As Integer
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCOMPANY_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCOMPANY_IDChanged()
    End Sub
    Partial Private Sub OnCONTACT_EMAILChanging(value As String)
    End Sub
    Partial Private Sub OnCONTACT_EMAILChanged()
    End Sub
    Partial Private Sub OnFLGDEFAULTChanging(value As String)
    End Sub
    Partial Private Sub OnFLGDEFAULTChanged()
    End Sub
    Partial Private Sub OnCONSNUMBERChanging(value As String)
    End Sub
    Partial Private Sub OnCONSNUMBERChanged()
    End Sub
    Partial Private Sub OnHOME_FLAGChanging(value As String)
    End Sub
    Partial Private Sub OnHOME_FLAGChanged()
    End Sub
    Partial Private Sub OnSMTP_SRCHChanging(value As String)
    End Sub
    Partial Private Sub OnSMTP_SRCHChanged()
    End Sub
    Partial Private Sub OnPERSNUMBERChanging(value As String)
    End Sub
    Partial Private Sub OnPERSNUMBERChanged()
    End Sub
    Partial Private Sub OnTEL_NUMBERChanging(value As String)
    End Sub
    Partial Private Sub OnTEL_NUMBERChanged()
    End Sub
    Partial Private Sub OnTELNR_LONGChanging(value As String)
    End Sub
    Partial Private Sub OnTELNR_LONGChanged()
    End Sub
    Partial Private Sub OnTELNR_CALLChanging(value As String)
    End Sub
    Partial Private Sub OnTELNR_CALLChanged()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY_ID", DbType:="NVarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property COMPANY_ID() As String
		Get
			Return Me._COMPANY_ID
		End Get
		Set
			If (String.Equals(Me._COMPANY_ID, value) = false) Then
				Me.OnCOMPANY_IDChanging(value)
				Me.SendPropertyChanging
				Me._COMPANY_ID = value
				Me.SendPropertyChanged("COMPANY_ID")
				Me.OnCOMPANY_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONTACT_EMAIL", DbType:="NVarChar(723) NOT NULL", CanBeNull:=false)>  _
	Public Property CONTACT_EMAIL() As String
		Get
			Return Me._CONTACT_EMAIL
		End Get
		Set
			If (String.Equals(Me._CONTACT_EMAIL, value) = false) Then
				Me.OnCONTACT_EMAILChanging(value)
				Me.SendPropertyChanging
				Me._CONTACT_EMAIL = value
				Me.SendPropertyChanged("CONTACT_EMAIL")
				Me.OnCONTACT_EMAILChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FLGDEFAULT", DbType:="NVarChar(3) NOT NULL", CanBeNull:=false)>  _
	Public Property FLGDEFAULT() As String
		Get
			Return Me._FLGDEFAULT
		End Get
		Set
			If (String.Equals(Me._FLGDEFAULT, value) = false) Then
				Me.OnFLGDEFAULTChanging(value)
				Me.SendPropertyChanging
				Me._FLGDEFAULT = value
				Me.SendPropertyChanged("FLGDEFAULT")
				Me.OnFLGDEFAULTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CONSNUMBER", DbType:="NVarChar(9) NOT NULL", CanBeNull:=false)>  _
	Public Property CONSNUMBER() As String
		Get
			Return Me._CONSNUMBER
		End Get
		Set
			If (String.Equals(Me._CONSNUMBER, value) = false) Then
				Me.OnCONSNUMBERChanging(value)
				Me.SendPropertyChanging
				Me._CONSNUMBER = value
				Me.SendPropertyChanged("CONSNUMBER")
				Me.OnCONSNUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HOME_FLAG", DbType:="NVarChar(3) NOT NULL", CanBeNull:=false)>  _
	Public Property HOME_FLAG() As String
		Get
			Return Me._HOME_FLAG
		End Get
		Set
			If (String.Equals(Me._HOME_FLAG, value) = false) Then
				Me.OnHOME_FLAGChanging(value)
				Me.SendPropertyChanging
				Me._HOME_FLAG = value
				Me.SendPropertyChanged("HOME_FLAG")
				Me.OnHOME_FLAGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SMTP_SRCH", DbType:="NVarChar(60) NOT NULL", CanBeNull:=false)>  _
	Public Property SMTP_SRCH() As String
		Get
			Return Me._SMTP_SRCH
		End Get
		Set
			If (String.Equals(Me._SMTP_SRCH, value) = false) Then
				Me.OnSMTP_SRCHChanging(value)
				Me.SendPropertyChanging
				Me._SMTP_SRCH = value
				Me.SendPropertyChanged("SMTP_SRCH")
				Me.OnSMTP_SRCHChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PERSNUMBER", DbType:="NVarChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property PERSNUMBER() As String
		Get
			Return Me._PERSNUMBER
		End Get
		Set
			If (String.Equals(Me._PERSNUMBER, value) = false) Then
				Me.OnPERSNUMBERChanging(value)
				Me.SendPropertyChanging
				Me._PERSNUMBER = value
				Me.SendPropertyChanged("PERSNUMBER")
				Me.OnPERSNUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TEL_NUMBER", DbType:="NVarChar(90)")>  _
	Public Property TEL_NUMBER() As String
		Get
			Return Me._TEL_NUMBER
		End Get
		Set
			If (String.Equals(Me._TEL_NUMBER, value) = false) Then
				Me.OnTEL_NUMBERChanging(value)
				Me.SendPropertyChanging
				Me._TEL_NUMBER = value
				Me.SendPropertyChanged("TEL_NUMBER")
				Me.OnTEL_NUMBERChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TELNR_LONG", DbType:="NVarChar(90)")>  _
	Public Property TELNR_LONG() As String
		Get
			Return Me._TELNR_LONG
		End Get
		Set
			If (String.Equals(Me._TELNR_LONG, value) = false) Then
				Me.OnTELNR_LONGChanging(value)
				Me.SendPropertyChanging
				Me._TELNR_LONG = value
				Me.SendPropertyChanged("TELNR_LONG")
				Me.OnTELNR_LONGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TELNR_CALL", DbType:="NVarChar(90)")>  _
	Public Property TELNR_CALL() As String
		Get
			Return Me._TELNR_CALL
		End Get
		Set
			If (String.Equals(Me._TELNR_CALL, value) = false) Then
				Me.OnTELNR_CALLChanging(value)
				Me.SendPropertyChanging
				Me._TELNR_CALL = value
				Me.SendPropertyChanged("TELNR_CALL")
				Me.OnTELNR_CALLChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.SAP_COMPANY_SALES_DEF")>  _
Partial Public Class SAP_COMPANY_SALES_DEF
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _COMPANY_ID As String
	
	Private _SALES_ORG As String
	
	Private _DISTR_CHAN As String
	
	Private _DIVISION As String
	
	Private _SALES_DISTRICT As String
	
	Private _SALES_OFFICE As String
	
	Private _SALES_GROUP As String
	
	Private _CUST_GROUP As String
	
	Private _ABC_CLASS As String
	
	Private _CURRENCY As String
	
	Private _AUTH_GROUP As String
	
	Private _ACCT_AT_CUST As String
	
	Private _EXCH_RATE_TYPE As String
	
	Private _PRICE_GROUP As String
	
	Private _CUST_PRIC_PROC As String
	
	Private _PRICE_LIST As String
	
	Private _CUST_STATS_GRP As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCOMPANY_IDChanging(value As String)
    End Sub
    Partial Private Sub OnCOMPANY_IDChanged()
    End Sub
    Partial Private Sub OnSALES_ORGChanging(value As String)
    End Sub
    Partial Private Sub OnSALES_ORGChanged()
    End Sub
    Partial Private Sub OnDISTR_CHANChanging(value As String)
    End Sub
    Partial Private Sub OnDISTR_CHANChanged()
    End Sub
    Partial Private Sub OnDIVISIONChanging(value As String)
    End Sub
    Partial Private Sub OnDIVISIONChanged()
    End Sub
    Partial Private Sub OnSALES_DISTRICTChanging(value As String)
    End Sub
    Partial Private Sub OnSALES_DISTRICTChanged()
    End Sub
    Partial Private Sub OnSALES_OFFICEChanging(value As String)
    End Sub
    Partial Private Sub OnSALES_OFFICEChanged()
    End Sub
    Partial Private Sub OnSALES_GROUPChanging(value As String)
    End Sub
    Partial Private Sub OnSALES_GROUPChanged()
    End Sub
    Partial Private Sub OnCUST_GROUPChanging(value As String)
    End Sub
    Partial Private Sub OnCUST_GROUPChanged()
    End Sub
    Partial Private Sub OnABC_CLASSChanging(value As String)
    End Sub
    Partial Private Sub OnABC_CLASSChanged()
    End Sub
    Partial Private Sub OnCURRENCYChanging(value As String)
    End Sub
    Partial Private Sub OnCURRENCYChanged()
    End Sub
    Partial Private Sub OnAUTH_GROUPChanging(value As String)
    End Sub
    Partial Private Sub OnAUTH_GROUPChanged()
    End Sub
    Partial Private Sub OnACCT_AT_CUSTChanging(value As String)
    End Sub
    Partial Private Sub OnACCT_AT_CUSTChanged()
    End Sub
    Partial Private Sub OnEXCH_RATE_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnEXCH_RATE_TYPEChanged()
    End Sub
    Partial Private Sub OnPRICE_GROUPChanging(value As String)
    End Sub
    Partial Private Sub OnPRICE_GROUPChanged()
    End Sub
    Partial Private Sub OnCUST_PRIC_PROCChanging(value As String)
    End Sub
    Partial Private Sub OnCUST_PRIC_PROCChanged()
    End Sub
    Partial Private Sub OnPRICE_LISTChanging(value As String)
    End Sub
    Partial Private Sub OnPRICE_LISTChanged()
    End Sub
    Partial Private Sub OnCUST_STATS_GRPChanging(value As String)
    End Sub
    Partial Private Sub OnCUST_STATS_GRPChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COMPANY_ID", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property COMPANY_ID() As String
		Get
			Return Me._COMPANY_ID
		End Get
		Set
			If (String.Equals(Me._COMPANY_ID, value) = false) Then
				Me.OnCOMPANY_IDChanging(value)
				Me.SendPropertyChanging
				Me._COMPANY_ID = value
				Me.SendPropertyChanged("COMPANY_ID")
				Me.OnCOMPANY_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALES_ORG", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property SALES_ORG() As String
		Get
			Return Me._SALES_ORG
		End Get
		Set
			If (String.Equals(Me._SALES_ORG, value) = false) Then
				Me.OnSALES_ORGChanging(value)
				Me.SendPropertyChanging
				Me._SALES_ORG = value
				Me.SendPropertyChanged("SALES_ORG")
				Me.OnSALES_ORGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DISTR_CHAN", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property DISTR_CHAN() As String
		Get
			Return Me._DISTR_CHAN
		End Get
		Set
			If (String.Equals(Me._DISTR_CHAN, value) = false) Then
				Me.OnDISTR_CHANChanging(value)
				Me.SendPropertyChanging
				Me._DISTR_CHAN = value
				Me.SendPropertyChanged("DISTR_CHAN")
				Me.OnDISTR_CHANChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIVISION", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property DIVISION() As String
		Get
			Return Me._DIVISION
		End Get
		Set
			If (String.Equals(Me._DIVISION, value) = false) Then
				Me.OnDIVISIONChanging(value)
				Me.SendPropertyChanging
				Me._DIVISION = value
				Me.SendPropertyChanged("DIVISION")
				Me.OnDIVISIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALES_DISTRICT", DbType:="NVarChar(20)")>  _
	Public Property SALES_DISTRICT() As String
		Get
			Return Me._SALES_DISTRICT
		End Get
		Set
			If (String.Equals(Me._SALES_DISTRICT, value) = false) Then
				Me.OnSALES_DISTRICTChanging(value)
				Me.SendPropertyChanging
				Me._SALES_DISTRICT = value
				Me.SendPropertyChanged("SALES_DISTRICT")
				Me.OnSALES_DISTRICTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALES_OFFICE", DbType:="NVarChar(20)")>  _
	Public Property SALES_OFFICE() As String
		Get
			Return Me._SALES_OFFICE
		End Get
		Set
			If (String.Equals(Me._SALES_OFFICE, value) = false) Then
				Me.OnSALES_OFFICEChanging(value)
				Me.SendPropertyChanging
				Me._SALES_OFFICE = value
				Me.SendPropertyChanged("SALES_OFFICE")
				Me.OnSALES_OFFICEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALES_GROUP", DbType:="NVarChar(20)")>  _
	Public Property SALES_GROUP() As String
		Get
			Return Me._SALES_GROUP
		End Get
		Set
			If (String.Equals(Me._SALES_GROUP, value) = false) Then
				Me.OnSALES_GROUPChanging(value)
				Me.SendPropertyChanging
				Me._SALES_GROUP = value
				Me.SendPropertyChanged("SALES_GROUP")
				Me.OnSALES_GROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CUST_GROUP", DbType:="NVarChar(20)")>  _
	Public Property CUST_GROUP() As String
		Get
			Return Me._CUST_GROUP
		End Get
		Set
			If (String.Equals(Me._CUST_GROUP, value) = false) Then
				Me.OnCUST_GROUPChanging(value)
				Me.SendPropertyChanging
				Me._CUST_GROUP = value
				Me.SendPropertyChanged("CUST_GROUP")
				Me.OnCUST_GROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ABC_CLASS", DbType:="NVarChar(20)")>  _
	Public Property ABC_CLASS() As String
		Get
			Return Me._ABC_CLASS
		End Get
		Set
			If (String.Equals(Me._ABC_CLASS, value) = false) Then
				Me.OnABC_CLASSChanging(value)
				Me.SendPropertyChanging
				Me._ABC_CLASS = value
				Me.SendPropertyChanged("ABC_CLASS")
				Me.OnABC_CLASSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CURRENCY", DbType:="NVarChar(20)")>  _
	Public Property CURRENCY() As String
		Get
			Return Me._CURRENCY
		End Get
		Set
			If (String.Equals(Me._CURRENCY, value) = false) Then
				Me.OnCURRENCYChanging(value)
				Me.SendPropertyChanging
				Me._CURRENCY = value
				Me.SendPropertyChanged("CURRENCY")
				Me.OnCURRENCYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AUTH_GROUP", DbType:="NVarChar(20)")>  _
	Public Property AUTH_GROUP() As String
		Get
			Return Me._AUTH_GROUP
		End Get
		Set
			If (String.Equals(Me._AUTH_GROUP, value) = false) Then
				Me.OnAUTH_GROUPChanging(value)
				Me.SendPropertyChanging
				Me._AUTH_GROUP = value
				Me.SendPropertyChanged("AUTH_GROUP")
				Me.OnAUTH_GROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ACCT_AT_CUST", DbType:="NVarChar(100)")>  _
	Public Property ACCT_AT_CUST() As String
		Get
			Return Me._ACCT_AT_CUST
		End Get
		Set
			If (String.Equals(Me._ACCT_AT_CUST, value) = false) Then
				Me.OnACCT_AT_CUSTChanging(value)
				Me.SendPropertyChanging
				Me._ACCT_AT_CUST = value
				Me.SendPropertyChanged("ACCT_AT_CUST")
				Me.OnACCT_AT_CUSTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EXCH_RATE_TYPE", DbType:="NVarChar(20)")>  _
	Public Property EXCH_RATE_TYPE() As String
		Get
			Return Me._EXCH_RATE_TYPE
		End Get
		Set
			If (String.Equals(Me._EXCH_RATE_TYPE, value) = false) Then
				Me.OnEXCH_RATE_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._EXCH_RATE_TYPE = value
				Me.SendPropertyChanged("EXCH_RATE_TYPE")
				Me.OnEXCH_RATE_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRICE_GROUP", DbType:="NVarChar(20)")>  _
	Public Property PRICE_GROUP() As String
		Get
			Return Me._PRICE_GROUP
		End Get
		Set
			If (String.Equals(Me._PRICE_GROUP, value) = false) Then
				Me.OnPRICE_GROUPChanging(value)
				Me.SendPropertyChanging
				Me._PRICE_GROUP = value
				Me.SendPropertyChanged("PRICE_GROUP")
				Me.OnPRICE_GROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CUST_PRIC_PROC", DbType:="NVarChar(20)")>  _
	Public Property CUST_PRIC_PROC() As String
		Get
			Return Me._CUST_PRIC_PROC
		End Get
		Set
			If (String.Equals(Me._CUST_PRIC_PROC, value) = false) Then
				Me.OnCUST_PRIC_PROCChanging(value)
				Me.SendPropertyChanging
				Me._CUST_PRIC_PROC = value
				Me.SendPropertyChanged("CUST_PRIC_PROC")
				Me.OnCUST_PRIC_PROCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRICE_LIST", DbType:="NVarChar(20)")>  _
	Public Property PRICE_LIST() As String
		Get
			Return Me._PRICE_LIST
		End Get
		Set
			If (String.Equals(Me._PRICE_LIST, value) = false) Then
				Me.OnPRICE_LISTChanging(value)
				Me.SendPropertyChanging
				Me._PRICE_LIST = value
				Me.SendPropertyChanged("PRICE_LIST")
				Me.OnPRICE_LISTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CUST_STATS_GRP", DbType:="NVarChar(20)")>  _
	Public Property CUST_STATS_GRP() As String
		Get
			Return Me._CUST_STATS_GRP
		End Get
		Set
			If (String.Equals(Me._CUST_STATS_GRP, value) = false) Then
				Me.OnCUST_STATS_GRPChanging(value)
				Me.SendPropertyChanging
				Me._CUST_STATS_GRP = value
				Me.SendPropertyChanged("CUST_STATS_GRP")
				Me.OnCUST_STATS_GRPChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
