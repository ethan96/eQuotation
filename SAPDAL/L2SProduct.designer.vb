'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="MyAdvantechGlobal")>  _
Partial Public Class L2SProductDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertSAP_PRODUCT(instance As SAP_PRODUCT)
    End Sub
  Partial Private Sub UpdateSAP_PRODUCT(instance As SAP_PRODUCT)
    End Sub
  Partial Private Sub DeleteSAP_PRODUCT(instance As SAP_PRODUCT)
    End Sub
  Partial Private Sub InsertSAP_PRODUCT_ABC(instance As SAP_PRODUCT_ABC)
    End Sub
  Partial Private Sub UpdateSAP_PRODUCT_ABC(instance As SAP_PRODUCT_ABC)
    End Sub
  Partial Private Sub DeleteSAP_PRODUCT_ABC(instance As SAP_PRODUCT_ABC)
    End Sub
  Partial Private Sub InsertSAP_PRODUCT_ORG(instance As SAP_PRODUCT_ORG)
    End Sub
  Partial Private Sub UpdateSAP_PRODUCT_ORG(instance As SAP_PRODUCT_ORG)
    End Sub
  Partial Private Sub DeleteSAP_PRODUCT_ORG(instance As SAP_PRODUCT_ORG)
    End Sub
  Partial Private Sub InsertSAP_PRODUCT_STATUS(instance As SAP_PRODUCT_STATUS)
    End Sub
  Partial Private Sub UpdateSAP_PRODUCT_STATUS(instance As SAP_PRODUCT_STATUS)
    End Sub
  Partial Private Sub DeleteSAP_PRODUCT_STATUS(instance As SAP_PRODUCT_STATUS)
    End Sub
  Partial Private Sub InsertSAP_PRODUCT_STATUS_ORDERABLE(instance As SAP_PRODUCT_STATUS_ORDERABLE)
    End Sub
  Partial Private Sub UpdateSAP_PRODUCT_STATUS_ORDERABLE(instance As SAP_PRODUCT_STATUS_ORDERABLE)
    End Sub
  Partial Private Sub DeleteSAP_PRODUCT_STATUS_ORDERABLE(instance As SAP_PRODUCT_STATUS_ORDERABLE)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.SAPDAL.My.MySettings.Default.MyAdvantechGlobalConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property SAP_PRODUCTs() As System.Data.Linq.Table(Of SAP_PRODUCT)
		Get
			Return Me.GetTable(Of SAP_PRODUCT)
		End Get
	End Property
	
	Public ReadOnly Property SAP_PRODUCT_ABCs() As System.Data.Linq.Table(Of SAP_PRODUCT_ABC)
		Get
			Return Me.GetTable(Of SAP_PRODUCT_ABC)
		End Get
	End Property
	
	Public ReadOnly Property SAP_PRODUCT_ORGs() As System.Data.Linq.Table(Of SAP_PRODUCT_ORG)
		Get
			Return Me.GetTable(Of SAP_PRODUCT_ORG)
		End Get
	End Property
	
	Public ReadOnly Property SAP_PRODUCT_STATUS() As System.Data.Linq.Table(Of SAP_PRODUCT_STATUS)
		Get
			Return Me.GetTable(Of SAP_PRODUCT_STATUS)
		End Get
	End Property
	
	Public ReadOnly Property SAP_PRODUCT_STATUS_ORDERABLEs() As System.Data.Linq.Table(Of SAP_PRODUCT_STATUS_ORDERABLE)
		Get
			Return Me.GetTable(Of SAP_PRODUCT_STATUS_ORDERABLE)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.SAP_PRODUCT")>  _
Partial Public Class SAP_PRODUCT
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _PART_NO As String
	
	Private _MODEL_NO As String
	
	Private _MATERIAL_GROUP As String
	
	Private _DIVISION As String
	
	Private _PRODUCT_HIERARCHY As String
	
	Private _PRODUCT_GROUP As String
	
	Private _PRODUCT_DIVISION As String
	
	Private _PRODUCT_LINE As String
	
	Private _GENITEMCATGRP As String
	
	Private _PRODUCT_DESC As String
	
	Private _ROHS_FLAG As String
	
	Private _STATUS As String
	
	Private _EGROUP As String
	
	Private _EDIVISION As String
	
	Private _NET_WEIGHT As System.Nullable(Of Double)
	
	Private _GROSS_WEIGHT As System.Nullable(Of Double)
	
	Private _WEIGHT_UNIT As String
	
	Private _VOLUME As System.Nullable(Of Double)
	
	Private _VOLUME_UNIT As String
	
	Private _CREATE_DATE As String
	
	Private _LAST_UPD_DATE As String
	
	Private _PRODUCT_TYPE As String
	
	Private _GIP_CODE As String
	
	Private _SIZE_DIMENSIONS As String
	
	Private _SOURCE_LOCATION As String
	
	Private _PRODUCT_FAMILY As String
	
	Private _PLM_STATUS As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPART_NOChanging(value As String)
    End Sub
    Partial Private Sub OnPART_NOChanged()
    End Sub
    Partial Private Sub OnMODEL_NOChanging(value As String)
    End Sub
    Partial Private Sub OnMODEL_NOChanged()
    End Sub
    Partial Private Sub OnMATERIAL_GROUPChanging(value As String)
    End Sub
    Partial Private Sub OnMATERIAL_GROUPChanged()
    End Sub
    Partial Private Sub OnDIVISIONChanging(value As String)
    End Sub
    Partial Private Sub OnDIVISIONChanged()
    End Sub
    Partial Private Sub OnPRODUCT_HIERARCHYChanging(value As String)
    End Sub
    Partial Private Sub OnPRODUCT_HIERARCHYChanged()
    End Sub
    Partial Private Sub OnPRODUCT_GROUPChanging(value As String)
    End Sub
    Partial Private Sub OnPRODUCT_GROUPChanged()
    End Sub
    Partial Private Sub OnPRODUCT_DIVISIONChanging(value As String)
    End Sub
    Partial Private Sub OnPRODUCT_DIVISIONChanged()
    End Sub
    Partial Private Sub OnPRODUCT_LINEChanging(value As String)
    End Sub
    Partial Private Sub OnPRODUCT_LINEChanged()
    End Sub
    Partial Private Sub OnGENITEMCATGRPChanging(value As String)
    End Sub
    Partial Private Sub OnGENITEMCATGRPChanged()
    End Sub
    Partial Private Sub OnPRODUCT_DESCChanging(value As String)
    End Sub
    Partial Private Sub OnPRODUCT_DESCChanged()
    End Sub
    Partial Private Sub OnROHS_FLAGChanging(value As String)
    End Sub
    Partial Private Sub OnROHS_FLAGChanged()
    End Sub
    Partial Private Sub OnSTATUSChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUSChanged()
    End Sub
    Partial Private Sub OnEGROUPChanging(value As String)
    End Sub
    Partial Private Sub OnEGROUPChanged()
    End Sub
    Partial Private Sub OnEDIVISIONChanging(value As String)
    End Sub
    Partial Private Sub OnEDIVISIONChanged()
    End Sub
    Partial Private Sub OnNET_WEIGHTChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnNET_WEIGHTChanged()
    End Sub
    Partial Private Sub OnGROSS_WEIGHTChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnGROSS_WEIGHTChanged()
    End Sub
    Partial Private Sub OnWEIGHT_UNITChanging(value As String)
    End Sub
    Partial Private Sub OnWEIGHT_UNITChanged()
    End Sub
    Partial Private Sub OnVOLUMEChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnVOLUMEChanged()
    End Sub
    Partial Private Sub OnVOLUME_UNITChanging(value As String)
    End Sub
    Partial Private Sub OnVOLUME_UNITChanged()
    End Sub
    Partial Private Sub OnCREATE_DATEChanging(value As String)
    End Sub
    Partial Private Sub OnCREATE_DATEChanged()
    End Sub
    Partial Private Sub OnLAST_UPD_DATEChanging(value As String)
    End Sub
    Partial Private Sub OnLAST_UPD_DATEChanged()
    End Sub
    Partial Private Sub OnPRODUCT_TYPEChanging(value As String)
    End Sub
    Partial Private Sub OnPRODUCT_TYPEChanged()
    End Sub
    Partial Private Sub OnGIP_CODEChanging(value As String)
    End Sub
    Partial Private Sub OnGIP_CODEChanged()
    End Sub
    Partial Private Sub OnSIZE_DIMENSIONSChanging(value As String)
    End Sub
    Partial Private Sub OnSIZE_DIMENSIONSChanged()
    End Sub
    Partial Private Sub OnSOURCE_LOCATIONChanging(value As String)
    End Sub
    Partial Private Sub OnSOURCE_LOCATIONChanged()
    End Sub
    Partial Private Sub OnPRODUCT_FAMILYChanging(value As String)
    End Sub
    Partial Private Sub OnPRODUCT_FAMILYChanged()
    End Sub
    Partial Private Sub OnPLM_STATUSChanging(value As String)
    End Sub
    Partial Private Sub OnPLM_STATUSChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PART_NO", DbType:="NVarChar(54) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property PART_NO() As String
		Get
			Return Me._PART_NO
		End Get
		Set
			If (String.Equals(Me._PART_NO, value) = false) Then
				Me.OnPART_NOChanging(value)
				Me.SendPropertyChanging
				Me._PART_NO = value
				Me.SendPropertyChanged("PART_NO")
				Me.OnPART_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MODEL_NO", DbType:="NVarChar(54) NOT NULL", CanBeNull:=false)>  _
	Public Property MODEL_NO() As String
		Get
			Return Me._MODEL_NO
		End Get
		Set
			If (String.Equals(Me._MODEL_NO, value) = false) Then
				Me.OnMODEL_NOChanging(value)
				Me.SendPropertyChanging
				Me._MODEL_NO = value
				Me.SendPropertyChanged("MODEL_NO")
				Me.OnMODEL_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MATERIAL_GROUP", DbType:="NVarChar(27) NOT NULL", CanBeNull:=false)>  _
	Public Property MATERIAL_GROUP() As String
		Get
			Return Me._MATERIAL_GROUP
		End Get
		Set
			If (String.Equals(Me._MATERIAL_GROUP, value) = false) Then
				Me.OnMATERIAL_GROUPChanging(value)
				Me.SendPropertyChanging
				Me._MATERIAL_GROUP = value
				Me.SendPropertyChanged("MATERIAL_GROUP")
				Me.OnMATERIAL_GROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIVISION", DbType:="NVarChar(6) NOT NULL", CanBeNull:=false)>  _
	Public Property DIVISION() As String
		Get
			Return Me._DIVISION
		End Get
		Set
			If (String.Equals(Me._DIVISION, value) = false) Then
				Me.OnDIVISIONChanging(value)
				Me.SendPropertyChanging
				Me._DIVISION = value
				Me.SendPropertyChanged("DIVISION")
				Me.OnDIVISIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCT_HIERARCHY", DbType:="NVarChar(54) NOT NULL", CanBeNull:=false)>  _
	Public Property PRODUCT_HIERARCHY() As String
		Get
			Return Me._PRODUCT_HIERARCHY
		End Get
		Set
			If (String.Equals(Me._PRODUCT_HIERARCHY, value) = false) Then
				Me.OnPRODUCT_HIERARCHYChanging(value)
				Me.SendPropertyChanging
				Me._PRODUCT_HIERARCHY = value
				Me.SendPropertyChanged("PRODUCT_HIERARCHY")
				Me.OnPRODUCT_HIERARCHYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCT_GROUP", DbType:="NVarChar(54) NOT NULL", CanBeNull:=false)>  _
	Public Property PRODUCT_GROUP() As String
		Get
			Return Me._PRODUCT_GROUP
		End Get
		Set
			If (String.Equals(Me._PRODUCT_GROUP, value) = false) Then
				Me.OnPRODUCT_GROUPChanging(value)
				Me.SendPropertyChanging
				Me._PRODUCT_GROUP = value
				Me.SendPropertyChanged("PRODUCT_GROUP")
				Me.OnPRODUCT_GROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCT_DIVISION", DbType:="NVarChar(54) NOT NULL", CanBeNull:=false)>  _
	Public Property PRODUCT_DIVISION() As String
		Get
			Return Me._PRODUCT_DIVISION
		End Get
		Set
			If (String.Equals(Me._PRODUCT_DIVISION, value) = false) Then
				Me.OnPRODUCT_DIVISIONChanging(value)
				Me.SendPropertyChanging
				Me._PRODUCT_DIVISION = value
				Me.SendPropertyChanged("PRODUCT_DIVISION")
				Me.OnPRODUCT_DIVISIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCT_LINE", DbType:="NVarChar(54) NOT NULL", CanBeNull:=false)>  _
	Public Property PRODUCT_LINE() As String
		Get
			Return Me._PRODUCT_LINE
		End Get
		Set
			If (String.Equals(Me._PRODUCT_LINE, value) = false) Then
				Me.OnPRODUCT_LINEChanging(value)
				Me.SendPropertyChanging
				Me._PRODUCT_LINE = value
				Me.SendPropertyChanged("PRODUCT_LINE")
				Me.OnPRODUCT_LINEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GENITEMCATGRP", DbType:="NVarChar(12) NOT NULL", CanBeNull:=false)>  _
	Public Property GENITEMCATGRP() As String
		Get
			Return Me._GENITEMCATGRP
		End Get
		Set
			If (String.Equals(Me._GENITEMCATGRP, value) = false) Then
				Me.OnGENITEMCATGRPChanging(value)
				Me.SendPropertyChanging
				Me._GENITEMCATGRP = value
				Me.SendPropertyChanged("GENITEMCATGRP")
				Me.OnGENITEMCATGRPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCT_DESC", DbType:="NVarChar(120)")>  _
	Public Property PRODUCT_DESC() As String
		Get
			Return Me._PRODUCT_DESC
		End Get
		Set
			If (String.Equals(Me._PRODUCT_DESC, value) = false) Then
				Me.OnPRODUCT_DESCChanging(value)
				Me.SendPropertyChanging
				Me._PRODUCT_DESC = value
				Me.SendPropertyChanged("PRODUCT_DESC")
				Me.OnPRODUCT_DESCChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ROHS_FLAG", DbType:="NVarChar(12) NOT NULL", CanBeNull:=false)>  _
	Public Property ROHS_FLAG() As String
		Get
			Return Me._ROHS_FLAG
		End Get
		Set
			If (String.Equals(Me._ROHS_FLAG, value) = false) Then
				Me.OnROHS_FLAGChanging(value)
				Me.SendPropertyChanging
				Me._ROHS_FLAG = value
				Me.SendPropertyChanged("ROHS_FLAG")
				Me.OnROHS_FLAGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS", DbType:="NVarChar(50)")>  _
	Public Property STATUS() As String
		Get
			Return Me._STATUS
		End Get
		Set
			If (String.Equals(Me._STATUS, value) = false) Then
				Me.OnSTATUSChanging(value)
				Me.SendPropertyChanging
				Me._STATUS = value
				Me.SendPropertyChanged("STATUS")
				Me.OnSTATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EGROUP", DbType:="NVarChar(50)")>  _
	Public Property EGROUP() As String
		Get
			Return Me._EGROUP
		End Get
		Set
			If (String.Equals(Me._EGROUP, value) = false) Then
				Me.OnEGROUPChanging(value)
				Me.SendPropertyChanging
				Me._EGROUP = value
				Me.SendPropertyChanged("EGROUP")
				Me.OnEGROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EDIVISION", DbType:="NVarChar(50)")>  _
	Public Property EDIVISION() As String
		Get
			Return Me._EDIVISION
		End Get
		Set
			If (String.Equals(Me._EDIVISION, value) = false) Then
				Me.OnEDIVISIONChanging(value)
				Me.SendPropertyChanging
				Me._EDIVISION = value
				Me.SendPropertyChanged("EDIVISION")
				Me.OnEDIVISIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NET_WEIGHT", DbType:="Float")>  _
	Public Property NET_WEIGHT() As System.Nullable(Of Double)
		Get
			Return Me._NET_WEIGHT
		End Get
		Set
			If (Me._NET_WEIGHT.Equals(value) = false) Then
				Me.OnNET_WEIGHTChanging(value)
				Me.SendPropertyChanging
				Me._NET_WEIGHT = value
				Me.SendPropertyChanged("NET_WEIGHT")
				Me.OnNET_WEIGHTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GROSS_WEIGHT", DbType:="Float")>  _
	Public Property GROSS_WEIGHT() As System.Nullable(Of Double)
		Get
			Return Me._GROSS_WEIGHT
		End Get
		Set
			If (Me._GROSS_WEIGHT.Equals(value) = false) Then
				Me.OnGROSS_WEIGHTChanging(value)
				Me.SendPropertyChanging
				Me._GROSS_WEIGHT = value
				Me.SendPropertyChanged("GROSS_WEIGHT")
				Me.OnGROSS_WEIGHTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WEIGHT_UNIT", DbType:="NVarChar(50)")>  _
	Public Property WEIGHT_UNIT() As String
		Get
			Return Me._WEIGHT_UNIT
		End Get
		Set
			If (String.Equals(Me._WEIGHT_UNIT, value) = false) Then
				Me.OnWEIGHT_UNITChanging(value)
				Me.SendPropertyChanging
				Me._WEIGHT_UNIT = value
				Me.SendPropertyChanged("WEIGHT_UNIT")
				Me.OnWEIGHT_UNITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VOLUME", DbType:="Float")>  _
	Public Property VOLUME() As System.Nullable(Of Double)
		Get
			Return Me._VOLUME
		End Get
		Set
			If (Me._VOLUME.Equals(value) = false) Then
				Me.OnVOLUMEChanging(value)
				Me.SendPropertyChanging
				Me._VOLUME = value
				Me.SendPropertyChanged("VOLUME")
				Me.OnVOLUMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VOLUME_UNIT", DbType:="NVarChar(50)")>  _
	Public Property VOLUME_UNIT() As String
		Get
			Return Me._VOLUME_UNIT
		End Get
		Set
			If (String.Equals(Me._VOLUME_UNIT, value) = false) Then
				Me.OnVOLUME_UNITChanging(value)
				Me.SendPropertyChanging
				Me._VOLUME_UNIT = value
				Me.SendPropertyChanged("VOLUME_UNIT")
				Me.OnVOLUME_UNITChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CREATE_DATE", DbType:="NVarChar(24)")>  _
	Public Property CREATE_DATE() As String
		Get
			Return Me._CREATE_DATE
		End Get
		Set
			If (String.Equals(Me._CREATE_DATE, value) = false) Then
				Me.OnCREATE_DATEChanging(value)
				Me.SendPropertyChanging
				Me._CREATE_DATE = value
				Me.SendPropertyChanged("CREATE_DATE")
				Me.OnCREATE_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAST_UPD_DATE", DbType:="NVarChar(24)")>  _
	Public Property LAST_UPD_DATE() As String
		Get
			Return Me._LAST_UPD_DATE
		End Get
		Set
			If (String.Equals(Me._LAST_UPD_DATE, value) = false) Then
				Me.OnLAST_UPD_DATEChanging(value)
				Me.SendPropertyChanging
				Me._LAST_UPD_DATE = value
				Me.SendPropertyChanged("LAST_UPD_DATE")
				Me.OnLAST_UPD_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCT_TYPE", DbType:="NVarChar(30)")>  _
	Public Property PRODUCT_TYPE() As String
		Get
			Return Me._PRODUCT_TYPE
		End Get
		Set
			If (String.Equals(Me._PRODUCT_TYPE, value) = false) Then
				Me.OnPRODUCT_TYPEChanging(value)
				Me.SendPropertyChanging
				Me._PRODUCT_TYPE = value
				Me.SendPropertyChanged("PRODUCT_TYPE")
				Me.OnPRODUCT_TYPEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GIP_CODE", DbType:="NVarChar(20)")>  _
	Public Property GIP_CODE() As String
		Get
			Return Me._GIP_CODE
		End Get
		Set
			If (String.Equals(Me._GIP_CODE, value) = false) Then
				Me.OnGIP_CODEChanging(value)
				Me.SendPropertyChanging
				Me._GIP_CODE = value
				Me.SendPropertyChanged("GIP_CODE")
				Me.OnGIP_CODEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SIZE_DIMENSIONS", DbType:="NVarChar(96)")>  _
	Public Property SIZE_DIMENSIONS() As String
		Get
			Return Me._SIZE_DIMENSIONS
		End Get
		Set
			If (String.Equals(Me._SIZE_DIMENSIONS, value) = false) Then
				Me.OnSIZE_DIMENSIONSChanging(value)
				Me.SendPropertyChanging
				Me._SIZE_DIMENSIONS = value
				Me.SendPropertyChanged("SIZE_DIMENSIONS")
				Me.OnSIZE_DIMENSIONSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SOURCE_LOCATION", DbType:="NVarChar(20)")>  _
	Public Property SOURCE_LOCATION() As String
		Get
			Return Me._SOURCE_LOCATION
		End Get
		Set
			If (String.Equals(Me._SOURCE_LOCATION, value) = false) Then
				Me.OnSOURCE_LOCATIONChanging(value)
				Me.SendPropertyChanging
				Me._SOURCE_LOCATION = value
				Me.SendPropertyChanged("SOURCE_LOCATION")
				Me.OnSOURCE_LOCATIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCT_FAMILY", DbType:="NVarChar(54)")>  _
	Public Property PRODUCT_FAMILY() As String
		Get
			Return Me._PRODUCT_FAMILY
		End Get
		Set
			If (String.Equals(Me._PRODUCT_FAMILY, value) = false) Then
				Me.OnPRODUCT_FAMILYChanging(value)
				Me.SendPropertyChanging
				Me._PRODUCT_FAMILY = value
				Me.SendPropertyChanged("PRODUCT_FAMILY")
				Me.OnPRODUCT_FAMILYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PLM_STATUS", DbType:="NVarChar(1)")>  _
	Public Property PLM_STATUS() As String
		Get
			Return Me._PLM_STATUS
		End Get
		Set
			If (String.Equals(Me._PLM_STATUS, value) = false) Then
				Me.OnPLM_STATUSChanging(value)
				Me.SendPropertyChanging
				Me._PLM_STATUS = value
				Me.SendPropertyChanged("PLM_STATUS")
				Me.OnPLM_STATUSChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.SAP_PRODUCT_ABC")>  _
Partial Public Class SAP_PRODUCT_ABC
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _PART_NO As String
	
	Private _PLANT As String
	
	Private _ABC_INDICATOR As String
	
	Private _PLANNED_DEL_TIME As System.Nullable(Of Integer)
	
	Private _GP_PROCESSING_TIME As System.Nullable(Of Integer)
	
	Private _IN_HOUSE_PRODUCTION As System.Nullable(Of Integer)
	
	Private _ProfitCenter As String
	
	Private _Ctrl_Code As String
	
	Private _safety_stock As System.Nullable(Of Double)
	
	Private _min_safety_stock As System.Nullable(Of Double)
	
	Private _service_level As System.Nullable(Of Decimal)
	
	Private _MIN_LOT_SIZE As System.Nullable(Of Decimal)
	
	Private _ID As Long
	
	Private _FREIGHT_METHOD As String
	
	Private _COUNTRY_ORIGIN As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPART_NOChanging(value As String)
    End Sub
    Partial Private Sub OnPART_NOChanged()
    End Sub
    Partial Private Sub OnPLANTChanging(value As String)
    End Sub
    Partial Private Sub OnPLANTChanged()
    End Sub
    Partial Private Sub OnABC_INDICATORChanging(value As String)
    End Sub
    Partial Private Sub OnABC_INDICATORChanged()
    End Sub
    Partial Private Sub OnPLANNED_DEL_TIMEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPLANNED_DEL_TIMEChanged()
    End Sub
    Partial Private Sub OnGP_PROCESSING_TIMEChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnGP_PROCESSING_TIMEChanged()
    End Sub
    Partial Private Sub OnIN_HOUSE_PRODUCTIONChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIN_HOUSE_PRODUCTIONChanged()
    End Sub
    Partial Private Sub OnProfitCenterChanging(value As String)
    End Sub
    Partial Private Sub OnProfitCenterChanged()
    End Sub
    Partial Private Sub OnCtrl_CodeChanging(value As String)
    End Sub
    Partial Private Sub OnCtrl_CodeChanged()
    End Sub
    Partial Private Sub Onsafety_stockChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub Onsafety_stockChanged()
    End Sub
    Partial Private Sub Onmin_safety_stockChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub Onmin_safety_stockChanged()
    End Sub
    Partial Private Sub Onservice_levelChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onservice_levelChanged()
    End Sub
    Partial Private Sub OnMIN_LOT_SIZEChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnMIN_LOT_SIZEChanged()
    End Sub
    Partial Private Sub OnIDChanging(value As Long)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnFREIGHT_METHODChanging(value As String)
    End Sub
    Partial Private Sub OnFREIGHT_METHODChanged()
    End Sub
    Partial Private Sub OnCOUNTRY_ORIGINChanging(value As String)
    End Sub
    Partial Private Sub OnCOUNTRY_ORIGINChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PART_NO", DbType:="NVarChar(54)")>  _
	Public Property PART_NO() As String
		Get
			Return Me._PART_NO
		End Get
		Set
			If (String.Equals(Me._PART_NO, value) = false) Then
				Me.OnPART_NOChanging(value)
				Me.SendPropertyChanging
				Me._PART_NO = value
				Me.SendPropertyChanged("PART_NO")
				Me.OnPART_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PLANT", DbType:="NVarChar(12)")>  _
	Public Property PLANT() As String
		Get
			Return Me._PLANT
		End Get
		Set
			If (String.Equals(Me._PLANT, value) = false) Then
				Me.OnPLANTChanging(value)
				Me.SendPropertyChanging
				Me._PLANT = value
				Me.SendPropertyChanged("PLANT")
				Me.OnPLANTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ABC_INDICATOR", DbType:="NVarChar(6)")>  _
	Public Property ABC_INDICATOR() As String
		Get
			Return Me._ABC_INDICATOR
		End Get
		Set
			If (String.Equals(Me._ABC_INDICATOR, value) = false) Then
				Me.OnABC_INDICATORChanging(value)
				Me.SendPropertyChanging
				Me._ABC_INDICATOR = value
				Me.SendPropertyChanged("ABC_INDICATOR")
				Me.OnABC_INDICATORChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PLANNED_DEL_TIME", DbType:="Int")>  _
	Public Property PLANNED_DEL_TIME() As System.Nullable(Of Integer)
		Get
			Return Me._PLANNED_DEL_TIME
		End Get
		Set
			If (Me._PLANNED_DEL_TIME.Equals(value) = false) Then
				Me.OnPLANNED_DEL_TIMEChanging(value)
				Me.SendPropertyChanging
				Me._PLANNED_DEL_TIME = value
				Me.SendPropertyChanged("PLANNED_DEL_TIME")
				Me.OnPLANNED_DEL_TIMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GP_PROCESSING_TIME", DbType:="Int")>  _
	Public Property GP_PROCESSING_TIME() As System.Nullable(Of Integer)
		Get
			Return Me._GP_PROCESSING_TIME
		End Get
		Set
			If (Me._GP_PROCESSING_TIME.Equals(value) = false) Then
				Me.OnGP_PROCESSING_TIMEChanging(value)
				Me.SendPropertyChanging
				Me._GP_PROCESSING_TIME = value
				Me.SendPropertyChanged("GP_PROCESSING_TIME")
				Me.OnGP_PROCESSING_TIMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IN_HOUSE_PRODUCTION", DbType:="Int")>  _
	Public Property IN_HOUSE_PRODUCTION() As System.Nullable(Of Integer)
		Get
			Return Me._IN_HOUSE_PRODUCTION
		End Get
		Set
			If (Me._IN_HOUSE_PRODUCTION.Equals(value) = false) Then
				Me.OnIN_HOUSE_PRODUCTIONChanging(value)
				Me.SendPropertyChanging
				Me._IN_HOUSE_PRODUCTION = value
				Me.SendPropertyChanged("IN_HOUSE_PRODUCTION")
				Me.OnIN_HOUSE_PRODUCTIONChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProfitCenter", DbType:="NVarChar(30)")>  _
	Public Property ProfitCenter() As String
		Get
			Return Me._ProfitCenter
		End Get
		Set
			If (String.Equals(Me._ProfitCenter, value) = false) Then
				Me.OnProfitCenterChanging(value)
				Me.SendPropertyChanging
				Me._ProfitCenter = value
				Me.SendPropertyChanged("ProfitCenter")
				Me.OnProfitCenterChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ctrl_Code", DbType:="NVarChar(50)")>  _
	Public Property Ctrl_Code() As String
		Get
			Return Me._Ctrl_Code
		End Get
		Set
			If (String.Equals(Me._Ctrl_Code, value) = false) Then
				Me.OnCtrl_CodeChanging(value)
				Me.SendPropertyChanging
				Me._Ctrl_Code = value
				Me.SendPropertyChanged("Ctrl_Code")
				Me.OnCtrl_CodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_safety_stock", DbType:="Float")>  _
	Public Property safety_stock() As System.Nullable(Of Double)
		Get
			Return Me._safety_stock
		End Get
		Set
			If (Me._safety_stock.Equals(value) = false) Then
				Me.Onsafety_stockChanging(value)
				Me.SendPropertyChanging
				Me._safety_stock = value
				Me.SendPropertyChanged("safety_stock")
				Me.Onsafety_stockChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_min_safety_stock", DbType:="Float")>  _
	Public Property min_safety_stock() As System.Nullable(Of Double)
		Get
			Return Me._min_safety_stock
		End Get
		Set
			If (Me._min_safety_stock.Equals(value) = false) Then
				Me.Onmin_safety_stockChanging(value)
				Me.SendPropertyChanging
				Me._min_safety_stock = value
				Me.SendPropertyChanged("min_safety_stock")
				Me.Onmin_safety_stockChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_service_level", DbType:="Decimal(8,1)")>  _
	Public Property service_level() As System.Nullable(Of Decimal)
		Get
			Return Me._service_level
		End Get
		Set
			If (Me._service_level.Equals(value) = false) Then
				Me.Onservice_levelChanging(value)
				Me.SendPropertyChanging
				Me._service_level = value
				Me.SendPropertyChanged("service_level")
				Me.Onservice_levelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MIN_LOT_SIZE", DbType:="Decimal(10,0)")>  _
	Public Property MIN_LOT_SIZE() As System.Nullable(Of Decimal)
		Get
			Return Me._MIN_LOT_SIZE
		End Get
		Set
			If (Me._MIN_LOT_SIZE.Equals(value) = false) Then
				Me.OnMIN_LOT_SIZEChanging(value)
				Me.SendPropertyChanging
				Me._MIN_LOT_SIZE = value
				Me.SendPropertyChanged("MIN_LOT_SIZE")
				Me.OnMIN_LOT_SIZEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Long
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FREIGHT_METHOD", DbType:="NVarChar(50)")>  _
	Public Property FREIGHT_METHOD() As String
		Get
			Return Me._FREIGHT_METHOD
		End Get
		Set
			If (String.Equals(Me._FREIGHT_METHOD, value) = false) Then
				Me.OnFREIGHT_METHODChanging(value)
				Me.SendPropertyChanging
				Me._FREIGHT_METHOD = value
				Me.SendPropertyChanged("FREIGHT_METHOD")
				Me.OnFREIGHT_METHODChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_COUNTRY_ORIGIN", DbType:="NVarChar(50)")>  _
	Public Property COUNTRY_ORIGIN() As String
		Get
			Return Me._COUNTRY_ORIGIN
		End Get
		Set
			If (String.Equals(Me._COUNTRY_ORIGIN, value) = false) Then
				Me.OnCOUNTRY_ORIGINChanging(value)
				Me.SendPropertyChanging
				Me._COUNTRY_ORIGIN = value
				Me.SendPropertyChanged("COUNTRY_ORIGIN")
				Me.OnCOUNTRY_ORIGINChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.SAP_PRODUCT_ORG")>  _
Partial Public Class SAP_PRODUCT_ORG
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _PART_NO As String
	
	Private _ORG_ID As String
	
	Private _DIST_CHANNEL As String
	
	Private _STATUS As String
	
	Private _B2BONLINE As String
	
	Private _DELIVERYPLANT As String
	
	Private _PRICINGGROUP As String
	
	Private _LAST_UPD_DATE As String
	
	Private _MIN_ORD_QTY As System.Nullable(Of Integer)
	
	Private _MIN_DLV_QTY As System.Nullable(Of Integer)
	
	Private _ID As Long
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPART_NOChanging(value As String)
    End Sub
    Partial Private Sub OnPART_NOChanged()
    End Sub
    Partial Private Sub OnORG_IDChanging(value As String)
    End Sub
    Partial Private Sub OnORG_IDChanged()
    End Sub
    Partial Private Sub OnDIST_CHANNELChanging(value As String)
    End Sub
    Partial Private Sub OnDIST_CHANNELChanged()
    End Sub
    Partial Private Sub OnSTATUSChanging(value As String)
    End Sub
    Partial Private Sub OnSTATUSChanged()
    End Sub
    Partial Private Sub OnB2BONLINEChanging(value As String)
    End Sub
    Partial Private Sub OnB2BONLINEChanged()
    End Sub
    Partial Private Sub OnDELIVERYPLANTChanging(value As String)
    End Sub
    Partial Private Sub OnDELIVERYPLANTChanged()
    End Sub
    Partial Private Sub OnPRICINGGROUPChanging(value As String)
    End Sub
    Partial Private Sub OnPRICINGGROUPChanged()
    End Sub
    Partial Private Sub OnLAST_UPD_DATEChanging(value As String)
    End Sub
    Partial Private Sub OnLAST_UPD_DATEChanged()
    End Sub
    Partial Private Sub OnMIN_ORD_QTYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMIN_ORD_QTYChanged()
    End Sub
    Partial Private Sub OnMIN_DLV_QTYChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnMIN_DLV_QTYChanged()
    End Sub
    Partial Private Sub OnIDChanging(value As Long)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PART_NO", DbType:="NVarChar(54)")>  _
	Public Property PART_NO() As String
		Get
			Return Me._PART_NO
		End Get
		Set
			If (String.Equals(Me._PART_NO, value) = false) Then
				Me.OnPART_NOChanging(value)
				Me.SendPropertyChanging
				Me._PART_NO = value
				Me.SendPropertyChanged("PART_NO")
				Me.OnPART_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ORG_ID", DbType:="NVarChar(12)")>  _
	Public Property ORG_ID() As String
		Get
			Return Me._ORG_ID
		End Get
		Set
			If (String.Equals(Me._ORG_ID, value) = false) Then
				Me.OnORG_IDChanging(value)
				Me.SendPropertyChanging
				Me._ORG_ID = value
				Me.SendPropertyChanged("ORG_ID")
				Me.OnORG_IDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIST_CHANNEL", DbType:="NVarChar(6)")>  _
	Public Property DIST_CHANNEL() As String
		Get
			Return Me._DIST_CHANNEL
		End Get
		Set
			If (String.Equals(Me._DIST_CHANNEL, value) = false) Then
				Me.OnDIST_CHANNELChanging(value)
				Me.SendPropertyChanging
				Me._DIST_CHANNEL = value
				Me.SendPropertyChanged("DIST_CHANNEL")
				Me.OnDIST_CHANNELChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STATUS", DbType:="NVarChar(6)")>  _
	Public Property STATUS() As String
		Get
			Return Me._STATUS
		End Get
		Set
			If (String.Equals(Me._STATUS, value) = false) Then
				Me.OnSTATUSChanging(value)
				Me.SendPropertyChanging
				Me._STATUS = value
				Me.SendPropertyChanged("STATUS")
				Me.OnSTATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_B2BONLINE", DbType:="NVarChar(3)")>  _
	Public Property B2BONLINE() As String
		Get
			Return Me._B2BONLINE
		End Get
		Set
			If (String.Equals(Me._B2BONLINE, value) = false) Then
				Me.OnB2BONLINEChanging(value)
				Me.SendPropertyChanging
				Me._B2BONLINE = value
				Me.SendPropertyChanged("B2BONLINE")
				Me.OnB2BONLINEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DELIVERYPLANT", DbType:="NVarChar(12)")>  _
	Public Property DELIVERYPLANT() As String
		Get
			Return Me._DELIVERYPLANT
		End Get
		Set
			If (String.Equals(Me._DELIVERYPLANT, value) = false) Then
				Me.OnDELIVERYPLANTChanging(value)
				Me.SendPropertyChanging
				Me._DELIVERYPLANT = value
				Me.SendPropertyChanged("DELIVERYPLANT")
				Me.OnDELIVERYPLANTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRICINGGROUP", DbType:="NVarChar(6)")>  _
	Public Property PRICINGGROUP() As String
		Get
			Return Me._PRICINGGROUP
		End Get
		Set
			If (String.Equals(Me._PRICINGGROUP, value) = false) Then
				Me.OnPRICINGGROUPChanging(value)
				Me.SendPropertyChanging
				Me._PRICINGGROUP = value
				Me.SendPropertyChanged("PRICINGGROUP")
				Me.OnPRICINGGROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LAST_UPD_DATE", DbType:="NVarChar(24)")>  _
	Public Property LAST_UPD_DATE() As String
		Get
			Return Me._LAST_UPD_DATE
		End Get
		Set
			If (String.Equals(Me._LAST_UPD_DATE, value) = false) Then
				Me.OnLAST_UPD_DATEChanging(value)
				Me.SendPropertyChanging
				Me._LAST_UPD_DATE = value
				Me.SendPropertyChanged("LAST_UPD_DATE")
				Me.OnLAST_UPD_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MIN_ORD_QTY", DbType:="Int")>  _
	Public Property MIN_ORD_QTY() As System.Nullable(Of Integer)
		Get
			Return Me._MIN_ORD_QTY
		End Get
		Set
			If (Me._MIN_ORD_QTY.Equals(value) = false) Then
				Me.OnMIN_ORD_QTYChanging(value)
				Me.SendPropertyChanging
				Me._MIN_ORD_QTY = value
				Me.SendPropertyChanged("MIN_ORD_QTY")
				Me.OnMIN_ORD_QTYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MIN_DLV_QTY", DbType:="Int")>  _
	Public Property MIN_DLV_QTY() As System.Nullable(Of Integer)
		Get
			Return Me._MIN_DLV_QTY
		End Get
		Set
			If (Me._MIN_DLV_QTY.Equals(value) = false) Then
				Me.OnMIN_DLV_QTYChanging(value)
				Me.SendPropertyChanging
				Me._MIN_DLV_QTY = value
				Me.SendPropertyChanged("MIN_DLV_QTY")
				Me.OnMIN_DLV_QTYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Long
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.SAP_PRODUCT_STATUS")>  _
Partial Public Class SAP_PRODUCT_STATUS
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _PART_NO As String
	
	Private _SALES_ORG As String
	
	Private _DIST_CHANNEL As String
	
	Private _PRODUCT_STATUS As String
	
	Private _MIN_ORDER_QTY As System.Nullable(Of Decimal)
	
	Private _MIN_DLV_QTY As System.Nullable(Of Decimal)
	
	Private _MIN_BTO_QTY As System.Nullable(Of Decimal)
	
	Private _DLV_PLANT As String
	
	Private _MATERIAL_PRICING_GRP As String
	
	Private _VALID_DATE As String
	
	Private _ITEM_CATEGORY_GROUP As String
	
	Private _ID As Long
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPART_NOChanging(value As String)
    End Sub
    Partial Private Sub OnPART_NOChanged()
    End Sub
    Partial Private Sub OnSALES_ORGChanging(value As String)
    End Sub
    Partial Private Sub OnSALES_ORGChanged()
    End Sub
    Partial Private Sub OnDIST_CHANNELChanging(value As String)
    End Sub
    Partial Private Sub OnDIST_CHANNELChanged()
    End Sub
    Partial Private Sub OnPRODUCT_STATUSChanging(value As String)
    End Sub
    Partial Private Sub OnPRODUCT_STATUSChanged()
    End Sub
    Partial Private Sub OnMIN_ORDER_QTYChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnMIN_ORDER_QTYChanged()
    End Sub
    Partial Private Sub OnMIN_DLV_QTYChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnMIN_DLV_QTYChanged()
    End Sub
    Partial Private Sub OnMIN_BTO_QTYChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnMIN_BTO_QTYChanged()
    End Sub
    Partial Private Sub OnDLV_PLANTChanging(value As String)
    End Sub
    Partial Private Sub OnDLV_PLANTChanged()
    End Sub
    Partial Private Sub OnMATERIAL_PRICING_GRPChanging(value As String)
    End Sub
    Partial Private Sub OnMATERIAL_PRICING_GRPChanged()
    End Sub
    Partial Private Sub OnVALID_DATEChanging(value As String)
    End Sub
    Partial Private Sub OnVALID_DATEChanged()
    End Sub
    Partial Private Sub OnITEM_CATEGORY_GROUPChanging(value As String)
    End Sub
    Partial Private Sub OnITEM_CATEGORY_GROUPChanged()
    End Sub
    Partial Private Sub OnIDChanging(value As Long)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PART_NO", DbType:="NVarChar(54)")>  _
	Public Property PART_NO() As String
		Get
			Return Me._PART_NO
		End Get
		Set
			If (String.Equals(Me._PART_NO, value) = false) Then
				Me.OnPART_NOChanging(value)
				Me.SendPropertyChanging
				Me._PART_NO = value
				Me.SendPropertyChanged("PART_NO")
				Me.OnPART_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALES_ORG", DbType:="NVarChar(12)")>  _
	Public Property SALES_ORG() As String
		Get
			Return Me._SALES_ORG
		End Get
		Set
			If (String.Equals(Me._SALES_ORG, value) = false) Then
				Me.OnSALES_ORGChanging(value)
				Me.SendPropertyChanging
				Me._SALES_ORG = value
				Me.SendPropertyChanged("SALES_ORG")
				Me.OnSALES_ORGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIST_CHANNEL", DbType:="NVarChar(6)")>  _
	Public Property DIST_CHANNEL() As String
		Get
			Return Me._DIST_CHANNEL
		End Get
		Set
			If (String.Equals(Me._DIST_CHANNEL, value) = false) Then
				Me.OnDIST_CHANNELChanging(value)
				Me.SendPropertyChanging
				Me._DIST_CHANNEL = value
				Me.SendPropertyChanged("DIST_CHANNEL")
				Me.OnDIST_CHANNELChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCT_STATUS", DbType:="NVarChar(6)")>  _
	Public Property PRODUCT_STATUS() As String
		Get
			Return Me._PRODUCT_STATUS
		End Get
		Set
			If (String.Equals(Me._PRODUCT_STATUS, value) = false) Then
				Me.OnPRODUCT_STATUSChanging(value)
				Me.SendPropertyChanging
				Me._PRODUCT_STATUS = value
				Me.SendPropertyChanged("PRODUCT_STATUS")
				Me.OnPRODUCT_STATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MIN_ORDER_QTY", DbType:="Decimal(13,3)")>  _
	Public Property MIN_ORDER_QTY() As System.Nullable(Of Decimal)
		Get
			Return Me._MIN_ORDER_QTY
		End Get
		Set
			If (Me._MIN_ORDER_QTY.Equals(value) = false) Then
				Me.OnMIN_ORDER_QTYChanging(value)
				Me.SendPropertyChanging
				Me._MIN_ORDER_QTY = value
				Me.SendPropertyChanged("MIN_ORDER_QTY")
				Me.OnMIN_ORDER_QTYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MIN_DLV_QTY", DbType:="Decimal(13,3)")>  _
	Public Property MIN_DLV_QTY() As System.Nullable(Of Decimal)
		Get
			Return Me._MIN_DLV_QTY
		End Get
		Set
			If (Me._MIN_DLV_QTY.Equals(value) = false) Then
				Me.OnMIN_DLV_QTYChanging(value)
				Me.SendPropertyChanging
				Me._MIN_DLV_QTY = value
				Me.SendPropertyChanged("MIN_DLV_QTY")
				Me.OnMIN_DLV_QTYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MIN_BTO_QTY", DbType:="Decimal(13,3)")>  _
	Public Property MIN_BTO_QTY() As System.Nullable(Of Decimal)
		Get
			Return Me._MIN_BTO_QTY
		End Get
		Set
			If (Me._MIN_BTO_QTY.Equals(value) = false) Then
				Me.OnMIN_BTO_QTYChanging(value)
				Me.SendPropertyChanging
				Me._MIN_BTO_QTY = value
				Me.SendPropertyChanged("MIN_BTO_QTY")
				Me.OnMIN_BTO_QTYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DLV_PLANT", DbType:="NVarChar(12)")>  _
	Public Property DLV_PLANT() As String
		Get
			Return Me._DLV_PLANT
		End Get
		Set
			If (String.Equals(Me._DLV_PLANT, value) = false) Then
				Me.OnDLV_PLANTChanging(value)
				Me.SendPropertyChanging
				Me._DLV_PLANT = value
				Me.SendPropertyChanged("DLV_PLANT")
				Me.OnDLV_PLANTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MATERIAL_PRICING_GRP", DbType:="NVarChar(6)")>  _
	Public Property MATERIAL_PRICING_GRP() As String
		Get
			Return Me._MATERIAL_PRICING_GRP
		End Get
		Set
			If (String.Equals(Me._MATERIAL_PRICING_GRP, value) = false) Then
				Me.OnMATERIAL_PRICING_GRPChanging(value)
				Me.SendPropertyChanging
				Me._MATERIAL_PRICING_GRP = value
				Me.SendPropertyChanged("MATERIAL_PRICING_GRP")
				Me.OnMATERIAL_PRICING_GRPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VALID_DATE", DbType:="NVarChar(24)")>  _
	Public Property VALID_DATE() As String
		Get
			Return Me._VALID_DATE
		End Get
		Set
			If (String.Equals(Me._VALID_DATE, value) = false) Then
				Me.OnVALID_DATEChanging(value)
				Me.SendPropertyChanging
				Me._VALID_DATE = value
				Me.SendPropertyChanged("VALID_DATE")
				Me.OnVALID_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ITEM_CATEGORY_GROUP", DbType:="NVarChar(50)")>  _
	Public Property ITEM_CATEGORY_GROUP() As String
		Get
			Return Me._ITEM_CATEGORY_GROUP
		End Get
		Set
			If (String.Equals(Me._ITEM_CATEGORY_GROUP, value) = false) Then
				Me.OnITEM_CATEGORY_GROUPChanging(value)
				Me.SendPropertyChanging
				Me._ITEM_CATEGORY_GROUP = value
				Me.SendPropertyChanged("ITEM_CATEGORY_GROUP")
				Me.OnITEM_CATEGORY_GROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ID() As Long
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.SAP_PRODUCT_STATUS_ORDERABLE")>  _
Partial Public Class SAP_PRODUCT_STATUS_ORDERABLE
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _PART_NO As String
	
	Private _SALES_ORG As String
	
	Private _DIST_CHANNEL As String
	
	Private _PRODUCT_STATUS As String
	
	Private _MIN_ORDER_QTY As System.Nullable(Of Decimal)
	
	Private _MIN_DLV_QTY As System.Nullable(Of Decimal)
	
	Private _MIN_BTO_QTY As System.Nullable(Of Decimal)
	
	Private _DLV_PLANT As String
	
	Private _MATERIAL_PRICING_GRP As String
	
	Private _VALID_DATE As String
	
	Private _ITEM_CATEGORY_GROUP As String
	
	Private _id As Integer
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnPART_NOChanging(value As String)
    End Sub
    Partial Private Sub OnPART_NOChanged()
    End Sub
    Partial Private Sub OnSALES_ORGChanging(value As String)
    End Sub
    Partial Private Sub OnSALES_ORGChanged()
    End Sub
    Partial Private Sub OnDIST_CHANNELChanging(value As String)
    End Sub
    Partial Private Sub OnDIST_CHANNELChanged()
    End Sub
    Partial Private Sub OnPRODUCT_STATUSChanging(value As String)
    End Sub
    Partial Private Sub OnPRODUCT_STATUSChanged()
    End Sub
    Partial Private Sub OnMIN_ORDER_QTYChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnMIN_ORDER_QTYChanged()
    End Sub
    Partial Private Sub OnMIN_DLV_QTYChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnMIN_DLV_QTYChanged()
    End Sub
    Partial Private Sub OnMIN_BTO_QTYChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnMIN_BTO_QTYChanged()
    End Sub
    Partial Private Sub OnDLV_PLANTChanging(value As String)
    End Sub
    Partial Private Sub OnDLV_PLANTChanged()
    End Sub
    Partial Private Sub OnMATERIAL_PRICING_GRPChanging(value As String)
    End Sub
    Partial Private Sub OnMATERIAL_PRICING_GRPChanged()
    End Sub
    Partial Private Sub OnVALID_DATEChanging(value As String)
    End Sub
    Partial Private Sub OnVALID_DATEChanged()
    End Sub
    Partial Private Sub OnITEM_CATEGORY_GROUPChanging(value As String)
    End Sub
    Partial Private Sub OnITEM_CATEGORY_GROUPChanged()
    End Sub
    Partial Private Sub OnidChanging(value As Integer)
    End Sub
    Partial Private Sub OnidChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PART_NO", DbType:="NVarChar(54) NOT NULL", CanBeNull:=false)>  _
	Public Property PART_NO() As String
		Get
			Return Me._PART_NO
		End Get
		Set
			If (String.Equals(Me._PART_NO, value) = false) Then
				Me.OnPART_NOChanging(value)
				Me.SendPropertyChanging
				Me._PART_NO = value
				Me.SendPropertyChanged("PART_NO")
				Me.OnPART_NOChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SALES_ORG", DbType:="NVarChar(12)")>  _
	Public Property SALES_ORG() As String
		Get
			Return Me._SALES_ORG
		End Get
		Set
			If (String.Equals(Me._SALES_ORG, value) = false) Then
				Me.OnSALES_ORGChanging(value)
				Me.SendPropertyChanging
				Me._SALES_ORG = value
				Me.SendPropertyChanged("SALES_ORG")
				Me.OnSALES_ORGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DIST_CHANNEL", DbType:="NVarChar(6)")>  _
	Public Property DIST_CHANNEL() As String
		Get
			Return Me._DIST_CHANNEL
		End Get
		Set
			If (String.Equals(Me._DIST_CHANNEL, value) = false) Then
				Me.OnDIST_CHANNELChanging(value)
				Me.SendPropertyChanging
				Me._DIST_CHANNEL = value
				Me.SendPropertyChanged("DIST_CHANNEL")
				Me.OnDIST_CHANNELChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PRODUCT_STATUS", DbType:="NVarChar(6)")>  _
	Public Property PRODUCT_STATUS() As String
		Get
			Return Me._PRODUCT_STATUS
		End Get
		Set
			If (String.Equals(Me._PRODUCT_STATUS, value) = false) Then
				Me.OnPRODUCT_STATUSChanging(value)
				Me.SendPropertyChanging
				Me._PRODUCT_STATUS = value
				Me.SendPropertyChanged("PRODUCT_STATUS")
				Me.OnPRODUCT_STATUSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MIN_ORDER_QTY", DbType:="Decimal(13,3)")>  _
	Public Property MIN_ORDER_QTY() As System.Nullable(Of Decimal)
		Get
			Return Me._MIN_ORDER_QTY
		End Get
		Set
			If (Me._MIN_ORDER_QTY.Equals(value) = false) Then
				Me.OnMIN_ORDER_QTYChanging(value)
				Me.SendPropertyChanging
				Me._MIN_ORDER_QTY = value
				Me.SendPropertyChanged("MIN_ORDER_QTY")
				Me.OnMIN_ORDER_QTYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MIN_DLV_QTY", DbType:="Decimal(13,3)")>  _
	Public Property MIN_DLV_QTY() As System.Nullable(Of Decimal)
		Get
			Return Me._MIN_DLV_QTY
		End Get
		Set
			If (Me._MIN_DLV_QTY.Equals(value) = false) Then
				Me.OnMIN_DLV_QTYChanging(value)
				Me.SendPropertyChanging
				Me._MIN_DLV_QTY = value
				Me.SendPropertyChanged("MIN_DLV_QTY")
				Me.OnMIN_DLV_QTYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MIN_BTO_QTY", DbType:="Decimal(13,3)")>  _
	Public Property MIN_BTO_QTY() As System.Nullable(Of Decimal)
		Get
			Return Me._MIN_BTO_QTY
		End Get
		Set
			If (Me._MIN_BTO_QTY.Equals(value) = false) Then
				Me.OnMIN_BTO_QTYChanging(value)
				Me.SendPropertyChanging
				Me._MIN_BTO_QTY = value
				Me.SendPropertyChanged("MIN_BTO_QTY")
				Me.OnMIN_BTO_QTYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DLV_PLANT", DbType:="NVarChar(12)")>  _
	Public Property DLV_PLANT() As String
		Get
			Return Me._DLV_PLANT
		End Get
		Set
			If (String.Equals(Me._DLV_PLANT, value) = false) Then
				Me.OnDLV_PLANTChanging(value)
				Me.SendPropertyChanging
				Me._DLV_PLANT = value
				Me.SendPropertyChanged("DLV_PLANT")
				Me.OnDLV_PLANTChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MATERIAL_PRICING_GRP", DbType:="NVarChar(6)")>  _
	Public Property MATERIAL_PRICING_GRP() As String
		Get
			Return Me._MATERIAL_PRICING_GRP
		End Get
		Set
			If (String.Equals(Me._MATERIAL_PRICING_GRP, value) = false) Then
				Me.OnMATERIAL_PRICING_GRPChanging(value)
				Me.SendPropertyChanging
				Me._MATERIAL_PRICING_GRP = value
				Me.SendPropertyChanged("MATERIAL_PRICING_GRP")
				Me.OnMATERIAL_PRICING_GRPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VALID_DATE", DbType:="NVarChar(24)")>  _
	Public Property VALID_DATE() As String
		Get
			Return Me._VALID_DATE
		End Get
		Set
			If (String.Equals(Me._VALID_DATE, value) = false) Then
				Me.OnVALID_DATEChanging(value)
				Me.SendPropertyChanging
				Me._VALID_DATE = value
				Me.SendPropertyChanged("VALID_DATE")
				Me.OnVALID_DATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ITEM_CATEGORY_GROUP", DbType:="NVarChar(50)")>  _
	Public Property ITEM_CATEGORY_GROUP() As String
		Get
			Return Me._ITEM_CATEGORY_GROUP
		End Get
		Set
			If (String.Equals(Me._ITEM_CATEGORY_GROUP, value) = false) Then
				Me.OnITEM_CATEGORY_GROUPChanging(value)
				Me.SendPropertyChanging
				Me._ITEM_CATEGORY_GROUP = value
				Me.SendPropertyChanged("ITEM_CATEGORY_GROUP")
				Me.OnITEM_CATEGORY_GROUPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id() As Integer
		Get
			Return Me._id
		End Get
		Set
			If ((Me._id = value)  _
						= false) Then
				Me.OnidChanging(value)
				Me.SendPropertyChanging
				Me._id = value
				Me.SendPropertyChanged("id")
				Me.OnidChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
